syntax = "proto3";
option java_package = "com.mogujie.tt.protobuf";
option optimize_for = LITE_RUNTIME;

import "Interface_Macro.proto";

//平台初始化
//type:Pb_TYPE_MEET_INTERFACE_INITENV
//method: start
message	pbui_MeetCore_InitParam
{
	bytes       pconfigpathname=1;//client.ini文件路径名
	fixed32		logtofile=2;//保存日志到文件
	fixed32		streamnum=3;//初始化的流通道数
	fixed32		programtype=4;//程序类型 用于区分程序来初始化接口数据 参见Interface_Macro.proto--> Pb_ProgramType
}

//平台网络和数据初始化成功
//type:Pb_TYPE_MEET_INTERFACE_READY
//method: notify
//callback
message	pbui_Ready				
{
	fixed32		    areaid=1;//连接上的区域服务器ID
}

//平台时间
//type:Pb_TYPE_MEET_INTERFACE_TIME
//method: notify
//callback
message	pbui_Time		
{
	fixed64		    usec = 1;//本地时间，每秒一次 单位：微秒
}

//call
//type:需要缓存数据的类别
//method: cache 
//如果有缓存则返回ERROR_MEET_INTERFACE_NULL
message	pbui_MeetCacheOper	
{
	fixed32      cacheflag=1;// 缓存标志 参见Pb_CacheFlag

	//id用法描述 eg:需要缓存目录id=0表示缓存所有目录信息(不包括目录里的文件),当id=1时表示缓存该目录里的文件,如果id=0不支持则会返回ERROR_MEET_INTERFACE_PARAMETER
	fixed32		id=2;
}

//分页查询
//call
//type:需要查询的数据的类别
//method: pagequery 应用方调用
message	pbui_PageReqQueryInfo
{
	fixed32			pageindex=1;//请求页 从0 开始
	fixed32			pagenum=2;  //每页项数
	fixed32			idval=3;//用于分组使用,如：查询指分组中的人员,这里填写分组id
}

//分页查询返回结构头部
//callreturn
//type:需要查询的数据的类别
//method: pagequery 接口方返回
message	pbui_PageResQueryInfo
{
	fixed32			pageindex=1;//起始索引 从0 开始
	fixed32			pagenum=2;//每页项数
	fixed32			itemnum=3;//当前页项数 ,根据数据不同用不同的解析
	fixed32			totalnum=4;//总项数
	fixed32		    idval=5;//用于分组使用,如：查询指分组中的人员,这里填写分组id
}

//指定ID查询 返回结果按 query 返回
//call
//type:需要查询的数据的类别
//method: SINGLEQUERYBYID 应用方调用
message	pbui_QueryInfoByID
{
	fixed32 id=1;//用于分组使用,如：查询指分组中的人员,这里填写分组id
}

//指定名称查询 返回结果按 query 返回
//call
//type:需要查询的数据的类别
//method: SINGLEQUERYBYNAME 应用方调用
message	pbui_QueryInfoByName
{
	bytes name=1;
}

//指定双重ID查询 返回结果按 query 返回
//call
//type:需要查询的数据的类别
//method: SINGLEQUERYBYID 应用方调用
message	pbui_QueryInfoByDoubleID
{
	fixed32 id1=1;
	fixed32 id2=2;
}

//指定双重ID查询 返回结果按 query 返回
//call
//type:需要查询的数据的类别
//method: SINGLEQUERYBYNAME 应用方调用
message	pbui_DoubleQueryInfoByName
{
	fixed32 id1=1;
	bytes name=2;
}

//变更通知回调
//type:需要变更通知的数据的类别
//method: notify
message	pbui_MeetNotifyMsg
{
	fixed32 opermethod=1;//本次通知是因为opermethod方法触发的
	fixed32 id=2;//如果指定了ID刚表示是对特定ID的操作,为0表示全部
}

//变更通知回调
//type:需要变更通知的数据的类别
//method: notify
message	pbui_MeetNotifyMsgForDouble
{
	fixed32 opermethod=1;//本次通知是因为opermethod方法触发的
	fixed32 id=2;//如果指定了ID刚表示是对特定ID的操作,为0表示全部
	fixed32 subid=3;//如果指定了ID刚表示是对特定人员ID的操作,为0表示分组内的全部人员 
}

//call
//type:查询的属性类型
//method: queryproperty
message pbui_CommonQueryProperty
{
	fixed32 propertyid=1;//数据ID
	fixed32 parameterval=2;//传入参数 为0表示当前会场对应的信息
}

//返回32位无符号整形值
//callreturn
//type:查询的属性类型
//method: queryproperty
message pbui_CommonInt32uProperty
{
	fixed32 propertyval=1;//数据值
}

//返回64位无符号整形值
//callreturn
//type:查询的属性类型
//method: queryproperty
message pbui_CommonInt64uProperty
{
	fixed64 propertyval=1;//数据值
}

//返回字符串值
//callreturn
//type:查询的属性类型
//method: queryproperty
message pbui_CommonTextProperty
{
	bytes propertyval=1;//数据值
}

//会议网页
//type: Pb_TYPE_MEET_INTERFACE_DEFAULTURL
//method: notify,modify,query
message pbui_meetUrl
{
	bytes url=1;
}

//数据后台回复的错误信息
//callback
//type:Pb_TYPE_MEET_INTERFACE_DBSERVERERROR
//method: notify
message pbui_Type_MeetDBServerOperError
{
	fixed32  status=1;//参见 Pb_DB_StatusCode
}











