// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Interface_systemlog.proto

package com.mogujie.tt.protobuf;

public final class InterfaceSystemlog {
  private InterfaceSystemlog() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface pbui_Item_MeetSystemLogOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pbui_Item_MeetSystemLog)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *操作类别 参见STARG_ENUM
     * </pre>
     *
     * <code>fixed32 stage = 1;</code>
     */
    int getStage();

    /**
     * <pre>
     *操作方法 参见 METHOD_ENUM
     * </pre>
     *
     * <code>fixed32 method = 2;</code>
     */
    int getMethod();

    /**
     * <pre>
     *管理人员ID
     * </pre>
     *
     * <code>fixed32 adminid = 3;</code>
     */
    int getAdminid();

    /**
     * <pre>
     *操作的设备ID
     * </pre>
     *
     * <code>fixed32 deviceid = 4;</code>
     */
    int getDeviceid();

    /**
     * <pre>
     *操作的会议ID
     * </pre>
     *
     * <code>fixed32 meetingid = 5;</code>
     */
    int getMeetingid();

    /**
     * <pre>
     *操作utc时间 微秒
     * </pre>
     *
     * <code>fixed64 logtime = 6;</code>
     */
    long getLogtime();

    /**
     * <pre>
     *记录文本
     * </pre>
     *
     * <code>bytes logmsg = 7;</code>
     */
    com.google.protobuf.ByteString getLogmsg();
  }
  /**
   * <pre>
   *&#47;///////////////////////////////////////////////////////////////////////
   * /start systemlog
   * </pre>
   *
   * Protobuf type {@code pbui_Item_MeetSystemLog}
   */
  public  static final class pbui_Item_MeetSystemLog extends
      com.google.protobuf.GeneratedMessageLite<
          pbui_Item_MeetSystemLog, pbui_Item_MeetSystemLog.Builder> implements
      // @@protoc_insertion_point(message_implements:pbui_Item_MeetSystemLog)
      pbui_Item_MeetSystemLogOrBuilder {
    private pbui_Item_MeetSystemLog() {
      logmsg_ = com.google.protobuf.ByteString.EMPTY;
    }
    public static final int STAGE_FIELD_NUMBER = 1;
    private int stage_;
    /**
     * <pre>
     *操作类别 参见STARG_ENUM
     * </pre>
     *
     * <code>fixed32 stage = 1;</code>
     */
    public int getStage() {
      return stage_;
    }
    /**
     * <pre>
     *操作类别 参见STARG_ENUM
     * </pre>
     *
     * <code>fixed32 stage = 1;</code>
     */
    private void setStage(int value) {
      
      stage_ = value;
    }
    /**
     * <pre>
     *操作类别 参见STARG_ENUM
     * </pre>
     *
     * <code>fixed32 stage = 1;</code>
     */
    private void clearStage() {
      
      stage_ = 0;
    }

    public static final int METHOD_FIELD_NUMBER = 2;
    private int method_;
    /**
     * <pre>
     *操作方法 参见 METHOD_ENUM
     * </pre>
     *
     * <code>fixed32 method = 2;</code>
     */
    public int getMethod() {
      return method_;
    }
    /**
     * <pre>
     *操作方法 参见 METHOD_ENUM
     * </pre>
     *
     * <code>fixed32 method = 2;</code>
     */
    private void setMethod(int value) {
      
      method_ = value;
    }
    /**
     * <pre>
     *操作方法 参见 METHOD_ENUM
     * </pre>
     *
     * <code>fixed32 method = 2;</code>
     */
    private void clearMethod() {
      
      method_ = 0;
    }

    public static final int ADMINID_FIELD_NUMBER = 3;
    private int adminid_;
    /**
     * <pre>
     *管理人员ID
     * </pre>
     *
     * <code>fixed32 adminid = 3;</code>
     */
    public int getAdminid() {
      return adminid_;
    }
    /**
     * <pre>
     *管理人员ID
     * </pre>
     *
     * <code>fixed32 adminid = 3;</code>
     */
    private void setAdminid(int value) {
      
      adminid_ = value;
    }
    /**
     * <pre>
     *管理人员ID
     * </pre>
     *
     * <code>fixed32 adminid = 3;</code>
     */
    private void clearAdminid() {
      
      adminid_ = 0;
    }

    public static final int DEVICEID_FIELD_NUMBER = 4;
    private int deviceid_;
    /**
     * <pre>
     *操作的设备ID
     * </pre>
     *
     * <code>fixed32 deviceid = 4;</code>
     */
    public int getDeviceid() {
      return deviceid_;
    }
    /**
     * <pre>
     *操作的设备ID
     * </pre>
     *
     * <code>fixed32 deviceid = 4;</code>
     */
    private void setDeviceid(int value) {
      
      deviceid_ = value;
    }
    /**
     * <pre>
     *操作的设备ID
     * </pre>
     *
     * <code>fixed32 deviceid = 4;</code>
     */
    private void clearDeviceid() {
      
      deviceid_ = 0;
    }

    public static final int MEETINGID_FIELD_NUMBER = 5;
    private int meetingid_;
    /**
     * <pre>
     *操作的会议ID
     * </pre>
     *
     * <code>fixed32 meetingid = 5;</code>
     */
    public int getMeetingid() {
      return meetingid_;
    }
    /**
     * <pre>
     *操作的会议ID
     * </pre>
     *
     * <code>fixed32 meetingid = 5;</code>
     */
    private void setMeetingid(int value) {
      
      meetingid_ = value;
    }
    /**
     * <pre>
     *操作的会议ID
     * </pre>
     *
     * <code>fixed32 meetingid = 5;</code>
     */
    private void clearMeetingid() {
      
      meetingid_ = 0;
    }

    public static final int LOGTIME_FIELD_NUMBER = 6;
    private long logtime_;
    /**
     * <pre>
     *操作utc时间 微秒
     * </pre>
     *
     * <code>fixed64 logtime = 6;</code>
     */
    public long getLogtime() {
      return logtime_;
    }
    /**
     * <pre>
     *操作utc时间 微秒
     * </pre>
     *
     * <code>fixed64 logtime = 6;</code>
     */
    private void setLogtime(long value) {
      
      logtime_ = value;
    }
    /**
     * <pre>
     *操作utc时间 微秒
     * </pre>
     *
     * <code>fixed64 logtime = 6;</code>
     */
    private void clearLogtime() {
      
      logtime_ = 0L;
    }

    public static final int LOGMSG_FIELD_NUMBER = 7;
    private com.google.protobuf.ByteString logmsg_;
    /**
     * <pre>
     *记录文本
     * </pre>
     *
     * <code>bytes logmsg = 7;</code>
     */
    public com.google.protobuf.ByteString getLogmsg() {
      return logmsg_;
    }
    /**
     * <pre>
     *记录文本
     * </pre>
     *
     * <code>bytes logmsg = 7;</code>
     */
    private void setLogmsg(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      logmsg_ = value;
    }
    /**
     * <pre>
     *记录文本
     * </pre>
     *
     * <code>bytes logmsg = 7;</code>
     */
    private void clearLogmsg() {
      
      logmsg_ = getDefaultInstance().getLogmsg();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (stage_ != 0) {
        output.writeFixed32(1, stage_);
      }
      if (method_ != 0) {
        output.writeFixed32(2, method_);
      }
      if (adminid_ != 0) {
        output.writeFixed32(3, adminid_);
      }
      if (deviceid_ != 0) {
        output.writeFixed32(4, deviceid_);
      }
      if (meetingid_ != 0) {
        output.writeFixed32(5, meetingid_);
      }
      if (logtime_ != 0L) {
        output.writeFixed64(6, logtime_);
      }
      if (!logmsg_.isEmpty()) {
        output.writeBytes(7, logmsg_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (stage_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(1, stage_);
      }
      if (method_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(2, method_);
      }
      if (adminid_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(3, adminid_);
      }
      if (deviceid_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(4, deviceid_);
      }
      if (meetingid_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(5, meetingid_);
      }
      if (logtime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(6, logtime_);
      }
      if (!logmsg_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, logmsg_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Item_MeetSystemLog parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Item_MeetSystemLog parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Item_MeetSystemLog parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Item_MeetSystemLog parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Item_MeetSystemLog parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Item_MeetSystemLog parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Item_MeetSystemLog parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Item_MeetSystemLog parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Item_MeetSystemLog parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Item_MeetSystemLog parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Item_MeetSystemLog parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Item_MeetSystemLog parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Item_MeetSystemLog prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     *&#47;///////////////////////////////////////////////////////////////////////
     * /start systemlog
     * </pre>
     *
     * Protobuf type {@code pbui_Item_MeetSystemLog}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Item_MeetSystemLog, Builder> implements
        // @@protoc_insertion_point(builder_implements:pbui_Item_MeetSystemLog)
        com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Item_MeetSystemLogOrBuilder {
      // Construct using com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Item_MeetSystemLog.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *操作类别 参见STARG_ENUM
       * </pre>
       *
       * <code>fixed32 stage = 1;</code>
       */
      public int getStage() {
        return instance.getStage();
      }
      /**
       * <pre>
       *操作类别 参见STARG_ENUM
       * </pre>
       *
       * <code>fixed32 stage = 1;</code>
       */
      public Builder setStage(int value) {
        copyOnWrite();
        instance.setStage(value);
        return this;
      }
      /**
       * <pre>
       *操作类别 参见STARG_ENUM
       * </pre>
       *
       * <code>fixed32 stage = 1;</code>
       */
      public Builder clearStage() {
        copyOnWrite();
        instance.clearStage();
        return this;
      }

      /**
       * <pre>
       *操作方法 参见 METHOD_ENUM
       * </pre>
       *
       * <code>fixed32 method = 2;</code>
       */
      public int getMethod() {
        return instance.getMethod();
      }
      /**
       * <pre>
       *操作方法 参见 METHOD_ENUM
       * </pre>
       *
       * <code>fixed32 method = 2;</code>
       */
      public Builder setMethod(int value) {
        copyOnWrite();
        instance.setMethod(value);
        return this;
      }
      /**
       * <pre>
       *操作方法 参见 METHOD_ENUM
       * </pre>
       *
       * <code>fixed32 method = 2;</code>
       */
      public Builder clearMethod() {
        copyOnWrite();
        instance.clearMethod();
        return this;
      }

      /**
       * <pre>
       *管理人员ID
       * </pre>
       *
       * <code>fixed32 adminid = 3;</code>
       */
      public int getAdminid() {
        return instance.getAdminid();
      }
      /**
       * <pre>
       *管理人员ID
       * </pre>
       *
       * <code>fixed32 adminid = 3;</code>
       */
      public Builder setAdminid(int value) {
        copyOnWrite();
        instance.setAdminid(value);
        return this;
      }
      /**
       * <pre>
       *管理人员ID
       * </pre>
       *
       * <code>fixed32 adminid = 3;</code>
       */
      public Builder clearAdminid() {
        copyOnWrite();
        instance.clearAdminid();
        return this;
      }

      /**
       * <pre>
       *操作的设备ID
       * </pre>
       *
       * <code>fixed32 deviceid = 4;</code>
       */
      public int getDeviceid() {
        return instance.getDeviceid();
      }
      /**
       * <pre>
       *操作的设备ID
       * </pre>
       *
       * <code>fixed32 deviceid = 4;</code>
       */
      public Builder setDeviceid(int value) {
        copyOnWrite();
        instance.setDeviceid(value);
        return this;
      }
      /**
       * <pre>
       *操作的设备ID
       * </pre>
       *
       * <code>fixed32 deviceid = 4;</code>
       */
      public Builder clearDeviceid() {
        copyOnWrite();
        instance.clearDeviceid();
        return this;
      }

      /**
       * <pre>
       *操作的会议ID
       * </pre>
       *
       * <code>fixed32 meetingid = 5;</code>
       */
      public int getMeetingid() {
        return instance.getMeetingid();
      }
      /**
       * <pre>
       *操作的会议ID
       * </pre>
       *
       * <code>fixed32 meetingid = 5;</code>
       */
      public Builder setMeetingid(int value) {
        copyOnWrite();
        instance.setMeetingid(value);
        return this;
      }
      /**
       * <pre>
       *操作的会议ID
       * </pre>
       *
       * <code>fixed32 meetingid = 5;</code>
       */
      public Builder clearMeetingid() {
        copyOnWrite();
        instance.clearMeetingid();
        return this;
      }

      /**
       * <pre>
       *操作utc时间 微秒
       * </pre>
       *
       * <code>fixed64 logtime = 6;</code>
       */
      public long getLogtime() {
        return instance.getLogtime();
      }
      /**
       * <pre>
       *操作utc时间 微秒
       * </pre>
       *
       * <code>fixed64 logtime = 6;</code>
       */
      public Builder setLogtime(long value) {
        copyOnWrite();
        instance.setLogtime(value);
        return this;
      }
      /**
       * <pre>
       *操作utc时间 微秒
       * </pre>
       *
       * <code>fixed64 logtime = 6;</code>
       */
      public Builder clearLogtime() {
        copyOnWrite();
        instance.clearLogtime();
        return this;
      }

      /**
       * <pre>
       *记录文本
       * </pre>
       *
       * <code>bytes logmsg = 7;</code>
       */
      public com.google.protobuf.ByteString getLogmsg() {
        return instance.getLogmsg();
      }
      /**
       * <pre>
       *记录文本
       * </pre>
       *
       * <code>bytes logmsg = 7;</code>
       */
      public Builder setLogmsg(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setLogmsg(value);
        return this;
      }
      /**
       * <pre>
       *记录文本
       * </pre>
       *
       * <code>bytes logmsg = 7;</code>
       */
      public Builder clearLogmsg() {
        copyOnWrite();
        instance.clearLogmsg();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:pbui_Item_MeetSystemLog)
    }
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Item_MeetSystemLog();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Item_MeetSystemLog other = (com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Item_MeetSystemLog) arg1;
          stage_ = visitor.visitInt(stage_ != 0, stage_,
              other.stage_ != 0, other.stage_);
          method_ = visitor.visitInt(method_ != 0, method_,
              other.method_ != 0, other.method_);
          adminid_ = visitor.visitInt(adminid_ != 0, adminid_,
              other.adminid_ != 0, other.adminid_);
          deviceid_ = visitor.visitInt(deviceid_ != 0, deviceid_,
              other.deviceid_ != 0, other.deviceid_);
          meetingid_ = visitor.visitInt(meetingid_ != 0, meetingid_,
              other.meetingid_ != 0, other.meetingid_);
          logtime_ = visitor.visitLong(logtime_ != 0L, logtime_,
              other.logtime_ != 0L, other.logtime_);
          logmsg_ = visitor.visitByteString(logmsg_ != com.google.protobuf.ByteString.EMPTY, logmsg_,
              other.logmsg_ != com.google.protobuf.ByteString.EMPTY, other.logmsg_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 13: {

                  stage_ = input.readFixed32();
                  break;
                }
                case 21: {

                  method_ = input.readFixed32();
                  break;
                }
                case 29: {

                  adminid_ = input.readFixed32();
                  break;
                }
                case 37: {

                  deviceid_ = input.readFixed32();
                  break;
                }
                case 45: {

                  meetingid_ = input.readFixed32();
                  break;
                }
                case 49: {

                  logtime_ = input.readFixed64();
                  break;
                }
                case 58: {

                  logmsg_ = input.readBytes();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Item_MeetSystemLog.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:pbui_Item_MeetSystemLog)
    private static final com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Item_MeetSystemLog DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new pbui_Item_MeetSystemLog();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Item_MeetSystemLog getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<pbui_Item_MeetSystemLog> PARSER;

    public static com.google.protobuf.Parser<pbui_Item_MeetSystemLog> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface pbui_Type_MeetingMeetSystemLogOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pbui_Type_MeetingMeetSystemLog)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *查询返回用户传过来的开始行
     * </pre>
     *
     * <code>fixed32 startrow = 1;</code>
     */
    int getStartrow();

    /**
     * <pre>
     *是否为第一帧,如果评分太多,接下来的帧会在下次接收到后回调
     * </pre>
     *
     * <code>fixed32 isfirst = 2;</code>
     */
    int getIsfirst();

    /**
     * <code>repeated .pbui_Item_MeetSystemLog item = 3;</code>
     */
    java.util.List<com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Item_MeetSystemLog> 
        getItemList();
    /**
     * <code>repeated .pbui_Item_MeetSystemLog item = 3;</code>
     */
    com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Item_MeetSystemLog getItem(int index);
    /**
     * <code>repeated .pbui_Item_MeetSystemLog item = 3;</code>
     */
    int getItemCount();
  }
  /**
   * <pre>
   *管理日志 
   *stages：Pb_TYPE_MEET_INTERFACE_SYSTEMLOG
   *method:查询(数据库返回)
   * </pre>
   *
   * Protobuf type {@code pbui_Type_MeetingMeetSystemLog}
   */
  public  static final class pbui_Type_MeetingMeetSystemLog extends
      com.google.protobuf.GeneratedMessageLite<
          pbui_Type_MeetingMeetSystemLog, pbui_Type_MeetingMeetSystemLog.Builder> implements
      // @@protoc_insertion_point(message_implements:pbui_Type_MeetingMeetSystemLog)
      pbui_Type_MeetingMeetSystemLogOrBuilder {
    private pbui_Type_MeetingMeetSystemLog() {
      item_ = emptyProtobufList();
    }
    private int bitField0_;
    public static final int STARTROW_FIELD_NUMBER = 1;
    private int startrow_;
    /**
     * <pre>
     *查询返回用户传过来的开始行
     * </pre>
     *
     * <code>fixed32 startrow = 1;</code>
     */
    public int getStartrow() {
      return startrow_;
    }
    /**
     * <pre>
     *查询返回用户传过来的开始行
     * </pre>
     *
     * <code>fixed32 startrow = 1;</code>
     */
    private void setStartrow(int value) {
      
      startrow_ = value;
    }
    /**
     * <pre>
     *查询返回用户传过来的开始行
     * </pre>
     *
     * <code>fixed32 startrow = 1;</code>
     */
    private void clearStartrow() {
      
      startrow_ = 0;
    }

    public static final int ISFIRST_FIELD_NUMBER = 2;
    private int isfirst_;
    /**
     * <pre>
     *是否为第一帧,如果评分太多,接下来的帧会在下次接收到后回调
     * </pre>
     *
     * <code>fixed32 isfirst = 2;</code>
     */
    public int getIsfirst() {
      return isfirst_;
    }
    /**
     * <pre>
     *是否为第一帧,如果评分太多,接下来的帧会在下次接收到后回调
     * </pre>
     *
     * <code>fixed32 isfirst = 2;</code>
     */
    private void setIsfirst(int value) {
      
      isfirst_ = value;
    }
    /**
     * <pre>
     *是否为第一帧,如果评分太多,接下来的帧会在下次接收到后回调
     * </pre>
     *
     * <code>fixed32 isfirst = 2;</code>
     */
    private void clearIsfirst() {
      
      isfirst_ = 0;
    }

    public static final int ITEM_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.ProtobufList<com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Item_MeetSystemLog> item_;
    /**
     * <code>repeated .pbui_Item_MeetSystemLog item = 3;</code>
     */
    public java.util.List<com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Item_MeetSystemLog> getItemList() {
      return item_;
    }
    /**
     * <code>repeated .pbui_Item_MeetSystemLog item = 3;</code>
     */
    public java.util.List<? extends com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Item_MeetSystemLogOrBuilder> 
        getItemOrBuilderList() {
      return item_;
    }
    /**
     * <code>repeated .pbui_Item_MeetSystemLog item = 3;</code>
     */
    public int getItemCount() {
      return item_.size();
    }
    /**
     * <code>repeated .pbui_Item_MeetSystemLog item = 3;</code>
     */
    public com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Item_MeetSystemLog getItem(int index) {
      return item_.get(index);
    }
    /**
     * <code>repeated .pbui_Item_MeetSystemLog item = 3;</code>
     */
    public com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Item_MeetSystemLogOrBuilder getItemOrBuilder(
        int index) {
      return item_.get(index);
    }
    private void ensureItemIsMutable() {
      if (!item_.isModifiable()) {
        item_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(item_);
       }
    }

    /**
     * <code>repeated .pbui_Item_MeetSystemLog item = 3;</code>
     */
    private void setItem(
        int index, com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Item_MeetSystemLog value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureItemIsMutable();
      item_.set(index, value);
    }
    /**
     * <code>repeated .pbui_Item_MeetSystemLog item = 3;</code>
     */
    private void setItem(
        int index, com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Item_MeetSystemLog.Builder builderForValue) {
      ensureItemIsMutable();
      item_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .pbui_Item_MeetSystemLog item = 3;</code>
     */
    private void addItem(com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Item_MeetSystemLog value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureItemIsMutable();
      item_.add(value);
    }
    /**
     * <code>repeated .pbui_Item_MeetSystemLog item = 3;</code>
     */
    private void addItem(
        int index, com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Item_MeetSystemLog value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureItemIsMutable();
      item_.add(index, value);
    }
    /**
     * <code>repeated .pbui_Item_MeetSystemLog item = 3;</code>
     */
    private void addItem(
        com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Item_MeetSystemLog.Builder builderForValue) {
      ensureItemIsMutable();
      item_.add(builderForValue.build());
    }
    /**
     * <code>repeated .pbui_Item_MeetSystemLog item = 3;</code>
     */
    private void addItem(
        int index, com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Item_MeetSystemLog.Builder builderForValue) {
      ensureItemIsMutable();
      item_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .pbui_Item_MeetSystemLog item = 3;</code>
     */
    private void addAllItem(
        java.lang.Iterable<? extends com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Item_MeetSystemLog> values) {
      ensureItemIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, item_);
    }
    /**
     * <code>repeated .pbui_Item_MeetSystemLog item = 3;</code>
     */
    private void clearItem() {
      item_ = emptyProtobufList();
    }
    /**
     * <code>repeated .pbui_Item_MeetSystemLog item = 3;</code>
     */
    private void removeItem(int index) {
      ensureItemIsMutable();
      item_.remove(index);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (startrow_ != 0) {
        output.writeFixed32(1, startrow_);
      }
      if (isfirst_ != 0) {
        output.writeFixed32(2, isfirst_);
      }
      for (int i = 0; i < item_.size(); i++) {
        output.writeMessage(3, item_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (startrow_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(1, startrow_);
      }
      if (isfirst_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(2, isfirst_);
      }
      for (int i = 0; i < item_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, item_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Type_MeetingMeetSystemLog parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Type_MeetingMeetSystemLog parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Type_MeetingMeetSystemLog parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Type_MeetingMeetSystemLog parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Type_MeetingMeetSystemLog parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Type_MeetingMeetSystemLog parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Type_MeetingMeetSystemLog parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Type_MeetingMeetSystemLog parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Type_MeetingMeetSystemLog parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Type_MeetingMeetSystemLog parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Type_MeetingMeetSystemLog parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Type_MeetingMeetSystemLog parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Type_MeetingMeetSystemLog prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     *管理日志 
     *stages：Pb_TYPE_MEET_INTERFACE_SYSTEMLOG
     *method:查询(数据库返回)
     * </pre>
     *
     * Protobuf type {@code pbui_Type_MeetingMeetSystemLog}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Type_MeetingMeetSystemLog, Builder> implements
        // @@protoc_insertion_point(builder_implements:pbui_Type_MeetingMeetSystemLog)
        com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Type_MeetingMeetSystemLogOrBuilder {
      // Construct using com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Type_MeetingMeetSystemLog.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *查询返回用户传过来的开始行
       * </pre>
       *
       * <code>fixed32 startrow = 1;</code>
       */
      public int getStartrow() {
        return instance.getStartrow();
      }
      /**
       * <pre>
       *查询返回用户传过来的开始行
       * </pre>
       *
       * <code>fixed32 startrow = 1;</code>
       */
      public Builder setStartrow(int value) {
        copyOnWrite();
        instance.setStartrow(value);
        return this;
      }
      /**
       * <pre>
       *查询返回用户传过来的开始行
       * </pre>
       *
       * <code>fixed32 startrow = 1;</code>
       */
      public Builder clearStartrow() {
        copyOnWrite();
        instance.clearStartrow();
        return this;
      }

      /**
       * <pre>
       *是否为第一帧,如果评分太多,接下来的帧会在下次接收到后回调
       * </pre>
       *
       * <code>fixed32 isfirst = 2;</code>
       */
      public int getIsfirst() {
        return instance.getIsfirst();
      }
      /**
       * <pre>
       *是否为第一帧,如果评分太多,接下来的帧会在下次接收到后回调
       * </pre>
       *
       * <code>fixed32 isfirst = 2;</code>
       */
      public Builder setIsfirst(int value) {
        copyOnWrite();
        instance.setIsfirst(value);
        return this;
      }
      /**
       * <pre>
       *是否为第一帧,如果评分太多,接下来的帧会在下次接收到后回调
       * </pre>
       *
       * <code>fixed32 isfirst = 2;</code>
       */
      public Builder clearIsfirst() {
        copyOnWrite();
        instance.clearIsfirst();
        return this;
      }

      /**
       * <code>repeated .pbui_Item_MeetSystemLog item = 3;</code>
       */
      public java.util.List<com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Item_MeetSystemLog> getItemList() {
        return java.util.Collections.unmodifiableList(
            instance.getItemList());
      }
      /**
       * <code>repeated .pbui_Item_MeetSystemLog item = 3;</code>
       */
      public int getItemCount() {
        return instance.getItemCount();
      }/**
       * <code>repeated .pbui_Item_MeetSystemLog item = 3;</code>
       */
      public com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Item_MeetSystemLog getItem(int index) {
        return instance.getItem(index);
      }
      /**
       * <code>repeated .pbui_Item_MeetSystemLog item = 3;</code>
       */
      public Builder setItem(
          int index, com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Item_MeetSystemLog value) {
        copyOnWrite();
        instance.setItem(index, value);
        return this;
      }
      /**
       * <code>repeated .pbui_Item_MeetSystemLog item = 3;</code>
       */
      public Builder setItem(
          int index, com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Item_MeetSystemLog.Builder builderForValue) {
        copyOnWrite();
        instance.setItem(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .pbui_Item_MeetSystemLog item = 3;</code>
       */
      public Builder addItem(com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Item_MeetSystemLog value) {
        copyOnWrite();
        instance.addItem(value);
        return this;
      }
      /**
       * <code>repeated .pbui_Item_MeetSystemLog item = 3;</code>
       */
      public Builder addItem(
          int index, com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Item_MeetSystemLog value) {
        copyOnWrite();
        instance.addItem(index, value);
        return this;
      }
      /**
       * <code>repeated .pbui_Item_MeetSystemLog item = 3;</code>
       */
      public Builder addItem(
          com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Item_MeetSystemLog.Builder builderForValue) {
        copyOnWrite();
        instance.addItem(builderForValue);
        return this;
      }
      /**
       * <code>repeated .pbui_Item_MeetSystemLog item = 3;</code>
       */
      public Builder addItem(
          int index, com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Item_MeetSystemLog.Builder builderForValue) {
        copyOnWrite();
        instance.addItem(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .pbui_Item_MeetSystemLog item = 3;</code>
       */
      public Builder addAllItem(
          java.lang.Iterable<? extends com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Item_MeetSystemLog> values) {
        copyOnWrite();
        instance.addAllItem(values);
        return this;
      }
      /**
       * <code>repeated .pbui_Item_MeetSystemLog item = 3;</code>
       */
      public Builder clearItem() {
        copyOnWrite();
        instance.clearItem();
        return this;
      }
      /**
       * <code>repeated .pbui_Item_MeetSystemLog item = 3;</code>
       */
      public Builder removeItem(int index) {
        copyOnWrite();
        instance.removeItem(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:pbui_Type_MeetingMeetSystemLog)
    }
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Type_MeetingMeetSystemLog();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          item_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Type_MeetingMeetSystemLog other = (com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Type_MeetingMeetSystemLog) arg1;
          startrow_ = visitor.visitInt(startrow_ != 0, startrow_,
              other.startrow_ != 0, other.startrow_);
          isfirst_ = visitor.visitInt(isfirst_ != 0, isfirst_,
              other.isfirst_ != 0, other.isfirst_);
          item_= visitor.visitList(item_, other.item_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 13: {

                  startrow_ = input.readFixed32();
                  break;
                }
                case 21: {

                  isfirst_ = input.readFixed32();
                  break;
                }
                case 26: {
                  if (!item_.isModifiable()) {
                    item_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(item_);
                  }
                  item_.add(
                      input.readMessage(com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Item_MeetSystemLog.parser(), extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Type_MeetingMeetSystemLog.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:pbui_Type_MeetingMeetSystemLog)
    private static final com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Type_MeetingMeetSystemLog DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new pbui_Type_MeetingMeetSystemLog();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Type_MeetingMeetSystemLog getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<pbui_Type_MeetingMeetSystemLog> PARSER;

    public static com.google.protobuf.Parser<pbui_Type_MeetingMeetSystemLog> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface pbui_Type_QueryMeetSystemLogOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pbui_Type_QueryMeetSystemLog)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *操作类别 参见STARG_ENUM 可以为0表示所有类别
     * </pre>
     *
     * <code>fixed32 stage = 1;</code>
     */
    int getStage();

    /**
     * <pre>
     *操作方法  参见 METHOD_ENUM 可以为0表示所有方法
     * </pre>
     *
     * <code>fixed32 method = 2;</code>
     */
    int getMethod();

    /**
     * <pre>
     *会议ID 可以为0表示所有会议
     * </pre>
     *
     * <code>fixed32 meetingid = 3;</code>
     */
    int getMeetingid();

    /**
     * <pre>
     *管理人员ID 可以为0表示所有管理人员
     * </pre>
     *
     * <code>fixed32 adminid = 4;</code>
     */
    int getAdminid();

    /**
     * <pre>
     *操作的设备ID 可以为0表示所有设备
     * </pre>
     *
     * <code>fixed32 deviceid = 5;</code>
     */
    int getDeviceid();

    /**
     * <pre>
     *查询的起始记录utc时间 微秒 必须有效
     * </pre>
     *
     * <code>fixed64 startlogtime = 6;</code>
     */
    long getStartlogtime();

    /**
     * <pre>
     *查询的结束记录utc时间 微秒 必须有效
     * </pre>
     *
     * <code>fixed64 endlogtime = 7;</code>
     */
    long getEndlogtime();

    /**
     * <pre>
     *查询开始行 实现分页查询 必须有效
     * </pre>
     *
     * <code>fixed32 startrow = 8;</code>
     */
    int getStartrow();
  }
  /**
   * <pre>
   *管理日志 
   *stages：Pb_TYPE_MEET_INTERFACE_SYSTEMLOG
   *method:查询
   * </pre>
   *
   * Protobuf type {@code pbui_Type_QueryMeetSystemLog}
   */
  public  static final class pbui_Type_QueryMeetSystemLog extends
      com.google.protobuf.GeneratedMessageLite<
          pbui_Type_QueryMeetSystemLog, pbui_Type_QueryMeetSystemLog.Builder> implements
      // @@protoc_insertion_point(message_implements:pbui_Type_QueryMeetSystemLog)
      pbui_Type_QueryMeetSystemLogOrBuilder {
    private pbui_Type_QueryMeetSystemLog() {
    }
    public static final int STAGE_FIELD_NUMBER = 1;
    private int stage_;
    /**
     * <pre>
     *操作类别 参见STARG_ENUM 可以为0表示所有类别
     * </pre>
     *
     * <code>fixed32 stage = 1;</code>
     */
    public int getStage() {
      return stage_;
    }
    /**
     * <pre>
     *操作类别 参见STARG_ENUM 可以为0表示所有类别
     * </pre>
     *
     * <code>fixed32 stage = 1;</code>
     */
    private void setStage(int value) {
      
      stage_ = value;
    }
    /**
     * <pre>
     *操作类别 参见STARG_ENUM 可以为0表示所有类别
     * </pre>
     *
     * <code>fixed32 stage = 1;</code>
     */
    private void clearStage() {
      
      stage_ = 0;
    }

    public static final int METHOD_FIELD_NUMBER = 2;
    private int method_;
    /**
     * <pre>
     *操作方法  参见 METHOD_ENUM 可以为0表示所有方法
     * </pre>
     *
     * <code>fixed32 method = 2;</code>
     */
    public int getMethod() {
      return method_;
    }
    /**
     * <pre>
     *操作方法  参见 METHOD_ENUM 可以为0表示所有方法
     * </pre>
     *
     * <code>fixed32 method = 2;</code>
     */
    private void setMethod(int value) {
      
      method_ = value;
    }
    /**
     * <pre>
     *操作方法  参见 METHOD_ENUM 可以为0表示所有方法
     * </pre>
     *
     * <code>fixed32 method = 2;</code>
     */
    private void clearMethod() {
      
      method_ = 0;
    }

    public static final int MEETINGID_FIELD_NUMBER = 3;
    private int meetingid_;
    /**
     * <pre>
     *会议ID 可以为0表示所有会议
     * </pre>
     *
     * <code>fixed32 meetingid = 3;</code>
     */
    public int getMeetingid() {
      return meetingid_;
    }
    /**
     * <pre>
     *会议ID 可以为0表示所有会议
     * </pre>
     *
     * <code>fixed32 meetingid = 3;</code>
     */
    private void setMeetingid(int value) {
      
      meetingid_ = value;
    }
    /**
     * <pre>
     *会议ID 可以为0表示所有会议
     * </pre>
     *
     * <code>fixed32 meetingid = 3;</code>
     */
    private void clearMeetingid() {
      
      meetingid_ = 0;
    }

    public static final int ADMINID_FIELD_NUMBER = 4;
    private int adminid_;
    /**
     * <pre>
     *管理人员ID 可以为0表示所有管理人员
     * </pre>
     *
     * <code>fixed32 adminid = 4;</code>
     */
    public int getAdminid() {
      return adminid_;
    }
    /**
     * <pre>
     *管理人员ID 可以为0表示所有管理人员
     * </pre>
     *
     * <code>fixed32 adminid = 4;</code>
     */
    private void setAdminid(int value) {
      
      adminid_ = value;
    }
    /**
     * <pre>
     *管理人员ID 可以为0表示所有管理人员
     * </pre>
     *
     * <code>fixed32 adminid = 4;</code>
     */
    private void clearAdminid() {
      
      adminid_ = 0;
    }

    public static final int DEVICEID_FIELD_NUMBER = 5;
    private int deviceid_;
    /**
     * <pre>
     *操作的设备ID 可以为0表示所有设备
     * </pre>
     *
     * <code>fixed32 deviceid = 5;</code>
     */
    public int getDeviceid() {
      return deviceid_;
    }
    /**
     * <pre>
     *操作的设备ID 可以为0表示所有设备
     * </pre>
     *
     * <code>fixed32 deviceid = 5;</code>
     */
    private void setDeviceid(int value) {
      
      deviceid_ = value;
    }
    /**
     * <pre>
     *操作的设备ID 可以为0表示所有设备
     * </pre>
     *
     * <code>fixed32 deviceid = 5;</code>
     */
    private void clearDeviceid() {
      
      deviceid_ = 0;
    }

    public static final int STARTLOGTIME_FIELD_NUMBER = 6;
    private long startlogtime_;
    /**
     * <pre>
     *查询的起始记录utc时间 微秒 必须有效
     * </pre>
     *
     * <code>fixed64 startlogtime = 6;</code>
     */
    public long getStartlogtime() {
      return startlogtime_;
    }
    /**
     * <pre>
     *查询的起始记录utc时间 微秒 必须有效
     * </pre>
     *
     * <code>fixed64 startlogtime = 6;</code>
     */
    private void setStartlogtime(long value) {
      
      startlogtime_ = value;
    }
    /**
     * <pre>
     *查询的起始记录utc时间 微秒 必须有效
     * </pre>
     *
     * <code>fixed64 startlogtime = 6;</code>
     */
    private void clearStartlogtime() {
      
      startlogtime_ = 0L;
    }

    public static final int ENDLOGTIME_FIELD_NUMBER = 7;
    private long endlogtime_;
    /**
     * <pre>
     *查询的结束记录utc时间 微秒 必须有效
     * </pre>
     *
     * <code>fixed64 endlogtime = 7;</code>
     */
    public long getEndlogtime() {
      return endlogtime_;
    }
    /**
     * <pre>
     *查询的结束记录utc时间 微秒 必须有效
     * </pre>
     *
     * <code>fixed64 endlogtime = 7;</code>
     */
    private void setEndlogtime(long value) {
      
      endlogtime_ = value;
    }
    /**
     * <pre>
     *查询的结束记录utc时间 微秒 必须有效
     * </pre>
     *
     * <code>fixed64 endlogtime = 7;</code>
     */
    private void clearEndlogtime() {
      
      endlogtime_ = 0L;
    }

    public static final int STARTROW_FIELD_NUMBER = 8;
    private int startrow_;
    /**
     * <pre>
     *查询开始行 实现分页查询 必须有效
     * </pre>
     *
     * <code>fixed32 startrow = 8;</code>
     */
    public int getStartrow() {
      return startrow_;
    }
    /**
     * <pre>
     *查询开始行 实现分页查询 必须有效
     * </pre>
     *
     * <code>fixed32 startrow = 8;</code>
     */
    private void setStartrow(int value) {
      
      startrow_ = value;
    }
    /**
     * <pre>
     *查询开始行 实现分页查询 必须有效
     * </pre>
     *
     * <code>fixed32 startrow = 8;</code>
     */
    private void clearStartrow() {
      
      startrow_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (stage_ != 0) {
        output.writeFixed32(1, stage_);
      }
      if (method_ != 0) {
        output.writeFixed32(2, method_);
      }
      if (meetingid_ != 0) {
        output.writeFixed32(3, meetingid_);
      }
      if (adminid_ != 0) {
        output.writeFixed32(4, adminid_);
      }
      if (deviceid_ != 0) {
        output.writeFixed32(5, deviceid_);
      }
      if (startlogtime_ != 0L) {
        output.writeFixed64(6, startlogtime_);
      }
      if (endlogtime_ != 0L) {
        output.writeFixed64(7, endlogtime_);
      }
      if (startrow_ != 0) {
        output.writeFixed32(8, startrow_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (stage_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(1, stage_);
      }
      if (method_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(2, method_);
      }
      if (meetingid_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(3, meetingid_);
      }
      if (adminid_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(4, adminid_);
      }
      if (deviceid_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(5, deviceid_);
      }
      if (startlogtime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(6, startlogtime_);
      }
      if (endlogtime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed64Size(7, endlogtime_);
      }
      if (startrow_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFixed32Size(8, startrow_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Type_QueryMeetSystemLog parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Type_QueryMeetSystemLog parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Type_QueryMeetSystemLog parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Type_QueryMeetSystemLog parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Type_QueryMeetSystemLog parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Type_QueryMeetSystemLog parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Type_QueryMeetSystemLog parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Type_QueryMeetSystemLog parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Type_QueryMeetSystemLog parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Type_QueryMeetSystemLog parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Type_QueryMeetSystemLog parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Type_QueryMeetSystemLog parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Type_QueryMeetSystemLog prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     *管理日志 
     *stages：Pb_TYPE_MEET_INTERFACE_SYSTEMLOG
     *method:查询
     * </pre>
     *
     * Protobuf type {@code pbui_Type_QueryMeetSystemLog}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Type_QueryMeetSystemLog, Builder> implements
        // @@protoc_insertion_point(builder_implements:pbui_Type_QueryMeetSystemLog)
        com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Type_QueryMeetSystemLogOrBuilder {
      // Construct using com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Type_QueryMeetSystemLog.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *操作类别 参见STARG_ENUM 可以为0表示所有类别
       * </pre>
       *
       * <code>fixed32 stage = 1;</code>
       */
      public int getStage() {
        return instance.getStage();
      }
      /**
       * <pre>
       *操作类别 参见STARG_ENUM 可以为0表示所有类别
       * </pre>
       *
       * <code>fixed32 stage = 1;</code>
       */
      public Builder setStage(int value) {
        copyOnWrite();
        instance.setStage(value);
        return this;
      }
      /**
       * <pre>
       *操作类别 参见STARG_ENUM 可以为0表示所有类别
       * </pre>
       *
       * <code>fixed32 stage = 1;</code>
       */
      public Builder clearStage() {
        copyOnWrite();
        instance.clearStage();
        return this;
      }

      /**
       * <pre>
       *操作方法  参见 METHOD_ENUM 可以为0表示所有方法
       * </pre>
       *
       * <code>fixed32 method = 2;</code>
       */
      public int getMethod() {
        return instance.getMethod();
      }
      /**
       * <pre>
       *操作方法  参见 METHOD_ENUM 可以为0表示所有方法
       * </pre>
       *
       * <code>fixed32 method = 2;</code>
       */
      public Builder setMethod(int value) {
        copyOnWrite();
        instance.setMethod(value);
        return this;
      }
      /**
       * <pre>
       *操作方法  参见 METHOD_ENUM 可以为0表示所有方法
       * </pre>
       *
       * <code>fixed32 method = 2;</code>
       */
      public Builder clearMethod() {
        copyOnWrite();
        instance.clearMethod();
        return this;
      }

      /**
       * <pre>
       *会议ID 可以为0表示所有会议
       * </pre>
       *
       * <code>fixed32 meetingid = 3;</code>
       */
      public int getMeetingid() {
        return instance.getMeetingid();
      }
      /**
       * <pre>
       *会议ID 可以为0表示所有会议
       * </pre>
       *
       * <code>fixed32 meetingid = 3;</code>
       */
      public Builder setMeetingid(int value) {
        copyOnWrite();
        instance.setMeetingid(value);
        return this;
      }
      /**
       * <pre>
       *会议ID 可以为0表示所有会议
       * </pre>
       *
       * <code>fixed32 meetingid = 3;</code>
       */
      public Builder clearMeetingid() {
        copyOnWrite();
        instance.clearMeetingid();
        return this;
      }

      /**
       * <pre>
       *管理人员ID 可以为0表示所有管理人员
       * </pre>
       *
       * <code>fixed32 adminid = 4;</code>
       */
      public int getAdminid() {
        return instance.getAdminid();
      }
      /**
       * <pre>
       *管理人员ID 可以为0表示所有管理人员
       * </pre>
       *
       * <code>fixed32 adminid = 4;</code>
       */
      public Builder setAdminid(int value) {
        copyOnWrite();
        instance.setAdminid(value);
        return this;
      }
      /**
       * <pre>
       *管理人员ID 可以为0表示所有管理人员
       * </pre>
       *
       * <code>fixed32 adminid = 4;</code>
       */
      public Builder clearAdminid() {
        copyOnWrite();
        instance.clearAdminid();
        return this;
      }

      /**
       * <pre>
       *操作的设备ID 可以为0表示所有设备
       * </pre>
       *
       * <code>fixed32 deviceid = 5;</code>
       */
      public int getDeviceid() {
        return instance.getDeviceid();
      }
      /**
       * <pre>
       *操作的设备ID 可以为0表示所有设备
       * </pre>
       *
       * <code>fixed32 deviceid = 5;</code>
       */
      public Builder setDeviceid(int value) {
        copyOnWrite();
        instance.setDeviceid(value);
        return this;
      }
      /**
       * <pre>
       *操作的设备ID 可以为0表示所有设备
       * </pre>
       *
       * <code>fixed32 deviceid = 5;</code>
       */
      public Builder clearDeviceid() {
        copyOnWrite();
        instance.clearDeviceid();
        return this;
      }

      /**
       * <pre>
       *查询的起始记录utc时间 微秒 必须有效
       * </pre>
       *
       * <code>fixed64 startlogtime = 6;</code>
       */
      public long getStartlogtime() {
        return instance.getStartlogtime();
      }
      /**
       * <pre>
       *查询的起始记录utc时间 微秒 必须有效
       * </pre>
       *
       * <code>fixed64 startlogtime = 6;</code>
       */
      public Builder setStartlogtime(long value) {
        copyOnWrite();
        instance.setStartlogtime(value);
        return this;
      }
      /**
       * <pre>
       *查询的起始记录utc时间 微秒 必须有效
       * </pre>
       *
       * <code>fixed64 startlogtime = 6;</code>
       */
      public Builder clearStartlogtime() {
        copyOnWrite();
        instance.clearStartlogtime();
        return this;
      }

      /**
       * <pre>
       *查询的结束记录utc时间 微秒 必须有效
       * </pre>
       *
       * <code>fixed64 endlogtime = 7;</code>
       */
      public long getEndlogtime() {
        return instance.getEndlogtime();
      }
      /**
       * <pre>
       *查询的结束记录utc时间 微秒 必须有效
       * </pre>
       *
       * <code>fixed64 endlogtime = 7;</code>
       */
      public Builder setEndlogtime(long value) {
        copyOnWrite();
        instance.setEndlogtime(value);
        return this;
      }
      /**
       * <pre>
       *查询的结束记录utc时间 微秒 必须有效
       * </pre>
       *
       * <code>fixed64 endlogtime = 7;</code>
       */
      public Builder clearEndlogtime() {
        copyOnWrite();
        instance.clearEndlogtime();
        return this;
      }

      /**
       * <pre>
       *查询开始行 实现分页查询 必须有效
       * </pre>
       *
       * <code>fixed32 startrow = 8;</code>
       */
      public int getStartrow() {
        return instance.getStartrow();
      }
      /**
       * <pre>
       *查询开始行 实现分页查询 必须有效
       * </pre>
       *
       * <code>fixed32 startrow = 8;</code>
       */
      public Builder setStartrow(int value) {
        copyOnWrite();
        instance.setStartrow(value);
        return this;
      }
      /**
       * <pre>
       *查询开始行 实现分页查询 必须有效
       * </pre>
       *
       * <code>fixed32 startrow = 8;</code>
       */
      public Builder clearStartrow() {
        copyOnWrite();
        instance.clearStartrow();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:pbui_Type_QueryMeetSystemLog)
    }
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Type_QueryMeetSystemLog();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Type_QueryMeetSystemLog other = (com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Type_QueryMeetSystemLog) arg1;
          stage_ = visitor.visitInt(stage_ != 0, stage_,
              other.stage_ != 0, other.stage_);
          method_ = visitor.visitInt(method_ != 0, method_,
              other.method_ != 0, other.method_);
          meetingid_ = visitor.visitInt(meetingid_ != 0, meetingid_,
              other.meetingid_ != 0, other.meetingid_);
          adminid_ = visitor.visitInt(adminid_ != 0, adminid_,
              other.adminid_ != 0, other.adminid_);
          deviceid_ = visitor.visitInt(deviceid_ != 0, deviceid_,
              other.deviceid_ != 0, other.deviceid_);
          startlogtime_ = visitor.visitLong(startlogtime_ != 0L, startlogtime_,
              other.startlogtime_ != 0L, other.startlogtime_);
          endlogtime_ = visitor.visitLong(endlogtime_ != 0L, endlogtime_,
              other.endlogtime_ != 0L, other.endlogtime_);
          startrow_ = visitor.visitInt(startrow_ != 0, startrow_,
              other.startrow_ != 0, other.startrow_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 13: {

                  stage_ = input.readFixed32();
                  break;
                }
                case 21: {

                  method_ = input.readFixed32();
                  break;
                }
                case 29: {

                  meetingid_ = input.readFixed32();
                  break;
                }
                case 37: {

                  adminid_ = input.readFixed32();
                  break;
                }
                case 45: {

                  deviceid_ = input.readFixed32();
                  break;
                }
                case 49: {

                  startlogtime_ = input.readFixed64();
                  break;
                }
                case 57: {

                  endlogtime_ = input.readFixed64();
                  break;
                }
                case 69: {

                  startrow_ = input.readFixed32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Type_QueryMeetSystemLog.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:pbui_Type_QueryMeetSystemLog)
    private static final com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Type_QueryMeetSystemLog DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new pbui_Type_QueryMeetSystemLog();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.mogujie.tt.protobuf.InterfaceSystemlog.pbui_Type_QueryMeetSystemLog getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<pbui_Type_QueryMeetSystemLog> PARSER;

    public static com.google.protobuf.Parser<pbui_Type_QueryMeetSystemLog> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
