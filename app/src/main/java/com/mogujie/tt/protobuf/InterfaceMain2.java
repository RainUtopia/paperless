// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Interface_main2.proto

package com.mogujie.tt.protobuf;

public final class InterfaceMain2 {
    private InterfaceMain2() {}
    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistryLite registry) {
    }
    public interface pbui_Item_MeetSystemLogOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Item_MeetSystemLog)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <pre>
         *操作类别 参见STARG_ENUM
         * </pre>
         *
         * <code>fixed32 stage = 1;</code>
         */
        int getStage();

        /**
         * <pre>
         *操作方法 参见 METHOD_ENUM
         * </pre>
         *
         * <code>fixed32 method = 2;</code>
         */
        int getMethod();

        /**
         * <pre>
         *管理人员ID
         * </pre>
         *
         * <code>fixed32 adminid = 3;</code>
         */
        int getAdminid();

        /**
         * <pre>
         *操作的设备ID
         * </pre>
         *
         * <code>fixed32 deviceid = 4;</code>
         */
        int getDeviceid();

        /**
         * <pre>
         *操作的会议ID
         * </pre>
         *
         * <code>fixed32 meetingid = 5;</code>
         */
        int getMeetingid();

        /**
         * <pre>
         *操作utc时间 微秒
         * </pre>
         *
         * <code>fixed64 logtime = 6;</code>
         */
        long getLogtime();

        /**
         * <pre>
         *记录文本
         * </pre>
         *
         * <code>bytes logmsg = 7;</code>
         */
        com.google.protobuf.ByteString getLogmsg();
    }
    /**
     * <pre>
     *&#47;///////////////////////////////////////////////////////////////////////
     * /start systemlog
     * </pre>
     *
     * Protobuf type {@code pbui_Item_MeetSystemLog}
     */
    public  static final class pbui_Item_MeetSystemLog extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Item_MeetSystemLog, pbui_Item_MeetSystemLog.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Item_MeetSystemLog)
            pbui_Item_MeetSystemLogOrBuilder {
        private pbui_Item_MeetSystemLog() {
            logmsg_ = com.google.protobuf.ByteString.EMPTY;
        }
        public static final int STAGE_FIELD_NUMBER = 1;
        private int stage_;
        /**
         * <pre>
         *操作类别 参见STARG_ENUM
         * </pre>
         *
         * <code>fixed32 stage = 1;</code>
         */
        public int getStage() {
            return stage_;
        }
        /**
         * <pre>
         *操作类别 参见STARG_ENUM
         * </pre>
         *
         * <code>fixed32 stage = 1;</code>
         */
        private void setStage(int value) {

            stage_ = value;
        }
        /**
         * <pre>
         *操作类别 参见STARG_ENUM
         * </pre>
         *
         * <code>fixed32 stage = 1;</code>
         */
        private void clearStage() {

            stage_ = 0;
        }

        public static final int METHOD_FIELD_NUMBER = 2;
        private int method_;
        /**
         * <pre>
         *操作方法 参见 METHOD_ENUM
         * </pre>
         *
         * <code>fixed32 method = 2;</code>
         */
        public int getMethod() {
            return method_;
        }
        /**
         * <pre>
         *操作方法 参见 METHOD_ENUM
         * </pre>
         *
         * <code>fixed32 method = 2;</code>
         */
        private void setMethod(int value) {

            method_ = value;
        }
        /**
         * <pre>
         *操作方法 参见 METHOD_ENUM
         * </pre>
         *
         * <code>fixed32 method = 2;</code>
         */
        private void clearMethod() {

            method_ = 0;
        }

        public static final int ADMINID_FIELD_NUMBER = 3;
        private int adminid_;
        /**
         * <pre>
         *管理人员ID
         * </pre>
         *
         * <code>fixed32 adminid = 3;</code>
         */
        public int getAdminid() {
            return adminid_;
        }
        /**
         * <pre>
         *管理人员ID
         * </pre>
         *
         * <code>fixed32 adminid = 3;</code>
         */
        private void setAdminid(int value) {

            adminid_ = value;
        }
        /**
         * <pre>
         *管理人员ID
         * </pre>
         *
         * <code>fixed32 adminid = 3;</code>
         */
        private void clearAdminid() {

            adminid_ = 0;
        }

        public static final int DEVICEID_FIELD_NUMBER = 4;
        private int deviceid_;
        /**
         * <pre>
         *操作的设备ID
         * </pre>
         *
         * <code>fixed32 deviceid = 4;</code>
         */
        public int getDeviceid() {
            return deviceid_;
        }
        /**
         * <pre>
         *操作的设备ID
         * </pre>
         *
         * <code>fixed32 deviceid = 4;</code>
         */
        private void setDeviceid(int value) {

            deviceid_ = value;
        }
        /**
         * <pre>
         *操作的设备ID
         * </pre>
         *
         * <code>fixed32 deviceid = 4;</code>
         */
        private void clearDeviceid() {

            deviceid_ = 0;
        }

        public static final int MEETINGID_FIELD_NUMBER = 5;
        private int meetingid_;
        /**
         * <pre>
         *操作的会议ID
         * </pre>
         *
         * <code>fixed32 meetingid = 5;</code>
         */
        public int getMeetingid() {
            return meetingid_;
        }
        /**
         * <pre>
         *操作的会议ID
         * </pre>
         *
         * <code>fixed32 meetingid = 5;</code>
         */
        private void setMeetingid(int value) {

            meetingid_ = value;
        }
        /**
         * <pre>
         *操作的会议ID
         * </pre>
         *
         * <code>fixed32 meetingid = 5;</code>
         */
        private void clearMeetingid() {

            meetingid_ = 0;
        }

        public static final int LOGTIME_FIELD_NUMBER = 6;
        private long logtime_;
        /**
         * <pre>
         *操作utc时间 微秒
         * </pre>
         *
         * <code>fixed64 logtime = 6;</code>
         */
        public long getLogtime() {
            return logtime_;
        }
        /**
         * <pre>
         *操作utc时间 微秒
         * </pre>
         *
         * <code>fixed64 logtime = 6;</code>
         */
        private void setLogtime(long value) {

            logtime_ = value;
        }
        /**
         * <pre>
         *操作utc时间 微秒
         * </pre>
         *
         * <code>fixed64 logtime = 6;</code>
         */
        private void clearLogtime() {

            logtime_ = 0L;
        }

        public static final int LOGMSG_FIELD_NUMBER = 7;
        private com.google.protobuf.ByteString logmsg_;
        /**
         * <pre>
         *记录文本
         * </pre>
         *
         * <code>bytes logmsg = 7;</code>
         */
        public com.google.protobuf.ByteString getLogmsg() {
            return logmsg_;
        }
        /**
         * <pre>
         *记录文本
         * </pre>
         *
         * <code>bytes logmsg = 7;</code>
         */
        private void setLogmsg(com.google.protobuf.ByteString value) {
            if (value == null) {
                throw new NullPointerException();
            }

            logmsg_ = value;
        }
        /**
         * <pre>
         *记录文本
         * </pre>
         *
         * <code>bytes logmsg = 7;</code>
         */
        private void clearLogmsg() {

            logmsg_ = getDefaultInstance().getLogmsg();
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (stage_ != 0) {
                output.writeFixed32(1, stage_);
            }
            if (method_ != 0) {
                output.writeFixed32(2, method_);
            }
            if (adminid_ != 0) {
                output.writeFixed32(3, adminid_);
            }
            if (deviceid_ != 0) {
                output.writeFixed32(4, deviceid_);
            }
            if (meetingid_ != 0) {
                output.writeFixed32(5, meetingid_);
            }
            if (logtime_ != 0L) {
                output.writeFixed64(6, logtime_);
            }
            if (!logmsg_.isEmpty()) {
                output.writeBytes(7, logmsg_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (stage_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(1, stage_);
            }
            if (method_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(2, method_);
            }
            if (adminid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(3, adminid_);
            }
            if (deviceid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(4, deviceid_);
            }
            if (meetingid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(5, meetingid_);
            }
            if (logtime_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed64Size(6, logtime_);
            }
            if (!logmsg_.isEmpty()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(7, logmsg_);
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSystemLog parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSystemLog parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSystemLog parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSystemLog parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSystemLog parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSystemLog parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSystemLog parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSystemLog parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSystemLog parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSystemLog parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSystemLog parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSystemLog parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSystemLog prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *&#47;///////////////////////////////////////////////////////////////////////
         * /start systemlog
         * </pre>
         *
         * Protobuf type {@code pbui_Item_MeetSystemLog}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSystemLog, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Item_MeetSystemLog)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSystemLogOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSystemLog.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <pre>
             *操作类别 参见STARG_ENUM
             * </pre>
             *
             * <code>fixed32 stage = 1;</code>
             */
            public int getStage() {
                return instance.getStage();
            }
            /**
             * <pre>
             *操作类别 参见STARG_ENUM
             * </pre>
             *
             * <code>fixed32 stage = 1;</code>
             */
            public Builder setStage(int value) {
                copyOnWrite();
                instance.setStage(value);
                return this;
            }
            /**
             * <pre>
             *操作类别 参见STARG_ENUM
             * </pre>
             *
             * <code>fixed32 stage = 1;</code>
             */
            public Builder clearStage() {
                copyOnWrite();
                instance.clearStage();
                return this;
            }

            /**
             * <pre>
             *操作方法 参见 METHOD_ENUM
             * </pre>
             *
             * <code>fixed32 method = 2;</code>
             */
            public int getMethod() {
                return instance.getMethod();
            }
            /**
             * <pre>
             *操作方法 参见 METHOD_ENUM
             * </pre>
             *
             * <code>fixed32 method = 2;</code>
             */
            public Builder setMethod(int value) {
                copyOnWrite();
                instance.setMethod(value);
                return this;
            }
            /**
             * <pre>
             *操作方法 参见 METHOD_ENUM
             * </pre>
             *
             * <code>fixed32 method = 2;</code>
             */
            public Builder clearMethod() {
                copyOnWrite();
                instance.clearMethod();
                return this;
            }

            /**
             * <pre>
             *管理人员ID
             * </pre>
             *
             * <code>fixed32 adminid = 3;</code>
             */
            public int getAdminid() {
                return instance.getAdminid();
            }
            /**
             * <pre>
             *管理人员ID
             * </pre>
             *
             * <code>fixed32 adminid = 3;</code>
             */
            public Builder setAdminid(int value) {
                copyOnWrite();
                instance.setAdminid(value);
                return this;
            }
            /**
             * <pre>
             *管理人员ID
             * </pre>
             *
             * <code>fixed32 adminid = 3;</code>
             */
            public Builder clearAdminid() {
                copyOnWrite();
                instance.clearAdminid();
                return this;
            }

            /**
             * <pre>
             *操作的设备ID
             * </pre>
             *
             * <code>fixed32 deviceid = 4;</code>
             */
            public int getDeviceid() {
                return instance.getDeviceid();
            }
            /**
             * <pre>
             *操作的设备ID
             * </pre>
             *
             * <code>fixed32 deviceid = 4;</code>
             */
            public Builder setDeviceid(int value) {
                copyOnWrite();
                instance.setDeviceid(value);
                return this;
            }
            /**
             * <pre>
             *操作的设备ID
             * </pre>
             *
             * <code>fixed32 deviceid = 4;</code>
             */
            public Builder clearDeviceid() {
                copyOnWrite();
                instance.clearDeviceid();
                return this;
            }

            /**
             * <pre>
             *操作的会议ID
             * </pre>
             *
             * <code>fixed32 meetingid = 5;</code>
             */
            public int getMeetingid() {
                return instance.getMeetingid();
            }
            /**
             * <pre>
             *操作的会议ID
             * </pre>
             *
             * <code>fixed32 meetingid = 5;</code>
             */
            public Builder setMeetingid(int value) {
                copyOnWrite();
                instance.setMeetingid(value);
                return this;
            }
            /**
             * <pre>
             *操作的会议ID
             * </pre>
             *
             * <code>fixed32 meetingid = 5;</code>
             */
            public Builder clearMeetingid() {
                copyOnWrite();
                instance.clearMeetingid();
                return this;
            }

            /**
             * <pre>
             *操作utc时间 微秒
             * </pre>
             *
             * <code>fixed64 logtime = 6;</code>
             */
            public long getLogtime() {
                return instance.getLogtime();
            }
            /**
             * <pre>
             *操作utc时间 微秒
             * </pre>
             *
             * <code>fixed64 logtime = 6;</code>
             */
            public Builder setLogtime(long value) {
                copyOnWrite();
                instance.setLogtime(value);
                return this;
            }
            /**
             * <pre>
             *操作utc时间 微秒
             * </pre>
             *
             * <code>fixed64 logtime = 6;</code>
             */
            public Builder clearLogtime() {
                copyOnWrite();
                instance.clearLogtime();
                return this;
            }

            /**
             * <pre>
             *记录文本
             * </pre>
             *
             * <code>bytes logmsg = 7;</code>
             */
            public com.google.protobuf.ByteString getLogmsg() {
                return instance.getLogmsg();
            }
            /**
             * <pre>
             *记录文本
             * </pre>
             *
             * <code>bytes logmsg = 7;</code>
             */
            public Builder setLogmsg(com.google.protobuf.ByteString value) {
                copyOnWrite();
                instance.setLogmsg(value);
                return this;
            }
            /**
             * <pre>
             *记录文本
             * </pre>
             *
             * <code>bytes logmsg = 7;</code>
             */
            public Builder clearLogmsg() {
                copyOnWrite();
                instance.clearLogmsg();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Item_MeetSystemLog)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSystemLog();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSystemLog other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSystemLog) arg1;
                    stage_ = visitor.visitInt(stage_ != 0, stage_,
                            other.stage_ != 0, other.stage_);
                    method_ = visitor.visitInt(method_ != 0, method_,
                            other.method_ != 0, other.method_);
                    adminid_ = visitor.visitInt(adminid_ != 0, adminid_,
                            other.adminid_ != 0, other.adminid_);
                    deviceid_ = visitor.visitInt(deviceid_ != 0, deviceid_,
                            other.deviceid_ != 0, other.deviceid_);
                    meetingid_ = visitor.visitInt(meetingid_ != 0, meetingid_,
                            other.meetingid_ != 0, other.meetingid_);
                    logtime_ = visitor.visitLong(logtime_ != 0L, logtime_,
                            other.logtime_ != 0L, other.logtime_);
                    logmsg_ = visitor.visitByteString(logmsg_ != com.google.protobuf.ByteString.EMPTY, logmsg_,
                            other.logmsg_ != com.google.protobuf.ByteString.EMPTY, other.logmsg_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 13: {

                                    stage_ = input.readFixed32();
                                    break;
                                }
                                case 21: {

                                    method_ = input.readFixed32();
                                    break;
                                }
                                case 29: {

                                    adminid_ = input.readFixed32();
                                    break;
                                }
                                case 37: {

                                    deviceid_ = input.readFixed32();
                                    break;
                                }
                                case 45: {

                                    meetingid_ = input.readFixed32();
                                    break;
                                }
                                case 49: {

                                    logtime_ = input.readFixed64();
                                    break;
                                }
                                case 58: {

                                    logmsg_ = input.readBytes();
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSystemLog.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Item_MeetSystemLog)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSystemLog DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Item_MeetSystemLog();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSystemLog getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Item_MeetSystemLog> PARSER;

        public static com.google.protobuf.Parser<pbui_Item_MeetSystemLog> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Type_MeetingMeetSystemLogOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Type_MeetingMeetSystemLog)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <pre>
         *查询返回用户传过来的开始行
         * </pre>
         *
         * <code>fixed32 startrow = 1;</code>
         */
        int getStartrow();

        /**
         * <pre>
         *是否为第一帧,如果评分太多,接下来的帧会在下次接收到后回调
         * </pre>
         *
         * <code>fixed32 isfirst = 2;</code>
         */
        int getIsfirst();

        /**
         * <code>repeated .pbui_Item_MeetSystemLog item = 3;</code>
         */
        java.util.List<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSystemLog>
        getItemList();
        /**
         * <code>repeated .pbui_Item_MeetSystemLog item = 3;</code>
         */
        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSystemLog getItem(int index);
        /**
         * <code>repeated .pbui_Item_MeetSystemLog item = 3;</code>
         */
        int getItemCount();
    }
    /**
     * <pre>
     *管理日志
     *stages：Pb_TYPE_MEET_INTERFACE_SYSTEMLOG
     *method:查询(数据库返回)
     * </pre>
     *
     * Protobuf type {@code pbui_Type_MeetingMeetSystemLog}
     */
    public  static final class pbui_Type_MeetingMeetSystemLog extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Type_MeetingMeetSystemLog, pbui_Type_MeetingMeetSystemLog.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Type_MeetingMeetSystemLog)
            pbui_Type_MeetingMeetSystemLogOrBuilder {
        private pbui_Type_MeetingMeetSystemLog() {
            item_ = emptyProtobufList();
        }
        private int bitField0_;
        public static final int STARTROW_FIELD_NUMBER = 1;
        private int startrow_;
        /**
         * <pre>
         *查询返回用户传过来的开始行
         * </pre>
         *
         * <code>fixed32 startrow = 1;</code>
         */
        public int getStartrow() {
            return startrow_;
        }
        /**
         * <pre>
         *查询返回用户传过来的开始行
         * </pre>
         *
         * <code>fixed32 startrow = 1;</code>
         */
        private void setStartrow(int value) {

            startrow_ = value;
        }
        /**
         * <pre>
         *查询返回用户传过来的开始行
         * </pre>
         *
         * <code>fixed32 startrow = 1;</code>
         */
        private void clearStartrow() {

            startrow_ = 0;
        }

        public static final int ISFIRST_FIELD_NUMBER = 2;
        private int isfirst_;
        /**
         * <pre>
         *是否为第一帧,如果评分太多,接下来的帧会在下次接收到后回调
         * </pre>
         *
         * <code>fixed32 isfirst = 2;</code>
         */
        public int getIsfirst() {
            return isfirst_;
        }
        /**
         * <pre>
         *是否为第一帧,如果评分太多,接下来的帧会在下次接收到后回调
         * </pre>
         *
         * <code>fixed32 isfirst = 2;</code>
         */
        private void setIsfirst(int value) {

            isfirst_ = value;
        }
        /**
         * <pre>
         *是否为第一帧,如果评分太多,接下来的帧会在下次接收到后回调
         * </pre>
         *
         * <code>fixed32 isfirst = 2;</code>
         */
        private void clearIsfirst() {

            isfirst_ = 0;
        }

        public static final int ITEM_FIELD_NUMBER = 3;
        private com.google.protobuf.Internal.ProtobufList<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSystemLog> item_;
        /**
         * <code>repeated .pbui_Item_MeetSystemLog item = 3;</code>
         */
        public java.util.List<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSystemLog> getItemList() {
            return item_;
        }
        /**
         * <code>repeated .pbui_Item_MeetSystemLog item = 3;</code>
         */
        public java.util.List<? extends com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSystemLogOrBuilder>
        getItemOrBuilderList() {
            return item_;
        }
        /**
         * <code>repeated .pbui_Item_MeetSystemLog item = 3;</code>
         */
        public int getItemCount() {
            return item_.size();
        }
        /**
         * <code>repeated .pbui_Item_MeetSystemLog item = 3;</code>
         */
        public com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSystemLog getItem(int index) {
            return item_.get(index);
        }
        /**
         * <code>repeated .pbui_Item_MeetSystemLog item = 3;</code>
         */
        public com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSystemLogOrBuilder getItemOrBuilder(
                int index) {
            return item_.get(index);
        }
        private void ensureItemIsMutable() {
            if (!item_.isModifiable()) {
                item_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(item_);
            }
        }

        /**
         * <code>repeated .pbui_Item_MeetSystemLog item = 3;</code>
         */
        private void setItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSystemLog value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensureItemIsMutable();
            item_.set(index, value);
        }
        /**
         * <code>repeated .pbui_Item_MeetSystemLog item = 3;</code>
         */
        private void setItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSystemLog.Builder builderForValue) {
            ensureItemIsMutable();
            item_.set(index, builderForValue.build());
        }
        /**
         * <code>repeated .pbui_Item_MeetSystemLog item = 3;</code>
         */
        private void addItem(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSystemLog value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensureItemIsMutable();
            item_.add(value);
        }
        /**
         * <code>repeated .pbui_Item_MeetSystemLog item = 3;</code>
         */
        private void addItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSystemLog value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensureItemIsMutable();
            item_.add(index, value);
        }
        /**
         * <code>repeated .pbui_Item_MeetSystemLog item = 3;</code>
         */
        private void addItem(
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSystemLog.Builder builderForValue) {
            ensureItemIsMutable();
            item_.add(builderForValue.build());
        }
        /**
         * <code>repeated .pbui_Item_MeetSystemLog item = 3;</code>
         */
        private void addItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSystemLog.Builder builderForValue) {
            ensureItemIsMutable();
            item_.add(index, builderForValue.build());
        }
        /**
         * <code>repeated .pbui_Item_MeetSystemLog item = 3;</code>
         */
        private void addAllItem(
                java.lang.Iterable<? extends com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSystemLog> values) {
            ensureItemIsMutable();
            com.google.protobuf.AbstractMessageLite.addAll(
                    values, item_);
        }
        /**
         * <code>repeated .pbui_Item_MeetSystemLog item = 3;</code>
         */
        private void clearItem() {
            item_ = emptyProtobufList();
        }
        /**
         * <code>repeated .pbui_Item_MeetSystemLog item = 3;</code>
         */
        private void removeItem(int index) {
            ensureItemIsMutable();
            item_.remove(index);
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (startrow_ != 0) {
                output.writeFixed32(1, startrow_);
            }
            if (isfirst_ != 0) {
                output.writeFixed32(2, isfirst_);
            }
            for (int i = 0; i < item_.size(); i++) {
                output.writeMessage(3, item_.get(i));
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (startrow_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(1, startrow_);
            }
            if (isfirst_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(2, isfirst_);
            }
            for (int i = 0; i < item_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(3, item_.get(i));
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetingMeetSystemLog parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetingMeetSystemLog parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetingMeetSystemLog parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetingMeetSystemLog parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetingMeetSystemLog parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetingMeetSystemLog parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetingMeetSystemLog parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetingMeetSystemLog parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetingMeetSystemLog parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetingMeetSystemLog parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetingMeetSystemLog parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetingMeetSystemLog parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetingMeetSystemLog prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *管理日志
         *stages：Pb_TYPE_MEET_INTERFACE_SYSTEMLOG
         *method:查询(数据库返回)
         * </pre>
         *
         * Protobuf type {@code pbui_Type_MeetingMeetSystemLog}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetingMeetSystemLog, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Type_MeetingMeetSystemLog)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetingMeetSystemLogOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetingMeetSystemLog.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <pre>
             *查询返回用户传过来的开始行
             * </pre>
             *
             * <code>fixed32 startrow = 1;</code>
             */
            public int getStartrow() {
                return instance.getStartrow();
            }
            /**
             * <pre>
             *查询返回用户传过来的开始行
             * </pre>
             *
             * <code>fixed32 startrow = 1;</code>
             */
            public Builder setStartrow(int value) {
                copyOnWrite();
                instance.setStartrow(value);
                return this;
            }
            /**
             * <pre>
             *查询返回用户传过来的开始行
             * </pre>
             *
             * <code>fixed32 startrow = 1;</code>
             */
            public Builder clearStartrow() {
                copyOnWrite();
                instance.clearStartrow();
                return this;
            }

            /**
             * <pre>
             *是否为第一帧,如果评分太多,接下来的帧会在下次接收到后回调
             * </pre>
             *
             * <code>fixed32 isfirst = 2;</code>
             */
            public int getIsfirst() {
                return instance.getIsfirst();
            }
            /**
             * <pre>
             *是否为第一帧,如果评分太多,接下来的帧会在下次接收到后回调
             * </pre>
             *
             * <code>fixed32 isfirst = 2;</code>
             */
            public Builder setIsfirst(int value) {
                copyOnWrite();
                instance.setIsfirst(value);
                return this;
            }
            /**
             * <pre>
             *是否为第一帧,如果评分太多,接下来的帧会在下次接收到后回调
             * </pre>
             *
             * <code>fixed32 isfirst = 2;</code>
             */
            public Builder clearIsfirst() {
                copyOnWrite();
                instance.clearIsfirst();
                return this;
            }

            /**
             * <code>repeated .pbui_Item_MeetSystemLog item = 3;</code>
             */
            public java.util.List<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSystemLog> getItemList() {
                return java.util.Collections.unmodifiableList(
                        instance.getItemList());
            }
            /**
             * <code>repeated .pbui_Item_MeetSystemLog item = 3;</code>
             */
            public int getItemCount() {
                return instance.getItemCount();
            }/**
             * <code>repeated .pbui_Item_MeetSystemLog item = 3;</code>
             */
            public com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSystemLog getItem(int index) {
                return instance.getItem(index);
            }
            /**
             * <code>repeated .pbui_Item_MeetSystemLog item = 3;</code>
             */
            public Builder setItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSystemLog value) {
                copyOnWrite();
                instance.setItem(index, value);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetSystemLog item = 3;</code>
             */
            public Builder setItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSystemLog.Builder builderForValue) {
                copyOnWrite();
                instance.setItem(index, builderForValue);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetSystemLog item = 3;</code>
             */
            public Builder addItem(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSystemLog value) {
                copyOnWrite();
                instance.addItem(value);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetSystemLog item = 3;</code>
             */
            public Builder addItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSystemLog value) {
                copyOnWrite();
                instance.addItem(index, value);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetSystemLog item = 3;</code>
             */
            public Builder addItem(
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSystemLog.Builder builderForValue) {
                copyOnWrite();
                instance.addItem(builderForValue);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetSystemLog item = 3;</code>
             */
            public Builder addItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSystemLog.Builder builderForValue) {
                copyOnWrite();
                instance.addItem(index, builderForValue);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetSystemLog item = 3;</code>
             */
            public Builder addAllItem(
                    java.lang.Iterable<? extends com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSystemLog> values) {
                copyOnWrite();
                instance.addAllItem(values);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetSystemLog item = 3;</code>
             */
            public Builder clearItem() {
                copyOnWrite();
                instance.clearItem();
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetSystemLog item = 3;</code>
             */
            public Builder removeItem(int index) {
                copyOnWrite();
                instance.removeItem(index);
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Type_MeetingMeetSystemLog)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetingMeetSystemLog();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    item_.makeImmutable();
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetingMeetSystemLog other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetingMeetSystemLog) arg1;
                    startrow_ = visitor.visitInt(startrow_ != 0, startrow_,
                            other.startrow_ != 0, other.startrow_);
                    isfirst_ = visitor.visitInt(isfirst_ != 0, isfirst_,
                            other.isfirst_ != 0, other.isfirst_);
                    item_= visitor.visitList(item_, other.item_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                        bitField0_ |= other.bitField0_;
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 13: {

                                    startrow_ = input.readFixed32();
                                    break;
                                }
                                case 21: {

                                    isfirst_ = input.readFixed32();
                                    break;
                                }
                                case 26: {
                                    if (!item_.isModifiable()) {
                                        item_ =
                                                com.google.protobuf.GeneratedMessageLite.mutableCopy(item_);
                                    }
                                    item_.add(
                                            input.readMessage(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSystemLog.parser(), extensionRegistry));
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetingMeetSystemLog.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Type_MeetingMeetSystemLog)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetingMeetSystemLog DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Type_MeetingMeetSystemLog();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetingMeetSystemLog getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Type_MeetingMeetSystemLog> PARSER;

        public static com.google.protobuf.Parser<pbui_Type_MeetingMeetSystemLog> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Type_QueryMeetSystemLogOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Type_QueryMeetSystemLog)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <pre>
         *操作类别 参见STARG_ENUM 可以为0表示所有类别
         * </pre>
         *
         * <code>fixed32 stage = 1;</code>
         */
        int getStage();

        /**
         * <pre>
         *操作方法  参见 METHOD_ENUM 可以为0表示所有方法
         * </pre>
         *
         * <code>fixed32 method = 2;</code>
         */
        int getMethod();

        /**
         * <pre>
         *会议ID 可以为0表示所有会议
         * </pre>
         *
         * <code>fixed32 meetingid = 3;</code>
         */
        int getMeetingid();

        /**
         * <pre>
         *管理人员ID 可以为0表示所有管理人员
         * </pre>
         *
         * <code>fixed32 adminid = 4;</code>
         */
        int getAdminid();

        /**
         * <pre>
         *操作的设备ID 可以为0表示所有设备
         * </pre>
         *
         * <code>fixed32 deviceid = 5;</code>
         */
        int getDeviceid();

        /**
         * <pre>
         *查询的起始记录utc时间 微秒 必须有效
         * </pre>
         *
         * <code>fixed64 startlogtime = 6;</code>
         */
        long getStartlogtime();

        /**
         * <pre>
         *查询的结束记录utc时间 微秒 必须有效
         * </pre>
         *
         * <code>fixed64 endlogtime = 7;</code>
         */
        long getEndlogtime();

        /**
         * <pre>
         *查询开始行 实现分页查询 必须有效
         * </pre>
         *
         * <code>fixed32 startrow = 8;</code>
         */
        int getStartrow();
    }
    /**
     * <pre>
     *管理日志
     *stages：Pb_TYPE_MEET_INTERFACE_SYSTEMLOG
     *method:查询
     * </pre>
     *
     * Protobuf type {@code pbui_Type_QueryMeetSystemLog}
     */
    public  static final class pbui_Type_QueryMeetSystemLog extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Type_QueryMeetSystemLog, pbui_Type_QueryMeetSystemLog.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Type_QueryMeetSystemLog)
            pbui_Type_QueryMeetSystemLogOrBuilder {
        private pbui_Type_QueryMeetSystemLog() {
        }
        public static final int STAGE_FIELD_NUMBER = 1;
        private int stage_;
        /**
         * <pre>
         *操作类别 参见STARG_ENUM 可以为0表示所有类别
         * </pre>
         *
         * <code>fixed32 stage = 1;</code>
         */
        public int getStage() {
            return stage_;
        }
        /**
         * <pre>
         *操作类别 参见STARG_ENUM 可以为0表示所有类别
         * </pre>
         *
         * <code>fixed32 stage = 1;</code>
         */
        private void setStage(int value) {

            stage_ = value;
        }
        /**
         * <pre>
         *操作类别 参见STARG_ENUM 可以为0表示所有类别
         * </pre>
         *
         * <code>fixed32 stage = 1;</code>
         */
        private void clearStage() {

            stage_ = 0;
        }

        public static final int METHOD_FIELD_NUMBER = 2;
        private int method_;
        /**
         * <pre>
         *操作方法  参见 METHOD_ENUM 可以为0表示所有方法
         * </pre>
         *
         * <code>fixed32 method = 2;</code>
         */
        public int getMethod() {
            return method_;
        }
        /**
         * <pre>
         *操作方法  参见 METHOD_ENUM 可以为0表示所有方法
         * </pre>
         *
         * <code>fixed32 method = 2;</code>
         */
        private void setMethod(int value) {

            method_ = value;
        }
        /**
         * <pre>
         *操作方法  参见 METHOD_ENUM 可以为0表示所有方法
         * </pre>
         *
         * <code>fixed32 method = 2;</code>
         */
        private void clearMethod() {

            method_ = 0;
        }

        public static final int MEETINGID_FIELD_NUMBER = 3;
        private int meetingid_;
        /**
         * <pre>
         *会议ID 可以为0表示所有会议
         * </pre>
         *
         * <code>fixed32 meetingid = 3;</code>
         */
        public int getMeetingid() {
            return meetingid_;
        }
        /**
         * <pre>
         *会议ID 可以为0表示所有会议
         * </pre>
         *
         * <code>fixed32 meetingid = 3;</code>
         */
        private void setMeetingid(int value) {

            meetingid_ = value;
        }
        /**
         * <pre>
         *会议ID 可以为0表示所有会议
         * </pre>
         *
         * <code>fixed32 meetingid = 3;</code>
         */
        private void clearMeetingid() {

            meetingid_ = 0;
        }

        public static final int ADMINID_FIELD_NUMBER = 4;
        private int adminid_;
        /**
         * <pre>
         *管理人员ID 可以为0表示所有管理人员
         * </pre>
         *
         * <code>fixed32 adminid = 4;</code>
         */
        public int getAdminid() {
            return adminid_;
        }
        /**
         * <pre>
         *管理人员ID 可以为0表示所有管理人员
         * </pre>
         *
         * <code>fixed32 adminid = 4;</code>
         */
        private void setAdminid(int value) {

            adminid_ = value;
        }
        /**
         * <pre>
         *管理人员ID 可以为0表示所有管理人员
         * </pre>
         *
         * <code>fixed32 adminid = 4;</code>
         */
        private void clearAdminid() {

            adminid_ = 0;
        }

        public static final int DEVICEID_FIELD_NUMBER = 5;
        private int deviceid_;
        /**
         * <pre>
         *操作的设备ID 可以为0表示所有设备
         * </pre>
         *
         * <code>fixed32 deviceid = 5;</code>
         */
        public int getDeviceid() {
            return deviceid_;
        }
        /**
         * <pre>
         *操作的设备ID 可以为0表示所有设备
         * </pre>
         *
         * <code>fixed32 deviceid = 5;</code>
         */
        private void setDeviceid(int value) {

            deviceid_ = value;
        }
        /**
         * <pre>
         *操作的设备ID 可以为0表示所有设备
         * </pre>
         *
         * <code>fixed32 deviceid = 5;</code>
         */
        private void clearDeviceid() {

            deviceid_ = 0;
        }

        public static final int STARTLOGTIME_FIELD_NUMBER = 6;
        private long startlogtime_;
        /**
         * <pre>
         *查询的起始记录utc时间 微秒 必须有效
         * </pre>
         *
         * <code>fixed64 startlogtime = 6;</code>
         */
        public long getStartlogtime() {
            return startlogtime_;
        }
        /**
         * <pre>
         *查询的起始记录utc时间 微秒 必须有效
         * </pre>
         *
         * <code>fixed64 startlogtime = 6;</code>
         */
        private void setStartlogtime(long value) {

            startlogtime_ = value;
        }
        /**
         * <pre>
         *查询的起始记录utc时间 微秒 必须有效
         * </pre>
         *
         * <code>fixed64 startlogtime = 6;</code>
         */
        private void clearStartlogtime() {

            startlogtime_ = 0L;
        }

        public static final int ENDLOGTIME_FIELD_NUMBER = 7;
        private long endlogtime_;
        /**
         * <pre>
         *查询的结束记录utc时间 微秒 必须有效
         * </pre>
         *
         * <code>fixed64 endlogtime = 7;</code>
         */
        public long getEndlogtime() {
            return endlogtime_;
        }
        /**
         * <pre>
         *查询的结束记录utc时间 微秒 必须有效
         * </pre>
         *
         * <code>fixed64 endlogtime = 7;</code>
         */
        private void setEndlogtime(long value) {

            endlogtime_ = value;
        }
        /**
         * <pre>
         *查询的结束记录utc时间 微秒 必须有效
         * </pre>
         *
         * <code>fixed64 endlogtime = 7;</code>
         */
        private void clearEndlogtime() {

            endlogtime_ = 0L;
        }

        public static final int STARTROW_FIELD_NUMBER = 8;
        private int startrow_;
        /**
         * <pre>
         *查询开始行 实现分页查询 必须有效
         * </pre>
         *
         * <code>fixed32 startrow = 8;</code>
         */
        public int getStartrow() {
            return startrow_;
        }
        /**
         * <pre>
         *查询开始行 实现分页查询 必须有效
         * </pre>
         *
         * <code>fixed32 startrow = 8;</code>
         */
        private void setStartrow(int value) {

            startrow_ = value;
        }
        /**
         * <pre>
         *查询开始行 实现分页查询 必须有效
         * </pre>
         *
         * <code>fixed32 startrow = 8;</code>
         */
        private void clearStartrow() {

            startrow_ = 0;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (stage_ != 0) {
                output.writeFixed32(1, stage_);
            }
            if (method_ != 0) {
                output.writeFixed32(2, method_);
            }
            if (meetingid_ != 0) {
                output.writeFixed32(3, meetingid_);
            }
            if (adminid_ != 0) {
                output.writeFixed32(4, adminid_);
            }
            if (deviceid_ != 0) {
                output.writeFixed32(5, deviceid_);
            }
            if (startlogtime_ != 0L) {
                output.writeFixed64(6, startlogtime_);
            }
            if (endlogtime_ != 0L) {
                output.writeFixed64(7, endlogtime_);
            }
            if (startrow_ != 0) {
                output.writeFixed32(8, startrow_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (stage_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(1, stage_);
            }
            if (method_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(2, method_);
            }
            if (meetingid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(3, meetingid_);
            }
            if (adminid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(4, adminid_);
            }
            if (deviceid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(5, deviceid_);
            }
            if (startlogtime_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed64Size(6, startlogtime_);
            }
            if (endlogtime_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed64Size(7, endlogtime_);
            }
            if (startrow_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(8, startrow_);
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_QueryMeetSystemLog parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_QueryMeetSystemLog parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_QueryMeetSystemLog parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_QueryMeetSystemLog parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_QueryMeetSystemLog parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_QueryMeetSystemLog parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_QueryMeetSystemLog parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_QueryMeetSystemLog parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_QueryMeetSystemLog parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_QueryMeetSystemLog parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_QueryMeetSystemLog parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_QueryMeetSystemLog parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_QueryMeetSystemLog prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *管理日志
         *stages：Pb_TYPE_MEET_INTERFACE_SYSTEMLOG
         *method:查询
         * </pre>
         *
         * Protobuf type {@code pbui_Type_QueryMeetSystemLog}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_QueryMeetSystemLog, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Type_QueryMeetSystemLog)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_QueryMeetSystemLogOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_QueryMeetSystemLog.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <pre>
             *操作类别 参见STARG_ENUM 可以为0表示所有类别
             * </pre>
             *
             * <code>fixed32 stage = 1;</code>
             */
            public int getStage() {
                return instance.getStage();
            }
            /**
             * <pre>
             *操作类别 参见STARG_ENUM 可以为0表示所有类别
             * </pre>
             *
             * <code>fixed32 stage = 1;</code>
             */
            public Builder setStage(int value) {
                copyOnWrite();
                instance.setStage(value);
                return this;
            }
            /**
             * <pre>
             *操作类别 参见STARG_ENUM 可以为0表示所有类别
             * </pre>
             *
             * <code>fixed32 stage = 1;</code>
             */
            public Builder clearStage() {
                copyOnWrite();
                instance.clearStage();
                return this;
            }

            /**
             * <pre>
             *操作方法  参见 METHOD_ENUM 可以为0表示所有方法
             * </pre>
             *
             * <code>fixed32 method = 2;</code>
             */
            public int getMethod() {
                return instance.getMethod();
            }
            /**
             * <pre>
             *操作方法  参见 METHOD_ENUM 可以为0表示所有方法
             * </pre>
             *
             * <code>fixed32 method = 2;</code>
             */
            public Builder setMethod(int value) {
                copyOnWrite();
                instance.setMethod(value);
                return this;
            }
            /**
             * <pre>
             *操作方法  参见 METHOD_ENUM 可以为0表示所有方法
             * </pre>
             *
             * <code>fixed32 method = 2;</code>
             */
            public Builder clearMethod() {
                copyOnWrite();
                instance.clearMethod();
                return this;
            }

            /**
             * <pre>
             *会议ID 可以为0表示所有会议
             * </pre>
             *
             * <code>fixed32 meetingid = 3;</code>
             */
            public int getMeetingid() {
                return instance.getMeetingid();
            }
            /**
             * <pre>
             *会议ID 可以为0表示所有会议
             * </pre>
             *
             * <code>fixed32 meetingid = 3;</code>
             */
            public Builder setMeetingid(int value) {
                copyOnWrite();
                instance.setMeetingid(value);
                return this;
            }
            /**
             * <pre>
             *会议ID 可以为0表示所有会议
             * </pre>
             *
             * <code>fixed32 meetingid = 3;</code>
             */
            public Builder clearMeetingid() {
                copyOnWrite();
                instance.clearMeetingid();
                return this;
            }

            /**
             * <pre>
             *管理人员ID 可以为0表示所有管理人员
             * </pre>
             *
             * <code>fixed32 adminid = 4;</code>
             */
            public int getAdminid() {
                return instance.getAdminid();
            }
            /**
             * <pre>
             *管理人员ID 可以为0表示所有管理人员
             * </pre>
             *
             * <code>fixed32 adminid = 4;</code>
             */
            public Builder setAdminid(int value) {
                copyOnWrite();
                instance.setAdminid(value);
                return this;
            }
            /**
             * <pre>
             *管理人员ID 可以为0表示所有管理人员
             * </pre>
             *
             * <code>fixed32 adminid = 4;</code>
             */
            public Builder clearAdminid() {
                copyOnWrite();
                instance.clearAdminid();
                return this;
            }

            /**
             * <pre>
             *操作的设备ID 可以为0表示所有设备
             * </pre>
             *
             * <code>fixed32 deviceid = 5;</code>
             */
            public int getDeviceid() {
                return instance.getDeviceid();
            }
            /**
             * <pre>
             *操作的设备ID 可以为0表示所有设备
             * </pre>
             *
             * <code>fixed32 deviceid = 5;</code>
             */
            public Builder setDeviceid(int value) {
                copyOnWrite();
                instance.setDeviceid(value);
                return this;
            }
            /**
             * <pre>
             *操作的设备ID 可以为0表示所有设备
             * </pre>
             *
             * <code>fixed32 deviceid = 5;</code>
             */
            public Builder clearDeviceid() {
                copyOnWrite();
                instance.clearDeviceid();
                return this;
            }

            /**
             * <pre>
             *查询的起始记录utc时间 微秒 必须有效
             * </pre>
             *
             * <code>fixed64 startlogtime = 6;</code>
             */
            public long getStartlogtime() {
                return instance.getStartlogtime();
            }
            /**
             * <pre>
             *查询的起始记录utc时间 微秒 必须有效
             * </pre>
             *
             * <code>fixed64 startlogtime = 6;</code>
             */
            public Builder setStartlogtime(long value) {
                copyOnWrite();
                instance.setStartlogtime(value);
                return this;
            }
            /**
             * <pre>
             *查询的起始记录utc时间 微秒 必须有效
             * </pre>
             *
             * <code>fixed64 startlogtime = 6;</code>
             */
            public Builder clearStartlogtime() {
                copyOnWrite();
                instance.clearStartlogtime();
                return this;
            }

            /**
             * <pre>
             *查询的结束记录utc时间 微秒 必须有效
             * </pre>
             *
             * <code>fixed64 endlogtime = 7;</code>
             */
            public long getEndlogtime() {
                return instance.getEndlogtime();
            }
            /**
             * <pre>
             *查询的结束记录utc时间 微秒 必须有效
             * </pre>
             *
             * <code>fixed64 endlogtime = 7;</code>
             */
            public Builder setEndlogtime(long value) {
                copyOnWrite();
                instance.setEndlogtime(value);
                return this;
            }
            /**
             * <pre>
             *查询的结束记录utc时间 微秒 必须有效
             * </pre>
             *
             * <code>fixed64 endlogtime = 7;</code>
             */
            public Builder clearEndlogtime() {
                copyOnWrite();
                instance.clearEndlogtime();
                return this;
            }

            /**
             * <pre>
             *查询开始行 实现分页查询 必须有效
             * </pre>
             *
             * <code>fixed32 startrow = 8;</code>
             */
            public int getStartrow() {
                return instance.getStartrow();
            }
            /**
             * <pre>
             *查询开始行 实现分页查询 必须有效
             * </pre>
             *
             * <code>fixed32 startrow = 8;</code>
             */
            public Builder setStartrow(int value) {
                copyOnWrite();
                instance.setStartrow(value);
                return this;
            }
            /**
             * <pre>
             *查询开始行 实现分页查询 必须有效
             * </pre>
             *
             * <code>fixed32 startrow = 8;</code>
             */
            public Builder clearStartrow() {
                copyOnWrite();
                instance.clearStartrow();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Type_QueryMeetSystemLog)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_QueryMeetSystemLog();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_QueryMeetSystemLog other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_QueryMeetSystemLog) arg1;
                    stage_ = visitor.visitInt(stage_ != 0, stage_,
                            other.stage_ != 0, other.stage_);
                    method_ = visitor.visitInt(method_ != 0, method_,
                            other.method_ != 0, other.method_);
                    meetingid_ = visitor.visitInt(meetingid_ != 0, meetingid_,
                            other.meetingid_ != 0, other.meetingid_);
                    adminid_ = visitor.visitInt(adminid_ != 0, adminid_,
                            other.adminid_ != 0, other.adminid_);
                    deviceid_ = visitor.visitInt(deviceid_ != 0, deviceid_,
                            other.deviceid_ != 0, other.deviceid_);
                    startlogtime_ = visitor.visitLong(startlogtime_ != 0L, startlogtime_,
                            other.startlogtime_ != 0L, other.startlogtime_);
                    endlogtime_ = visitor.visitLong(endlogtime_ != 0L, endlogtime_,
                            other.endlogtime_ != 0L, other.endlogtime_);
                    startrow_ = visitor.visitInt(startrow_ != 0, startrow_,
                            other.startrow_ != 0, other.startrow_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 13: {

                                    stage_ = input.readFixed32();
                                    break;
                                }
                                case 21: {

                                    method_ = input.readFixed32();
                                    break;
                                }
                                case 29: {

                                    meetingid_ = input.readFixed32();
                                    break;
                                }
                                case 37: {

                                    adminid_ = input.readFixed32();
                                    break;
                                }
                                case 45: {

                                    deviceid_ = input.readFixed32();
                                    break;
                                }
                                case 49: {

                                    startlogtime_ = input.readFixed64();
                                    break;
                                }
                                case 57: {

                                    endlogtime_ = input.readFixed64();
                                    break;
                                }
                                case 69: {

                                    startrow_ = input.readFixed32();
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_QueryMeetSystemLog.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Type_QueryMeetSystemLog)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_QueryMeetSystemLog DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Type_QueryMeetSystemLog();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_QueryMeetSystemLog getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Type_QueryMeetSystemLog> PARSER;

        public static com.google.protobuf.Parser<pbui_Type_QueryMeetSystemLog> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Item_MeetTableCardDetailInfoOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Item_MeetTableCardDetailInfo)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <pre>
         *使用字体名称
         * </pre>
         *
         * <code>bytes fontname = 1;</code>
         */
        com.google.protobuf.ByteString getFontname();

        /**
         * <pre>
         *字体 大小
         * </pre>
         *
         * <code>fixed32 fontsize = 2;</code>
         */
        int getFontsize();

        /**
         * <pre>
         *字体颜色
         * </pre>
         *
         * <code>fixed32 fontcolor = 3;</code>
         */
        int getFontcolor();

        /**
         * <pre>
         *左上角 x坐标 相对宽的百分比 如：lx=0.1 当宽为1920时 真正的lx应该= 0.1 * 1920 = 192
         * </pre>
         *
         * <code>float lx = 4;</code>
         */
        float getLx();

        /**
         * <code>float ly = 5;</code>
         */
        float getLy();

        /**
         * <code>float rx = 6;</code>
         */
        float getRx();

        /**
         * <code>float ry = 7;</code>
         */
        float getRy();

        /**
         * <pre>
         *显示标志 参见Pb_TableCardFlag
         * </pre>
         *
         * <code>fixed32 flag = 8;</code>
         */
        int getFlag();

        /**
         * <pre>
         *参见本页 font align flag
         * </pre>
         *
         * <code>fixed32 align = 9;</code>
         */
        int getAlign();

        /**
         * <pre>
         *显示的信息 参见Pb_TableCardType
         * </pre>
         *
         * <code>fixed32 type = 10;</code>
         */
        int getType();
    }
    /**
     * <pre>
     *会议双屏显示相关
     * </pre>
     *
     * Protobuf type {@code pbui_Item_MeetTableCardDetailInfo}
     */
    public  static final class pbui_Item_MeetTableCardDetailInfo extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Item_MeetTableCardDetailInfo, pbui_Item_MeetTableCardDetailInfo.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Item_MeetTableCardDetailInfo)
            pbui_Item_MeetTableCardDetailInfoOrBuilder {
        private pbui_Item_MeetTableCardDetailInfo() {
            fontname_ = com.google.protobuf.ByteString.EMPTY;
        }
        public static final int FONTNAME_FIELD_NUMBER = 1;
        private com.google.protobuf.ByteString fontname_;
        /**
         * <pre>
         *使用字体名称
         * </pre>
         *
         * <code>bytes fontname = 1;</code>
         */
        public com.google.protobuf.ByteString getFontname() {
            return fontname_;
        }
        /**
         * <pre>
         *使用字体名称
         * </pre>
         *
         * <code>bytes fontname = 1;</code>
         */
        private void setFontname(com.google.protobuf.ByteString value) {
            if (value == null) {
                throw new NullPointerException();
            }

            fontname_ = value;
        }
        /**
         * <pre>
         *使用字体名称
         * </pre>
         *
         * <code>bytes fontname = 1;</code>
         */
        private void clearFontname() {

            fontname_ = getDefaultInstance().getFontname();
        }

        public static final int FONTSIZE_FIELD_NUMBER = 2;
        private int fontsize_;
        /**
         * <pre>
         *字体 大小
         * </pre>
         *
         * <code>fixed32 fontsize = 2;</code>
         */
        public int getFontsize() {
            return fontsize_;
        }
        /**
         * <pre>
         *字体 大小
         * </pre>
         *
         * <code>fixed32 fontsize = 2;</code>
         */
        private void setFontsize(int value) {

            fontsize_ = value;
        }
        /**
         * <pre>
         *字体 大小
         * </pre>
         *
         * <code>fixed32 fontsize = 2;</code>
         */
        private void clearFontsize() {

            fontsize_ = 0;
        }

        public static final int FONTCOLOR_FIELD_NUMBER = 3;
        private int fontcolor_;
        /**
         * <pre>
         *字体颜色
         * </pre>
         *
         * <code>fixed32 fontcolor = 3;</code>
         */
        public int getFontcolor() {
            return fontcolor_;
        }
        /**
         * <pre>
         *字体颜色
         * </pre>
         *
         * <code>fixed32 fontcolor = 3;</code>
         */
        private void setFontcolor(int value) {

            fontcolor_ = value;
        }
        /**
         * <pre>
         *字体颜色
         * </pre>
         *
         * <code>fixed32 fontcolor = 3;</code>
         */
        private void clearFontcolor() {

            fontcolor_ = 0;
        }

        public static final int LX_FIELD_NUMBER = 4;
        private float lx_;
        /**
         * <pre>
         *左上角 x坐标 相对宽的百分比 如：lx=0.1 当宽为1920时 真正的lx应该= 0.1 * 1920 = 192
         * </pre>
         *
         * <code>float lx = 4;</code>
         */
        public float getLx() {
            return lx_;
        }
        /**
         * <pre>
         *左上角 x坐标 相对宽的百分比 如：lx=0.1 当宽为1920时 真正的lx应该= 0.1 * 1920 = 192
         * </pre>
         *
         * <code>float lx = 4;</code>
         */
        private void setLx(float value) {

            lx_ = value;
        }
        /**
         * <pre>
         *左上角 x坐标 相对宽的百分比 如：lx=0.1 当宽为1920时 真正的lx应该= 0.1 * 1920 = 192
         * </pre>
         *
         * <code>float lx = 4;</code>
         */
        private void clearLx() {

            lx_ = 0F;
        }

        public static final int LY_FIELD_NUMBER = 5;
        private float ly_;
        /**
         * <code>float ly = 5;</code>
         */
        public float getLy() {
            return ly_;
        }
        /**
         * <code>float ly = 5;</code>
         */
        private void setLy(float value) {

            ly_ = value;
        }
        /**
         * <code>float ly = 5;</code>
         */
        private void clearLy() {

            ly_ = 0F;
        }

        public static final int RX_FIELD_NUMBER = 6;
        private float rx_;
        /**
         * <code>float rx = 6;</code>
         */
        public float getRx() {
            return rx_;
        }
        /**
         * <code>float rx = 6;</code>
         */
        private void setRx(float value) {

            rx_ = value;
        }
        /**
         * <code>float rx = 6;</code>
         */
        private void clearRx() {

            rx_ = 0F;
        }

        public static final int RY_FIELD_NUMBER = 7;
        private float ry_;
        /**
         * <code>float ry = 7;</code>
         */
        public float getRy() {
            return ry_;
        }
        /**
         * <code>float ry = 7;</code>
         */
        private void setRy(float value) {

            ry_ = value;
        }
        /**
         * <code>float ry = 7;</code>
         */
        private void clearRy() {

            ry_ = 0F;
        }

        public static final int FLAG_FIELD_NUMBER = 8;
        private int flag_;
        /**
         * <pre>
         *显示标志 参见Pb_TableCardFlag
         * </pre>
         *
         * <code>fixed32 flag = 8;</code>
         */
        public int getFlag() {
            return flag_;
        }
        /**
         * <pre>
         *显示标志 参见Pb_TableCardFlag
         * </pre>
         *
         * <code>fixed32 flag = 8;</code>
         */
        private void setFlag(int value) {

            flag_ = value;
        }
        /**
         * <pre>
         *显示标志 参见Pb_TableCardFlag
         * </pre>
         *
         * <code>fixed32 flag = 8;</code>
         */
        private void clearFlag() {

            flag_ = 0;
        }

        public static final int ALIGN_FIELD_NUMBER = 9;
        private int align_;
        /**
         * <pre>
         *参见本页 font align flag
         * </pre>
         *
         * <code>fixed32 align = 9;</code>
         */
        public int getAlign() {
            return align_;
        }
        /**
         * <pre>
         *参见本页 font align flag
         * </pre>
         *
         * <code>fixed32 align = 9;</code>
         */
        private void setAlign(int value) {

            align_ = value;
        }
        /**
         * <pre>
         *参见本页 font align flag
         * </pre>
         *
         * <code>fixed32 align = 9;</code>
         */
        private void clearAlign() {

            align_ = 0;
        }

        public static final int TYPE_FIELD_NUMBER = 10;
        private int type_;
        /**
         * <pre>
         *显示的信息 参见Pb_TableCardType
         * </pre>
         *
         * <code>fixed32 type = 10;</code>
         */
        public int getType() {
            return type_;
        }
        /**
         * <pre>
         *显示的信息 参见Pb_TableCardType
         * </pre>
         *
         * <code>fixed32 type = 10;</code>
         */
        private void setType(int value) {

            type_ = value;
        }
        /**
         * <pre>
         *显示的信息 参见Pb_TableCardType
         * </pre>
         *
         * <code>fixed32 type = 10;</code>
         */
        private void clearType() {

            type_ = 0;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (!fontname_.isEmpty()) {
                output.writeBytes(1, fontname_);
            }
            if (fontsize_ != 0) {
                output.writeFixed32(2, fontsize_);
            }
            if (fontcolor_ != 0) {
                output.writeFixed32(3, fontcolor_);
            }
            if (lx_ != 0F) {
                output.writeFloat(4, lx_);
            }
            if (ly_ != 0F) {
                output.writeFloat(5, ly_);
            }
            if (rx_ != 0F) {
                output.writeFloat(6, rx_);
            }
            if (ry_ != 0F) {
                output.writeFloat(7, ry_);
            }
            if (flag_ != 0) {
                output.writeFixed32(8, flag_);
            }
            if (align_ != 0) {
                output.writeFixed32(9, align_);
            }
            if (type_ != 0) {
                output.writeFixed32(10, type_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (!fontname_.isEmpty()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(1, fontname_);
            }
            if (fontsize_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(2, fontsize_);
            }
            if (fontcolor_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(3, fontcolor_);
            }
            if (lx_ != 0F) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFloatSize(4, lx_);
            }
            if (ly_ != 0F) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFloatSize(5, ly_);
            }
            if (rx_ != 0F) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFloatSize(6, rx_);
            }
            if (ry_ != 0F) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFloatSize(7, ry_);
            }
            if (flag_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(8, flag_);
            }
            if (align_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(9, align_);
            }
            if (type_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(10, type_);
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetTableCardDetailInfo parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetTableCardDetailInfo parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetTableCardDetailInfo parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetTableCardDetailInfo parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetTableCardDetailInfo parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetTableCardDetailInfo parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetTableCardDetailInfo parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetTableCardDetailInfo parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetTableCardDetailInfo parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetTableCardDetailInfo parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetTableCardDetailInfo parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetTableCardDetailInfo parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetTableCardDetailInfo prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *会议双屏显示相关
         * </pre>
         *
         * Protobuf type {@code pbui_Item_MeetTableCardDetailInfo}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetTableCardDetailInfo, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Item_MeetTableCardDetailInfo)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetTableCardDetailInfoOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetTableCardDetailInfo.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <pre>
             *使用字体名称
             * </pre>
             *
             * <code>bytes fontname = 1;</code>
             */
            public com.google.protobuf.ByteString getFontname() {
                return instance.getFontname();
            }
            /**
             * <pre>
             *使用字体名称
             * </pre>
             *
             * <code>bytes fontname = 1;</code>
             */
            public Builder setFontname(com.google.protobuf.ByteString value) {
                copyOnWrite();
                instance.setFontname(value);
                return this;
            }
            /**
             * <pre>
             *使用字体名称
             * </pre>
             *
             * <code>bytes fontname = 1;</code>
             */
            public Builder clearFontname() {
                copyOnWrite();
                instance.clearFontname();
                return this;
            }

            /**
             * <pre>
             *字体 大小
             * </pre>
             *
             * <code>fixed32 fontsize = 2;</code>
             */
            public int getFontsize() {
                return instance.getFontsize();
            }
            /**
             * <pre>
             *字体 大小
             * </pre>
             *
             * <code>fixed32 fontsize = 2;</code>
             */
            public Builder setFontsize(int value) {
                copyOnWrite();
                instance.setFontsize(value);
                return this;
            }
            /**
             * <pre>
             *字体 大小
             * </pre>
             *
             * <code>fixed32 fontsize = 2;</code>
             */
            public Builder clearFontsize() {
                copyOnWrite();
                instance.clearFontsize();
                return this;
            }

            /**
             * <pre>
             *字体颜色
             * </pre>
             *
             * <code>fixed32 fontcolor = 3;</code>
             */
            public int getFontcolor() {
                return instance.getFontcolor();
            }
            /**
             * <pre>
             *字体颜色
             * </pre>
             *
             * <code>fixed32 fontcolor = 3;</code>
             */
            public Builder setFontcolor(int value) {
                copyOnWrite();
                instance.setFontcolor(value);
                return this;
            }
            /**
             * <pre>
             *字体颜色
             * </pre>
             *
             * <code>fixed32 fontcolor = 3;</code>
             */
            public Builder clearFontcolor() {
                copyOnWrite();
                instance.clearFontcolor();
                return this;
            }

            /**
             * <pre>
             *左上角 x坐标 相对宽的百分比 如：lx=0.1 当宽为1920时 真正的lx应该= 0.1 * 1920 = 192
             * </pre>
             *
             * <code>float lx = 4;</code>
             */
            public float getLx() {
                return instance.getLx();
            }
            /**
             * <pre>
             *左上角 x坐标 相对宽的百分比 如：lx=0.1 当宽为1920时 真正的lx应该= 0.1 * 1920 = 192
             * </pre>
             *
             * <code>float lx = 4;</code>
             */
            public Builder setLx(float value) {
                copyOnWrite();
                instance.setLx(value);
                return this;
            }
            /**
             * <pre>
             *左上角 x坐标 相对宽的百分比 如：lx=0.1 当宽为1920时 真正的lx应该= 0.1 * 1920 = 192
             * </pre>
             *
             * <code>float lx = 4;</code>
             */
            public Builder clearLx() {
                copyOnWrite();
                instance.clearLx();
                return this;
            }

            /**
             * <code>float ly = 5;</code>
             */
            public float getLy() {
                return instance.getLy();
            }
            /**
             * <code>float ly = 5;</code>
             */
            public Builder setLy(float value) {
                copyOnWrite();
                instance.setLy(value);
                return this;
            }
            /**
             * <code>float ly = 5;</code>
             */
            public Builder clearLy() {
                copyOnWrite();
                instance.clearLy();
                return this;
            }

            /**
             * <code>float rx = 6;</code>
             */
            public float getRx() {
                return instance.getRx();
            }
            /**
             * <code>float rx = 6;</code>
             */
            public Builder setRx(float value) {
                copyOnWrite();
                instance.setRx(value);
                return this;
            }
            /**
             * <code>float rx = 6;</code>
             */
            public Builder clearRx() {
                copyOnWrite();
                instance.clearRx();
                return this;
            }

            /**
             * <code>float ry = 7;</code>
             */
            public float getRy() {
                return instance.getRy();
            }
            /**
             * <code>float ry = 7;</code>
             */
            public Builder setRy(float value) {
                copyOnWrite();
                instance.setRy(value);
                return this;
            }
            /**
             * <code>float ry = 7;</code>
             */
            public Builder clearRy() {
                copyOnWrite();
                instance.clearRy();
                return this;
            }

            /**
             * <pre>
             *显示标志 参见Pb_TableCardFlag
             * </pre>
             *
             * <code>fixed32 flag = 8;</code>
             */
            public int getFlag() {
                return instance.getFlag();
            }
            /**
             * <pre>
             *显示标志 参见Pb_TableCardFlag
             * </pre>
             *
             * <code>fixed32 flag = 8;</code>
             */
            public Builder setFlag(int value) {
                copyOnWrite();
                instance.setFlag(value);
                return this;
            }
            /**
             * <pre>
             *显示标志 参见Pb_TableCardFlag
             * </pre>
             *
             * <code>fixed32 flag = 8;</code>
             */
            public Builder clearFlag() {
                copyOnWrite();
                instance.clearFlag();
                return this;
            }

            /**
             * <pre>
             *参见本页 font align flag
             * </pre>
             *
             * <code>fixed32 align = 9;</code>
             */
            public int getAlign() {
                return instance.getAlign();
            }
            /**
             * <pre>
             *参见本页 font align flag
             * </pre>
             *
             * <code>fixed32 align = 9;</code>
             */
            public Builder setAlign(int value) {
                copyOnWrite();
                instance.setAlign(value);
                return this;
            }
            /**
             * <pre>
             *参见本页 font align flag
             * </pre>
             *
             * <code>fixed32 align = 9;</code>
             */
            public Builder clearAlign() {
                copyOnWrite();
                instance.clearAlign();
                return this;
            }

            /**
             * <pre>
             *显示的信息 参见Pb_TableCardType
             * </pre>
             *
             * <code>fixed32 type = 10;</code>
             */
            public int getType() {
                return instance.getType();
            }
            /**
             * <pre>
             *显示的信息 参见Pb_TableCardType
             * </pre>
             *
             * <code>fixed32 type = 10;</code>
             */
            public Builder setType(int value) {
                copyOnWrite();
                instance.setType(value);
                return this;
            }
            /**
             * <pre>
             *显示的信息 参见Pb_TableCardType
             * </pre>
             *
             * <code>fixed32 type = 10;</code>
             */
            public Builder clearType() {
                copyOnWrite();
                instance.clearType();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Item_MeetTableCardDetailInfo)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetTableCardDetailInfo();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetTableCardDetailInfo other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetTableCardDetailInfo) arg1;
                    fontname_ = visitor.visitByteString(fontname_ != com.google.protobuf.ByteString.EMPTY, fontname_,
                            other.fontname_ != com.google.protobuf.ByteString.EMPTY, other.fontname_);
                    fontsize_ = visitor.visitInt(fontsize_ != 0, fontsize_,
                            other.fontsize_ != 0, other.fontsize_);
                    fontcolor_ = visitor.visitInt(fontcolor_ != 0, fontcolor_,
                            other.fontcolor_ != 0, other.fontcolor_);
                    lx_ = visitor.visitFloat(lx_ != 0F, lx_,
                            other.lx_ != 0F, other.lx_);
                    ly_ = visitor.visitFloat(ly_ != 0F, ly_,
                            other.ly_ != 0F, other.ly_);
                    rx_ = visitor.visitFloat(rx_ != 0F, rx_,
                            other.rx_ != 0F, other.rx_);
                    ry_ = visitor.visitFloat(ry_ != 0F, ry_,
                            other.ry_ != 0F, other.ry_);
                    flag_ = visitor.visitInt(flag_ != 0, flag_,
                            other.flag_ != 0, other.flag_);
                    align_ = visitor.visitInt(align_ != 0, align_,
                            other.align_ != 0, other.align_);
                    type_ = visitor.visitInt(type_ != 0, type_,
                            other.type_ != 0, other.type_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 10: {

                                    fontname_ = input.readBytes();
                                    break;
                                }
                                case 21: {

                                    fontsize_ = input.readFixed32();
                                    break;
                                }
                                case 29: {

                                    fontcolor_ = input.readFixed32();
                                    break;
                                }
                                case 37: {

                                    lx_ = input.readFloat();
                                    break;
                                }
                                case 45: {

                                    ly_ = input.readFloat();
                                    break;
                                }
                                case 53: {

                                    rx_ = input.readFloat();
                                    break;
                                }
                                case 61: {

                                    ry_ = input.readFloat();
                                    break;
                                }
                                case 69: {

                                    flag_ = input.readFixed32();
                                    break;
                                }
                                case 77: {

                                    align_ = input.readFixed32();
                                    break;
                                }
                                case 85: {

                                    type_ = input.readFixed32();
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetTableCardDetailInfo.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Item_MeetTableCardDetailInfo)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetTableCardDetailInfo DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Item_MeetTableCardDetailInfo();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetTableCardDetailInfo getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Item_MeetTableCardDetailInfo> PARSER;

        public static com.google.protobuf.Parser<pbui_Item_MeetTableCardDetailInfo> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Type_MeetTableCardDetailInfoOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Type_MeetTableCardDetailInfo)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <pre>
         *底图ID
         * </pre>
         *
         * <code>fixed32 bgphotoid = 1;</code>
         */
        int getBgphotoid();

        /**
         * <pre>
         *必须是3个
         * </pre>
         *
         * <code>repeated .pbui_Item_MeetTableCardDetailInfo item = 2;</code>
         */
        java.util.List<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetTableCardDetailInfo>
        getItemList();
        /**
         * <pre>
         *必须是3个
         * </pre>
         *
         * <code>repeated .pbui_Item_MeetTableCardDetailInfo item = 2;</code>
         */
        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetTableCardDetailInfo getItem(int index);
        /**
         * <pre>
         *必须是3个
         * </pre>
         *
         * <code>repeated .pbui_Item_MeetTableCardDetailInfo item = 2;</code>
         */
        int getItemCount();
    }
    /**
     * <pre>
     *会议双屏显示相关
     *call
     *type:Pb_TYPE_MEET_INTERFACE_MEETTABLECARD
     *method: mod/query
     * </pre>
     *
     * Protobuf type {@code pbui_Type_MeetTableCardDetailInfo}
     */
    public  static final class pbui_Type_MeetTableCardDetailInfo extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Type_MeetTableCardDetailInfo, pbui_Type_MeetTableCardDetailInfo.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Type_MeetTableCardDetailInfo)
            pbui_Type_MeetTableCardDetailInfoOrBuilder {
        private pbui_Type_MeetTableCardDetailInfo() {
            item_ = emptyProtobufList();
        }
        private int bitField0_;
        public static final int BGPHOTOID_FIELD_NUMBER = 1;
        private int bgphotoid_;
        /**
         * <pre>
         *底图ID
         * </pre>
         *
         * <code>fixed32 bgphotoid = 1;</code>
         */
        public int getBgphotoid() {
            return bgphotoid_;
        }
        /**
         * <pre>
         *底图ID
         * </pre>
         *
         * <code>fixed32 bgphotoid = 1;</code>
         */
        private void setBgphotoid(int value) {

            bgphotoid_ = value;
        }
        /**
         * <pre>
         *底图ID
         * </pre>
         *
         * <code>fixed32 bgphotoid = 1;</code>
         */
        private void clearBgphotoid() {

            bgphotoid_ = 0;
        }

        public static final int ITEM_FIELD_NUMBER = 2;
        private com.google.protobuf.Internal.ProtobufList<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetTableCardDetailInfo> item_;
        /**
         * <pre>
         *必须是3个
         * </pre>
         *
         * <code>repeated .pbui_Item_MeetTableCardDetailInfo item = 2;</code>
         */
        public java.util.List<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetTableCardDetailInfo> getItemList() {
            return item_;
        }
        /**
         * <pre>
         *必须是3个
         * </pre>
         *
         * <code>repeated .pbui_Item_MeetTableCardDetailInfo item = 2;</code>
         */
        public java.util.List<? extends com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetTableCardDetailInfoOrBuilder>
        getItemOrBuilderList() {
            return item_;
        }
        /**
         * <pre>
         *必须是3个
         * </pre>
         *
         * <code>repeated .pbui_Item_MeetTableCardDetailInfo item = 2;</code>
         */
        public int getItemCount() {
            return item_.size();
        }
        /**
         * <pre>
         *必须是3个
         * </pre>
         *
         * <code>repeated .pbui_Item_MeetTableCardDetailInfo item = 2;</code>
         */
        public com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetTableCardDetailInfo getItem(int index) {
            return item_.get(index);
        }
        /**
         * <pre>
         *必须是3个
         * </pre>
         *
         * <code>repeated .pbui_Item_MeetTableCardDetailInfo item = 2;</code>
         */
        public com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetTableCardDetailInfoOrBuilder getItemOrBuilder(
                int index) {
            return item_.get(index);
        }
        private void ensureItemIsMutable() {
            if (!item_.isModifiable()) {
                item_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(item_);
            }
        }

        /**
         * <pre>
         *必须是3个
         * </pre>
         *
         * <code>repeated .pbui_Item_MeetTableCardDetailInfo item = 2;</code>
         */
        private void setItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetTableCardDetailInfo value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensureItemIsMutable();
            item_.set(index, value);
        }
        /**
         * <pre>
         *必须是3个
         * </pre>
         *
         * <code>repeated .pbui_Item_MeetTableCardDetailInfo item = 2;</code>
         */
        private void setItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetTableCardDetailInfo.Builder builderForValue) {
            ensureItemIsMutable();
            item_.set(index, builderForValue.build());
        }
        /**
         * <pre>
         *必须是3个
         * </pre>
         *
         * <code>repeated .pbui_Item_MeetTableCardDetailInfo item = 2;</code>
         */
        private void addItem(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetTableCardDetailInfo value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensureItemIsMutable();
            item_.add(value);
        }
        /**
         * <pre>
         *必须是3个
         * </pre>
         *
         * <code>repeated .pbui_Item_MeetTableCardDetailInfo item = 2;</code>
         */
        private void addItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetTableCardDetailInfo value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensureItemIsMutable();
            item_.add(index, value);
        }
        /**
         * <pre>
         *必须是3个
         * </pre>
         *
         * <code>repeated .pbui_Item_MeetTableCardDetailInfo item = 2;</code>
         */
        private void addItem(
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetTableCardDetailInfo.Builder builderForValue) {
            ensureItemIsMutable();
            item_.add(builderForValue.build());
        }
        /**
         * <pre>
         *必须是3个
         * </pre>
         *
         * <code>repeated .pbui_Item_MeetTableCardDetailInfo item = 2;</code>
         */
        private void addItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetTableCardDetailInfo.Builder builderForValue) {
            ensureItemIsMutable();
            item_.add(index, builderForValue.build());
        }
        /**
         * <pre>
         *必须是3个
         * </pre>
         *
         * <code>repeated .pbui_Item_MeetTableCardDetailInfo item = 2;</code>
         */
        private void addAllItem(
                java.lang.Iterable<? extends com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetTableCardDetailInfo> values) {
            ensureItemIsMutable();
            com.google.protobuf.AbstractMessageLite.addAll(
                    values, item_);
        }
        /**
         * <pre>
         *必须是3个
         * </pre>
         *
         * <code>repeated .pbui_Item_MeetTableCardDetailInfo item = 2;</code>
         */
        private void clearItem() {
            item_ = emptyProtobufList();
        }
        /**
         * <pre>
         *必须是3个
         * </pre>
         *
         * <code>repeated .pbui_Item_MeetTableCardDetailInfo item = 2;</code>
         */
        private void removeItem(int index) {
            ensureItemIsMutable();
            item_.remove(index);
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (bgphotoid_ != 0) {
                output.writeFixed32(1, bgphotoid_);
            }
            for (int i = 0; i < item_.size(); i++) {
                output.writeMessage(2, item_.get(i));
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (bgphotoid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(1, bgphotoid_);
            }
            for (int i = 0; i < item_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(2, item_.get(i));
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetTableCardDetailInfo parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetTableCardDetailInfo parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetTableCardDetailInfo parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetTableCardDetailInfo parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetTableCardDetailInfo parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetTableCardDetailInfo parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetTableCardDetailInfo parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetTableCardDetailInfo parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetTableCardDetailInfo parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetTableCardDetailInfo parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetTableCardDetailInfo parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetTableCardDetailInfo parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetTableCardDetailInfo prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *会议双屏显示相关
         *call
         *type:Pb_TYPE_MEET_INTERFACE_MEETTABLECARD
         *method: mod/query
         * </pre>
         *
         * Protobuf type {@code pbui_Type_MeetTableCardDetailInfo}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetTableCardDetailInfo, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Type_MeetTableCardDetailInfo)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetTableCardDetailInfoOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetTableCardDetailInfo.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <pre>
             *底图ID
             * </pre>
             *
             * <code>fixed32 bgphotoid = 1;</code>
             */
            public int getBgphotoid() {
                return instance.getBgphotoid();
            }
            /**
             * <pre>
             *底图ID
             * </pre>
             *
             * <code>fixed32 bgphotoid = 1;</code>
             */
            public Builder setBgphotoid(int value) {
                copyOnWrite();
                instance.setBgphotoid(value);
                return this;
            }
            /**
             * <pre>
             *底图ID
             * </pre>
             *
             * <code>fixed32 bgphotoid = 1;</code>
             */
            public Builder clearBgphotoid() {
                copyOnWrite();
                instance.clearBgphotoid();
                return this;
            }

            /**
             * <pre>
             *必须是3个
             * </pre>
             *
             * <code>repeated .pbui_Item_MeetTableCardDetailInfo item = 2;</code>
             */
            public java.util.List<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetTableCardDetailInfo> getItemList() {
                return java.util.Collections.unmodifiableList(
                        instance.getItemList());
            }
            /**
             * <pre>
             *必须是3个
             * </pre>
             *
             * <code>repeated .pbui_Item_MeetTableCardDetailInfo item = 2;</code>
             */
            public int getItemCount() {
                return instance.getItemCount();
            }/**
             * <pre>
             *必须是3个
             * </pre>
             *
             * <code>repeated .pbui_Item_MeetTableCardDetailInfo item = 2;</code>
             */
            public com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetTableCardDetailInfo getItem(int index) {
                return instance.getItem(index);
            }
            /**
             * <pre>
             *必须是3个
             * </pre>
             *
             * <code>repeated .pbui_Item_MeetTableCardDetailInfo item = 2;</code>
             */
            public Builder setItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetTableCardDetailInfo value) {
                copyOnWrite();
                instance.setItem(index, value);
                return this;
            }
            /**
             * <pre>
             *必须是3个
             * </pre>
             *
             * <code>repeated .pbui_Item_MeetTableCardDetailInfo item = 2;</code>
             */
            public Builder setItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetTableCardDetailInfo.Builder builderForValue) {
                copyOnWrite();
                instance.setItem(index, builderForValue);
                return this;
            }
            /**
             * <pre>
             *必须是3个
             * </pre>
             *
             * <code>repeated .pbui_Item_MeetTableCardDetailInfo item = 2;</code>
             */
            public Builder addItem(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetTableCardDetailInfo value) {
                copyOnWrite();
                instance.addItem(value);
                return this;
            }
            /**
             * <pre>
             *必须是3个
             * </pre>
             *
             * <code>repeated .pbui_Item_MeetTableCardDetailInfo item = 2;</code>
             */
            public Builder addItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetTableCardDetailInfo value) {
                copyOnWrite();
                instance.addItem(index, value);
                return this;
            }
            /**
             * <pre>
             *必须是3个
             * </pre>
             *
             * <code>repeated .pbui_Item_MeetTableCardDetailInfo item = 2;</code>
             */
            public Builder addItem(
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetTableCardDetailInfo.Builder builderForValue) {
                copyOnWrite();
                instance.addItem(builderForValue);
                return this;
            }
            /**
             * <pre>
             *必须是3个
             * </pre>
             *
             * <code>repeated .pbui_Item_MeetTableCardDetailInfo item = 2;</code>
             */
            public Builder addItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetTableCardDetailInfo.Builder builderForValue) {
                copyOnWrite();
                instance.addItem(index, builderForValue);
                return this;
            }
            /**
             * <pre>
             *必须是3个
             * </pre>
             *
             * <code>repeated .pbui_Item_MeetTableCardDetailInfo item = 2;</code>
             */
            public Builder addAllItem(
                    java.lang.Iterable<? extends com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetTableCardDetailInfo> values) {
                copyOnWrite();
                instance.addAllItem(values);
                return this;
            }
            /**
             * <pre>
             *必须是3个
             * </pre>
             *
             * <code>repeated .pbui_Item_MeetTableCardDetailInfo item = 2;</code>
             */
            public Builder clearItem() {
                copyOnWrite();
                instance.clearItem();
                return this;
            }
            /**
             * <pre>
             *必须是3个
             * </pre>
             *
             * <code>repeated .pbui_Item_MeetTableCardDetailInfo item = 2;</code>
             */
            public Builder removeItem(int index) {
                copyOnWrite();
                instance.removeItem(index);
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Type_MeetTableCardDetailInfo)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetTableCardDetailInfo();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    item_.makeImmutable();
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetTableCardDetailInfo other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetTableCardDetailInfo) arg1;
                    bgphotoid_ = visitor.visitInt(bgphotoid_ != 0, bgphotoid_,
                            other.bgphotoid_ != 0, other.bgphotoid_);
                    item_= visitor.visitList(item_, other.item_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                        bitField0_ |= other.bitField0_;
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 13: {

                                    bgphotoid_ = input.readFixed32();
                                    break;
                                }
                                case 18: {
                                    if (!item_.isModifiable()) {
                                        item_ =
                                                com.google.protobuf.GeneratedMessageLite.mutableCopy(item_);
                                    }
                                    item_.add(
                                            input.readMessage(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetTableCardDetailInfo.parser(), extensionRegistry));
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetTableCardDetailInfo.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Type_MeetTableCardDetailInfo)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetTableCardDetailInfo DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Type_MeetTableCardDetailInfo();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetTableCardDetailInfo getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Type_MeetTableCardDetailInfo> PARSER;

        public static com.google.protobuf.Parser<pbui_Type_MeetTableCardDetailInfo> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Item_MeetSeatDetailInfoOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Item_MeetSeatDetailInfo)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <pre>
         *参会人员ID
         * </pre>
         *
         * <code>fixed32 nameId = 1;</code>
         */
        int getNameId();

        /**
         * <pre>
         *设备ID
         * </pre>
         *
         * <code>fixed32 seatid = 2;</code>
         */
        int getSeatid();

        /**
         * <pre>
         *人员身份  参见Pb_MeetMemberRole
         * </pre>
         *
         * <code>fixed32 role = 3;</code>
         */
        int getRole();
    }
    /**
     * <pre>
     *会议排位信息
     * </pre>
     *
     * Protobuf type {@code pbui_Item_MeetSeatDetailInfo}
     */
    public  static final class pbui_Item_MeetSeatDetailInfo extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Item_MeetSeatDetailInfo, pbui_Item_MeetSeatDetailInfo.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Item_MeetSeatDetailInfo)
            pbui_Item_MeetSeatDetailInfoOrBuilder {
        private pbui_Item_MeetSeatDetailInfo() {
        }
        public static final int NAMEID_FIELD_NUMBER = 1;
        private int nameId_;
        /**
         * <pre>
         *参会人员ID
         * </pre>
         *
         * <code>fixed32 nameId = 1;</code>
         */
        public int getNameId() {
            return nameId_;
        }
        /**
         * <pre>
         *参会人员ID
         * </pre>
         *
         * <code>fixed32 nameId = 1;</code>
         */
        private void setNameId(int value) {

            nameId_ = value;
        }
        /**
         * <pre>
         *参会人员ID
         * </pre>
         *
         * <code>fixed32 nameId = 1;</code>
         */
        private void clearNameId() {

            nameId_ = 0;
        }

        public static final int SEATID_FIELD_NUMBER = 2;
        private int seatid_;
        /**
         * <pre>
         *设备ID
         * </pre>
         *
         * <code>fixed32 seatid = 2;</code>
         */
        public int getSeatid() {
            return seatid_;
        }
        /**
         * <pre>
         *设备ID
         * </pre>
         *
         * <code>fixed32 seatid = 2;</code>
         */
        private void setSeatid(int value) {

            seatid_ = value;
        }
        /**
         * <pre>
         *设备ID
         * </pre>
         *
         * <code>fixed32 seatid = 2;</code>
         */
        private void clearSeatid() {

            seatid_ = 0;
        }

        public static final int ROLE_FIELD_NUMBER = 3;
        private int role_;
        /**
         * <pre>
         *人员身份  参见Pb_MeetMemberRole
         * </pre>
         *
         * <code>fixed32 role = 3;</code>
         */
        public int getRole() {
            return role_;
        }
        /**
         * <pre>
         *人员身份  参见Pb_MeetMemberRole
         * </pre>
         *
         * <code>fixed32 role = 3;</code>
         */
        private void setRole(int value) {

            role_ = value;
        }
        /**
         * <pre>
         *人员身份  参见Pb_MeetMemberRole
         * </pre>
         *
         * <code>fixed32 role = 3;</code>
         */
        private void clearRole() {

            role_ = 0;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (nameId_ != 0) {
                output.writeFixed32(1, nameId_);
            }
            if (seatid_ != 0) {
                output.writeFixed32(2, seatid_);
            }
            if (role_ != 0) {
                output.writeFixed32(3, role_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (nameId_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(1, nameId_);
            }
            if (seatid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(2, seatid_);
            }
            if (role_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(3, role_);
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSeatDetailInfo parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSeatDetailInfo parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSeatDetailInfo parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSeatDetailInfo parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSeatDetailInfo parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSeatDetailInfo parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSeatDetailInfo parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSeatDetailInfo parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSeatDetailInfo parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSeatDetailInfo parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSeatDetailInfo parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSeatDetailInfo parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSeatDetailInfo prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *会议排位信息
         * </pre>
         *
         * Protobuf type {@code pbui_Item_MeetSeatDetailInfo}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSeatDetailInfo, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Item_MeetSeatDetailInfo)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSeatDetailInfoOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSeatDetailInfo.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <pre>
             *参会人员ID
             * </pre>
             *
             * <code>fixed32 nameId = 1;</code>
             */
            public int getNameId() {
                return instance.getNameId();
            }
            /**
             * <pre>
             *参会人员ID
             * </pre>
             *
             * <code>fixed32 nameId = 1;</code>
             */
            public Builder setNameId(int value) {
                copyOnWrite();
                instance.setNameId(value);
                return this;
            }
            /**
             * <pre>
             *参会人员ID
             * </pre>
             *
             * <code>fixed32 nameId = 1;</code>
             */
            public Builder clearNameId() {
                copyOnWrite();
                instance.clearNameId();
                return this;
            }

            /**
             * <pre>
             *设备ID
             * </pre>
             *
             * <code>fixed32 seatid = 2;</code>
             */
            public int getSeatid() {
                return instance.getSeatid();
            }
            /**
             * <pre>
             *设备ID
             * </pre>
             *
             * <code>fixed32 seatid = 2;</code>
             */
            public Builder setSeatid(int value) {
                copyOnWrite();
                instance.setSeatid(value);
                return this;
            }
            /**
             * <pre>
             *设备ID
             * </pre>
             *
             * <code>fixed32 seatid = 2;</code>
             */
            public Builder clearSeatid() {
                copyOnWrite();
                instance.clearSeatid();
                return this;
            }

            /**
             * <pre>
             *人员身份  参见Pb_MeetMemberRole
             * </pre>
             *
             * <code>fixed32 role = 3;</code>
             */
            public int getRole() {
                return instance.getRole();
            }
            /**
             * <pre>
             *人员身份  参见Pb_MeetMemberRole
             * </pre>
             *
             * <code>fixed32 role = 3;</code>
             */
            public Builder setRole(int value) {
                copyOnWrite();
                instance.setRole(value);
                return this;
            }
            /**
             * <pre>
             *人员身份  参见Pb_MeetMemberRole
             * </pre>
             *
             * <code>fixed32 role = 3;</code>
             */
            public Builder clearRole() {
                copyOnWrite();
                instance.clearRole();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Item_MeetSeatDetailInfo)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSeatDetailInfo();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSeatDetailInfo other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSeatDetailInfo) arg1;
                    nameId_ = visitor.visitInt(nameId_ != 0, nameId_,
                            other.nameId_ != 0, other.nameId_);
                    seatid_ = visitor.visitInt(seatid_ != 0, seatid_,
                            other.seatid_ != 0, other.seatid_);
                    role_ = visitor.visitInt(role_ != 0, role_,
                            other.role_ != 0, other.role_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 13: {

                                    nameId_ = input.readFixed32();
                                    break;
                                }
                                case 21: {

                                    seatid_ = input.readFixed32();
                                    break;
                                }
                                case 29: {

                                    role_ = input.readFixed32();
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSeatDetailInfo.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Item_MeetSeatDetailInfo)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSeatDetailInfo DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Item_MeetSeatDetailInfo();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSeatDetailInfo getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Item_MeetSeatDetailInfo> PARSER;

        public static com.google.protobuf.Parser<pbui_Item_MeetSeatDetailInfo> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Type_MeetSeatDetailInfoOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Type_MeetSeatDetailInfo)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <pre>
         *排位
         * </pre>
         *
         * <code>repeated .pbui_Item_MeetSeatDetailInfo item = 1;</code>
         */
        java.util.List<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSeatDetailInfo>
        getItemList();
        /**
         * <pre>
         *排位
         * </pre>
         *
         * <code>repeated .pbui_Item_MeetSeatDetailInfo item = 1;</code>
         */
        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSeatDetailInfo getItem(int index);
        /**
         * <pre>
         *排位
         * </pre>
         *
         * <code>repeated .pbui_Item_MeetSeatDetailInfo item = 1;</code>
         */
        int getItemCount();
    }
    /**
     * <pre>
     *会议排位信息
     *call
     *type:Pb_TYPE_MEET_INTERFACE_MEETSEAT
     *method: mod/query
     * </pre>
     *
     * Protobuf type {@code pbui_Type_MeetSeatDetailInfo}
     */
    public  static final class pbui_Type_MeetSeatDetailInfo extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Type_MeetSeatDetailInfo, pbui_Type_MeetSeatDetailInfo.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Type_MeetSeatDetailInfo)
            pbui_Type_MeetSeatDetailInfoOrBuilder {
        private pbui_Type_MeetSeatDetailInfo() {
            item_ = emptyProtobufList();
        }
        public static final int ITEM_FIELD_NUMBER = 1;
        private com.google.protobuf.Internal.ProtobufList<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSeatDetailInfo> item_;
        /**
         * <pre>
         *排位
         * </pre>
         *
         * <code>repeated .pbui_Item_MeetSeatDetailInfo item = 1;</code>
         */
        public java.util.List<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSeatDetailInfo> getItemList() {
            return item_;
        }
        /**
         * <pre>
         *排位
         * </pre>
         *
         * <code>repeated .pbui_Item_MeetSeatDetailInfo item = 1;</code>
         */
        public java.util.List<? extends com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSeatDetailInfoOrBuilder>
        getItemOrBuilderList() {
            return item_;
        }
        /**
         * <pre>
         *排位
         * </pre>
         *
         * <code>repeated .pbui_Item_MeetSeatDetailInfo item = 1;</code>
         */
        public int getItemCount() {
            return item_.size();
        }
        /**
         * <pre>
         *排位
         * </pre>
         *
         * <code>repeated .pbui_Item_MeetSeatDetailInfo item = 1;</code>
         */
        public com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSeatDetailInfo getItem(int index) {
            return item_.get(index);
        }
        /**
         * <pre>
         *排位
         * </pre>
         *
         * <code>repeated .pbui_Item_MeetSeatDetailInfo item = 1;</code>
         */
        public com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSeatDetailInfoOrBuilder getItemOrBuilder(
                int index) {
            return item_.get(index);
        }
        private void ensureItemIsMutable() {
            if (!item_.isModifiable()) {
                item_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(item_);
            }
        }

        /**
         * <pre>
         *排位
         * </pre>
         *
         * <code>repeated .pbui_Item_MeetSeatDetailInfo item = 1;</code>
         */
        private void setItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSeatDetailInfo value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensureItemIsMutable();
            item_.set(index, value);
        }
        /**
         * <pre>
         *排位
         * </pre>
         *
         * <code>repeated .pbui_Item_MeetSeatDetailInfo item = 1;</code>
         */
        private void setItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSeatDetailInfo.Builder builderForValue) {
            ensureItemIsMutable();
            item_.set(index, builderForValue.build());
        }
        /**
         * <pre>
         *排位
         * </pre>
         *
         * <code>repeated .pbui_Item_MeetSeatDetailInfo item = 1;</code>
         */
        private void addItem(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSeatDetailInfo value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensureItemIsMutable();
            item_.add(value);
        }
        /**
         * <pre>
         *排位
         * </pre>
         *
         * <code>repeated .pbui_Item_MeetSeatDetailInfo item = 1;</code>
         */
        private void addItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSeatDetailInfo value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensureItemIsMutable();
            item_.add(index, value);
        }
        /**
         * <pre>
         *排位
         * </pre>
         *
         * <code>repeated .pbui_Item_MeetSeatDetailInfo item = 1;</code>
         */
        private void addItem(
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSeatDetailInfo.Builder builderForValue) {
            ensureItemIsMutable();
            item_.add(builderForValue.build());
        }
        /**
         * <pre>
         *排位
         * </pre>
         *
         * <code>repeated .pbui_Item_MeetSeatDetailInfo item = 1;</code>
         */
        private void addItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSeatDetailInfo.Builder builderForValue) {
            ensureItemIsMutable();
            item_.add(index, builderForValue.build());
        }
        /**
         * <pre>
         *排位
         * </pre>
         *
         * <code>repeated .pbui_Item_MeetSeatDetailInfo item = 1;</code>
         */
        private void addAllItem(
                java.lang.Iterable<? extends com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSeatDetailInfo> values) {
            ensureItemIsMutable();
            com.google.protobuf.AbstractMessageLite.addAll(
                    values, item_);
        }
        /**
         * <pre>
         *排位
         * </pre>
         *
         * <code>repeated .pbui_Item_MeetSeatDetailInfo item = 1;</code>
         */
        private void clearItem() {
            item_ = emptyProtobufList();
        }
        /**
         * <pre>
         *排位
         * </pre>
         *
         * <code>repeated .pbui_Item_MeetSeatDetailInfo item = 1;</code>
         */
        private void removeItem(int index) {
            ensureItemIsMutable();
            item_.remove(index);
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            for (int i = 0; i < item_.size(); i++) {
                output.writeMessage(1, item_.get(i));
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            for (int i = 0; i < item_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, item_.get(i));
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSeatDetailInfo parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSeatDetailInfo parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSeatDetailInfo parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSeatDetailInfo parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSeatDetailInfo parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSeatDetailInfo parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSeatDetailInfo parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSeatDetailInfo parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSeatDetailInfo parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSeatDetailInfo parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSeatDetailInfo parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSeatDetailInfo parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSeatDetailInfo prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *会议排位信息
         *call
         *type:Pb_TYPE_MEET_INTERFACE_MEETSEAT
         *method: mod/query
         * </pre>
         *
         * Protobuf type {@code pbui_Type_MeetSeatDetailInfo}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSeatDetailInfo, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Type_MeetSeatDetailInfo)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSeatDetailInfoOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSeatDetailInfo.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <pre>
             *排位
             * </pre>
             *
             * <code>repeated .pbui_Item_MeetSeatDetailInfo item = 1;</code>
             */
            public java.util.List<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSeatDetailInfo> getItemList() {
                return java.util.Collections.unmodifiableList(
                        instance.getItemList());
            }
            /**
             * <pre>
             *排位
             * </pre>
             *
             * <code>repeated .pbui_Item_MeetSeatDetailInfo item = 1;</code>
             */
            public int getItemCount() {
                return instance.getItemCount();
            }/**
             * <pre>
             *排位
             * </pre>
             *
             * <code>repeated .pbui_Item_MeetSeatDetailInfo item = 1;</code>
             */
            public com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSeatDetailInfo getItem(int index) {
                return instance.getItem(index);
            }
            /**
             * <pre>
             *排位
             * </pre>
             *
             * <code>repeated .pbui_Item_MeetSeatDetailInfo item = 1;</code>
             */
            public Builder setItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSeatDetailInfo value) {
                copyOnWrite();
                instance.setItem(index, value);
                return this;
            }
            /**
             * <pre>
             *排位
             * </pre>
             *
             * <code>repeated .pbui_Item_MeetSeatDetailInfo item = 1;</code>
             */
            public Builder setItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSeatDetailInfo.Builder builderForValue) {
                copyOnWrite();
                instance.setItem(index, builderForValue);
                return this;
            }
            /**
             * <pre>
             *排位
             * </pre>
             *
             * <code>repeated .pbui_Item_MeetSeatDetailInfo item = 1;</code>
             */
            public Builder addItem(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSeatDetailInfo value) {
                copyOnWrite();
                instance.addItem(value);
                return this;
            }
            /**
             * <pre>
             *排位
             * </pre>
             *
             * <code>repeated .pbui_Item_MeetSeatDetailInfo item = 1;</code>
             */
            public Builder addItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSeatDetailInfo value) {
                copyOnWrite();
                instance.addItem(index, value);
                return this;
            }
            /**
             * <pre>
             *排位
             * </pre>
             *
             * <code>repeated .pbui_Item_MeetSeatDetailInfo item = 1;</code>
             */
            public Builder addItem(
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSeatDetailInfo.Builder builderForValue) {
                copyOnWrite();
                instance.addItem(builderForValue);
                return this;
            }
            /**
             * <pre>
             *排位
             * </pre>
             *
             * <code>repeated .pbui_Item_MeetSeatDetailInfo item = 1;</code>
             */
            public Builder addItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSeatDetailInfo.Builder builderForValue) {
                copyOnWrite();
                instance.addItem(index, builderForValue);
                return this;
            }
            /**
             * <pre>
             *排位
             * </pre>
             *
             * <code>repeated .pbui_Item_MeetSeatDetailInfo item = 1;</code>
             */
            public Builder addAllItem(
                    java.lang.Iterable<? extends com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSeatDetailInfo> values) {
                copyOnWrite();
                instance.addAllItem(values);
                return this;
            }
            /**
             * <pre>
             *排位
             * </pre>
             *
             * <code>repeated .pbui_Item_MeetSeatDetailInfo item = 1;</code>
             */
            public Builder clearItem() {
                copyOnWrite();
                instance.clearItem();
                return this;
            }
            /**
             * <pre>
             *排位
             * </pre>
             *
             * <code>repeated .pbui_Item_MeetSeatDetailInfo item = 1;</code>
             */
            public Builder removeItem(int index) {
                copyOnWrite();
                instance.removeItem(index);
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Type_MeetSeatDetailInfo)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSeatDetailInfo();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    item_.makeImmutable();
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSeatDetailInfo other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSeatDetailInfo) arg1;
                    item_= visitor.visitList(item_, other.item_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 10: {
                                    if (!item_.isModifiable()) {
                                        item_ =
                                                com.google.protobuf.GeneratedMessageLite.mutableCopy(item_);
                                    }
                                    item_.add(
                                            input.readMessage(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSeatDetailInfo.parser(), extensionRegistry));
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSeatDetailInfo.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Type_MeetSeatDetailInfo)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSeatDetailInfo DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Type_MeetSeatDetailInfo();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSeatDetailInfo getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Type_MeetSeatDetailInfo> PARSER;

        public static com.google.protobuf.Parser<pbui_Type_MeetSeatDetailInfo> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Type_MeetIMOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Type_MeetIM)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <pre>
         *消息类型 参见 Pb_MeetIMMSG_TYPE
         * </pre>
         *
         * <code>fixed32 msgtype = 1;</code>
         */
        int getMsgtype();

        /**
         * <pre>
         *发送者角色 参见 Pb_MeetMemberRole
         * </pre>
         *
         * <code>fixed32 role = 2;</code>
         */
        int getRole();

        /**
         * <pre>
         *发送者ID
         * </pre>
         *
         * <code>fixed32 memberid = 3;</code>
         */
        int getMemberid();

        /**
         * <pre>
         *消息文本 长度 Pb_MEETIM_CHAR_MSG_MAXLEN
         * </pre>
         *
         * <code>bytes msg = 4;</code>
         */
        com.google.protobuf.ByteString getMsg();

        /**
         * <pre>
         *发送UTC时间 单位:秒
         * </pre>
         *
         * <code>fixed64 utcsecond = 5;</code>
         */
        long getUtcsecond();
    }
    /**
     * <pre>
     *收到新的会议交流信息
     *callback
     *type:Pb_TYPE_MEET_INTERFACE_MEETIM
     *method: notify
     * </pre>
     *
     * Protobuf type {@code pbui_Type_MeetIM}
     */
    public  static final class pbui_Type_MeetIM extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Type_MeetIM, pbui_Type_MeetIM.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Type_MeetIM)
            pbui_Type_MeetIMOrBuilder {
        private pbui_Type_MeetIM() {
            msg_ = com.google.protobuf.ByteString.EMPTY;
        }
        public static final int MSGTYPE_FIELD_NUMBER = 1;
        private int msgtype_;
        /**
         * <pre>
         *消息类型 参见 Pb_MeetIMMSG_TYPE
         * </pre>
         *
         * <code>fixed32 msgtype = 1;</code>
         */
        public int getMsgtype() {
            return msgtype_;
        }
        /**
         * <pre>
         *消息类型 参见 Pb_MeetIMMSG_TYPE
         * </pre>
         *
         * <code>fixed32 msgtype = 1;</code>
         */
        private void setMsgtype(int value) {

            msgtype_ = value;
        }
        /**
         * <pre>
         *消息类型 参见 Pb_MeetIMMSG_TYPE
         * </pre>
         *
         * <code>fixed32 msgtype = 1;</code>
         */
        private void clearMsgtype() {

            msgtype_ = 0;
        }

        public static final int ROLE_FIELD_NUMBER = 2;
        private int role_;
        /**
         * <pre>
         *发送者角色 参见 Pb_MeetMemberRole
         * </pre>
         *
         * <code>fixed32 role = 2;</code>
         */
        public int getRole() {
            return role_;
        }
        /**
         * <pre>
         *发送者角色 参见 Pb_MeetMemberRole
         * </pre>
         *
         * <code>fixed32 role = 2;</code>
         */
        private void setRole(int value) {

            role_ = value;
        }
        /**
         * <pre>
         *发送者角色 参见 Pb_MeetMemberRole
         * </pre>
         *
         * <code>fixed32 role = 2;</code>
         */
        private void clearRole() {

            role_ = 0;
        }

        public static final int MEMBERID_FIELD_NUMBER = 3;
        private int memberid_;
        /**
         * <pre>
         *发送者ID
         * </pre>
         *
         * <code>fixed32 memberid = 3;</code>
         */
        public int getMemberid() {
            return memberid_;
        }
        /**
         * <pre>
         *发送者ID
         * </pre>
         *
         * <code>fixed32 memberid = 3;</code>
         */
        private void setMemberid(int value) {

            memberid_ = value;
        }
        /**
         * <pre>
         *发送者ID
         * </pre>
         *
         * <code>fixed32 memberid = 3;</code>
         */
        private void clearMemberid() {

            memberid_ = 0;
        }

        public static final int MSG_FIELD_NUMBER = 4;
        private com.google.protobuf.ByteString msg_;
        /**
         * <pre>
         *消息文本 长度 Pb_MEETIM_CHAR_MSG_MAXLEN
         * </pre>
         *
         * <code>bytes msg = 4;</code>
         */
        public com.google.protobuf.ByteString getMsg() {
            return msg_;
        }
        /**
         * <pre>
         *消息文本 长度 Pb_MEETIM_CHAR_MSG_MAXLEN
         * </pre>
         *
         * <code>bytes msg = 4;</code>
         */
        private void setMsg(com.google.protobuf.ByteString value) {
            if (value == null) {
                throw new NullPointerException();
            }

            msg_ = value;
        }
        /**
         * <pre>
         *消息文本 长度 Pb_MEETIM_CHAR_MSG_MAXLEN
         * </pre>
         *
         * <code>bytes msg = 4;</code>
         */
        private void clearMsg() {

            msg_ = getDefaultInstance().getMsg();
        }

        public static final int UTCSECOND_FIELD_NUMBER = 5;
        private long utcsecond_;
        /**
         * <pre>
         *发送UTC时间 单位:秒
         * </pre>
         *
         * <code>fixed64 utcsecond = 5;</code>
         */
        public long getUtcsecond() {
            return utcsecond_;
        }
        /**
         * <pre>
         *发送UTC时间 单位:秒
         * </pre>
         *
         * <code>fixed64 utcsecond = 5;</code>
         */
        private void setUtcsecond(long value) {

            utcsecond_ = value;
        }
        /**
         * <pre>
         *发送UTC时间 单位:秒
         * </pre>
         *
         * <code>fixed64 utcsecond = 5;</code>
         */
        private void clearUtcsecond() {

            utcsecond_ = 0L;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (msgtype_ != 0) {
                output.writeFixed32(1, msgtype_);
            }
            if (role_ != 0) {
                output.writeFixed32(2, role_);
            }
            if (memberid_ != 0) {
                output.writeFixed32(3, memberid_);
            }
            if (!msg_.isEmpty()) {
                output.writeBytes(4, msg_);
            }
            if (utcsecond_ != 0L) {
                output.writeFixed64(5, utcsecond_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (msgtype_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(1, msgtype_);
            }
            if (role_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(2, role_);
            }
            if (memberid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(3, memberid_);
            }
            if (!msg_.isEmpty()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(4, msg_);
            }
            if (utcsecond_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed64Size(5, utcsecond_);
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetIM parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetIM parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetIM parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetIM parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetIM parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetIM parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetIM parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetIM parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetIM parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetIM parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetIM parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetIM parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetIM prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *收到新的会议交流信息
         *callback
         *type:Pb_TYPE_MEET_INTERFACE_MEETIM
         *method: notify
         * </pre>
         *
         * Protobuf type {@code pbui_Type_MeetIM}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetIM, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Type_MeetIM)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetIMOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetIM.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <pre>
             *消息类型 参见 Pb_MeetIMMSG_TYPE
             * </pre>
             *
             * <code>fixed32 msgtype = 1;</code>
             */
            public int getMsgtype() {
                return instance.getMsgtype();
            }
            /**
             * <pre>
             *消息类型 参见 Pb_MeetIMMSG_TYPE
             * </pre>
             *
             * <code>fixed32 msgtype = 1;</code>
             */
            public Builder setMsgtype(int value) {
                copyOnWrite();
                instance.setMsgtype(value);
                return this;
            }
            /**
             * <pre>
             *消息类型 参见 Pb_MeetIMMSG_TYPE
             * </pre>
             *
             * <code>fixed32 msgtype = 1;</code>
             */
            public Builder clearMsgtype() {
                copyOnWrite();
                instance.clearMsgtype();
                return this;
            }

            /**
             * <pre>
             *发送者角色 参见 Pb_MeetMemberRole
             * </pre>
             *
             * <code>fixed32 role = 2;</code>
             */
            public int getRole() {
                return instance.getRole();
            }
            /**
             * <pre>
             *发送者角色 参见 Pb_MeetMemberRole
             * </pre>
             *
             * <code>fixed32 role = 2;</code>
             */
            public Builder setRole(int value) {
                copyOnWrite();
                instance.setRole(value);
                return this;
            }
            /**
             * <pre>
             *发送者角色 参见 Pb_MeetMemberRole
             * </pre>
             *
             * <code>fixed32 role = 2;</code>
             */
            public Builder clearRole() {
                copyOnWrite();
                instance.clearRole();
                return this;
            }

            /**
             * <pre>
             *发送者ID
             * </pre>
             *
             * <code>fixed32 memberid = 3;</code>
             */
            public int getMemberid() {
                return instance.getMemberid();
            }
            /**
             * <pre>
             *发送者ID
             * </pre>
             *
             * <code>fixed32 memberid = 3;</code>
             */
            public Builder setMemberid(int value) {
                copyOnWrite();
                instance.setMemberid(value);
                return this;
            }
            /**
             * <pre>
             *发送者ID
             * </pre>
             *
             * <code>fixed32 memberid = 3;</code>
             */
            public Builder clearMemberid() {
                copyOnWrite();
                instance.clearMemberid();
                return this;
            }

            /**
             * <pre>
             *消息文本 长度 Pb_MEETIM_CHAR_MSG_MAXLEN
             * </pre>
             *
             * <code>bytes msg = 4;</code>
             */
            public com.google.protobuf.ByteString getMsg() {
                return instance.getMsg();
            }
            /**
             * <pre>
             *消息文本 长度 Pb_MEETIM_CHAR_MSG_MAXLEN
             * </pre>
             *
             * <code>bytes msg = 4;</code>
             */
            public Builder setMsg(com.google.protobuf.ByteString value) {
                copyOnWrite();
                instance.setMsg(value);
                return this;
            }
            /**
             * <pre>
             *消息文本 长度 Pb_MEETIM_CHAR_MSG_MAXLEN
             * </pre>
             *
             * <code>bytes msg = 4;</code>
             */
            public Builder clearMsg() {
                copyOnWrite();
                instance.clearMsg();
                return this;
            }

            /**
             * <pre>
             *发送UTC时间 单位:秒
             * </pre>
             *
             * <code>fixed64 utcsecond = 5;</code>
             */
            public long getUtcsecond() {
                return instance.getUtcsecond();
            }
            /**
             * <pre>
             *发送UTC时间 单位:秒
             * </pre>
             *
             * <code>fixed64 utcsecond = 5;</code>
             */
            public Builder setUtcsecond(long value) {
                copyOnWrite();
                instance.setUtcsecond(value);
                return this;
            }
            /**
             * <pre>
             *发送UTC时间 单位:秒
             * </pre>
             *
             * <code>fixed64 utcsecond = 5;</code>
             */
            public Builder clearUtcsecond() {
                copyOnWrite();
                instance.clearUtcsecond();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Type_MeetIM)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetIM();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetIM other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetIM) arg1;
                    msgtype_ = visitor.visitInt(msgtype_ != 0, msgtype_,
                            other.msgtype_ != 0, other.msgtype_);
                    role_ = visitor.visitInt(role_ != 0, role_,
                            other.role_ != 0, other.role_);
                    memberid_ = visitor.visitInt(memberid_ != 0, memberid_,
                            other.memberid_ != 0, other.memberid_);
                    msg_ = visitor.visitByteString(msg_ != com.google.protobuf.ByteString.EMPTY, msg_,
                            other.msg_ != com.google.protobuf.ByteString.EMPTY, other.msg_);
                    utcsecond_ = visitor.visitLong(utcsecond_ != 0L, utcsecond_,
                            other.utcsecond_ != 0L, other.utcsecond_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 13: {

                                    msgtype_ = input.readFixed32();
                                    break;
                                }
                                case 21: {

                                    role_ = input.readFixed32();
                                    break;
                                }
                                case 29: {

                                    memberid_ = input.readFixed32();
                                    break;
                                }
                                case 34: {

                                    msg_ = input.readBytes();
                                    break;
                                }
                                case 41: {

                                    utcsecond_ = input.readFixed64();
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetIM.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Type_MeetIM)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetIM DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Type_MeetIM();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetIM getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Type_MeetIM> PARSER;

        public static com.google.protobuf.Parser<pbui_Type_MeetIM> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Type_SendMeetIMOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Type_SendMeetIM)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <pre>
         *消息类型 参见 Pb_MeetIMMSG_TYPE
         * </pre>
         *
         * <code>fixed32 msgtype = 1;</code>
         */
        int getMsgtype();

        /**
         * <pre>
         *消息文本  长度 Pb_MEETIM_CHAR_MSG_MAXLEN
         * </pre>
         *
         * <code>bytes msg = 2;</code>
         */
        com.google.protobuf.ByteString getMsg();

        /**
         * <pre>
         *为0表示当前会议全部 如果是会议服务类请求为0
         * </pre>
         *
         * <code>repeated fixed32 userids = 3;</code>
         */
        java.util.List<java.lang.Integer> getUseridsList();
        /**
         * <pre>
         *为0表示当前会议全部 如果是会议服务类请求为0
         * </pre>
         *
         * <code>repeated fixed32 userids = 3;</code>
         */
        int getUseridsCount();
        /**
         * <pre>
         *为0表示当前会议全部 如果是会议服务类请求为0
         * </pre>
         *
         * <code>repeated fixed32 userids = 3;</code>
         */
        int getUserids(int index);
    }
    /**
     * <pre>
     *发送消息
     *call
     *type:Pb_TYPE_MEET_INTERFACE_MEETIM
     *method: send
     * </pre>
     *
     * Protobuf type {@code pbui_Type_SendMeetIM}
     */
    public  static final class pbui_Type_SendMeetIM extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Type_SendMeetIM, pbui_Type_SendMeetIM.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Type_SendMeetIM)
            pbui_Type_SendMeetIMOrBuilder {
        private pbui_Type_SendMeetIM() {
            msg_ = com.google.protobuf.ByteString.EMPTY;
            userids_ = emptyIntList();
        }
        private int bitField0_;
        public static final int MSGTYPE_FIELD_NUMBER = 1;
        private int msgtype_;
        /**
         * <pre>
         *消息类型 参见 Pb_MeetIMMSG_TYPE
         * </pre>
         *
         * <code>fixed32 msgtype = 1;</code>
         */
        public int getMsgtype() {
            return msgtype_;
        }
        /**
         * <pre>
         *消息类型 参见 Pb_MeetIMMSG_TYPE
         * </pre>
         *
         * <code>fixed32 msgtype = 1;</code>
         */
        private void setMsgtype(int value) {

            msgtype_ = value;
        }
        /**
         * <pre>
         *消息类型 参见 Pb_MeetIMMSG_TYPE
         * </pre>
         *
         * <code>fixed32 msgtype = 1;</code>
         */
        private void clearMsgtype() {

            msgtype_ = 0;
        }

        public static final int MSG_FIELD_NUMBER = 2;
        private com.google.protobuf.ByteString msg_;
        /**
         * <pre>
         *消息文本  长度 Pb_MEETIM_CHAR_MSG_MAXLEN
         * </pre>
         *
         * <code>bytes msg = 2;</code>
         */
        public com.google.protobuf.ByteString getMsg() {
            return msg_;
        }
        /**
         * <pre>
         *消息文本  长度 Pb_MEETIM_CHAR_MSG_MAXLEN
         * </pre>
         *
         * <code>bytes msg = 2;</code>
         */
        private void setMsg(com.google.protobuf.ByteString value) {
            if (value == null) {
                throw new NullPointerException();
            }

            msg_ = value;
        }
        /**
         * <pre>
         *消息文本  长度 Pb_MEETIM_CHAR_MSG_MAXLEN
         * </pre>
         *
         * <code>bytes msg = 2;</code>
         */
        private void clearMsg() {

            msg_ = getDefaultInstance().getMsg();
        }

        public static final int USERIDS_FIELD_NUMBER = 3;
        private com.google.protobuf.Internal.IntList userids_;
        /**
         * <pre>
         *为0表示当前会议全部 如果是会议服务类请求为0
         * </pre>
         *
         * <code>repeated fixed32 userids = 3;</code>
         */
        public java.util.List<java.lang.Integer>
        getUseridsList() {
            return userids_;
        }
        /**
         * <pre>
         *为0表示当前会议全部 如果是会议服务类请求为0
         * </pre>
         *
         * <code>repeated fixed32 userids = 3;</code>
         */
        public int getUseridsCount() {
            return userids_.size();
        }
        /**
         * <pre>
         *为0表示当前会议全部 如果是会议服务类请求为0
         * </pre>
         *
         * <code>repeated fixed32 userids = 3;</code>
         */
        public int getUserids(int index) {
            return userids_.getInt(index);
        }
        private void ensureUseridsIsMutable() {
            if (!userids_.isModifiable()) {
                userids_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(userids_);
            }
        }
        /**
         * <pre>
         *为0表示当前会议全部 如果是会议服务类请求为0
         * </pre>
         *
         * <code>repeated fixed32 userids = 3;</code>
         */
        private void setUserids(
                int index, int value) {
            ensureUseridsIsMutable();
            userids_.setInt(index, value);
        }
        /**
         * <pre>
         *为0表示当前会议全部 如果是会议服务类请求为0
         * </pre>
         *
         * <code>repeated fixed32 userids = 3;</code>
         */
        private void addUserids(int value) {
            ensureUseridsIsMutable();
            userids_.addInt(value);
        }
        /**
         * <pre>
         *为0表示当前会议全部 如果是会议服务类请求为0
         * </pre>
         *
         * <code>repeated fixed32 userids = 3;</code>
         */
        private void addAllUserids(
                java.lang.Iterable<? extends java.lang.Integer> values) {
            ensureUseridsIsMutable();
            com.google.protobuf.AbstractMessageLite.addAll(
                    values, userids_);
        }
        /**
         * <pre>
         *为0表示当前会议全部 如果是会议服务类请求为0
         * </pre>
         *
         * <code>repeated fixed32 userids = 3;</code>
         */
        private void clearUserids() {
            userids_ = emptyIntList();
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (msgtype_ != 0) {
                output.writeFixed32(1, msgtype_);
            }
            if (!msg_.isEmpty()) {
                output.writeBytes(2, msg_);
            }
            for (int i = 0; i < userids_.size(); i++) {
                output.writeFixed32(3, userids_.getInt(i));
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (msgtype_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(1, msgtype_);
            }
            if (!msg_.isEmpty()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(2, msg_);
            }
            {
                int dataSize = 0;
                dataSize = 4 * getUseridsList().size();
                size += dataSize;
                size += 1 * getUseridsList().size();
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_SendMeetIM parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_SendMeetIM parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_SendMeetIM parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_SendMeetIM parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_SendMeetIM parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_SendMeetIM parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_SendMeetIM parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_SendMeetIM parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_SendMeetIM parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_SendMeetIM parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_SendMeetIM parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_SendMeetIM parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_SendMeetIM prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *发送消息
         *call
         *type:Pb_TYPE_MEET_INTERFACE_MEETIM
         *method: send
         * </pre>
         *
         * Protobuf type {@code pbui_Type_SendMeetIM}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_SendMeetIM, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Type_SendMeetIM)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_SendMeetIMOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_SendMeetIM.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <pre>
             *消息类型 参见 Pb_MeetIMMSG_TYPE
             * </pre>
             *
             * <code>fixed32 msgtype = 1;</code>
             */
            public int getMsgtype() {
                return instance.getMsgtype();
            }
            /**
             * <pre>
             *消息类型 参见 Pb_MeetIMMSG_TYPE
             * </pre>
             *
             * <code>fixed32 msgtype = 1;</code>
             */
            public Builder setMsgtype(int value) {
                copyOnWrite();
                instance.setMsgtype(value);
                return this;
            }
            /**
             * <pre>
             *消息类型 参见 Pb_MeetIMMSG_TYPE
             * </pre>
             *
             * <code>fixed32 msgtype = 1;</code>
             */
            public Builder clearMsgtype() {
                copyOnWrite();
                instance.clearMsgtype();
                return this;
            }

            /**
             * <pre>
             *消息文本  长度 Pb_MEETIM_CHAR_MSG_MAXLEN
             * </pre>
             *
             * <code>bytes msg = 2;</code>
             */
            public com.google.protobuf.ByteString getMsg() {
                return instance.getMsg();
            }
            /**
             * <pre>
             *消息文本  长度 Pb_MEETIM_CHAR_MSG_MAXLEN
             * </pre>
             *
             * <code>bytes msg = 2;</code>
             */
            public Builder setMsg(com.google.protobuf.ByteString value) {
                copyOnWrite();
                instance.setMsg(value);
                return this;
            }
            /**
             * <pre>
             *消息文本  长度 Pb_MEETIM_CHAR_MSG_MAXLEN
             * </pre>
             *
             * <code>bytes msg = 2;</code>
             */
            public Builder clearMsg() {
                copyOnWrite();
                instance.clearMsg();
                return this;
            }

            /**
             * <pre>
             *为0表示当前会议全部 如果是会议服务类请求为0
             * </pre>
             *
             * <code>repeated fixed32 userids = 3;</code>
             */
            public java.util.List<java.lang.Integer>
            getUseridsList() {
                return java.util.Collections.unmodifiableList(
                        instance.getUseridsList());
            }
            /**
             * <pre>
             *为0表示当前会议全部 如果是会议服务类请求为0
             * </pre>
             *
             * <code>repeated fixed32 userids = 3;</code>
             */
            public int getUseridsCount() {
                return instance.getUseridsCount();
            }
            /**
             * <pre>
             *为0表示当前会议全部 如果是会议服务类请求为0
             * </pre>
             *
             * <code>repeated fixed32 userids = 3;</code>
             */
            public int getUserids(int index) {
                return instance.getUserids(index);
            }
            /**
             * <pre>
             *为0表示当前会议全部 如果是会议服务类请求为0
             * </pre>
             *
             * <code>repeated fixed32 userids = 3;</code>
             */
            public Builder setUserids(
                    int index, int value) {
                copyOnWrite();
                instance.setUserids(index, value);
                return this;
            }
            /**
             * <pre>
             *为0表示当前会议全部 如果是会议服务类请求为0
             * </pre>
             *
             * <code>repeated fixed32 userids = 3;</code>
             */
            public Builder addUserids(int value) {
                copyOnWrite();
                instance.addUserids(value);
                return this;
            }
            /**
             * <pre>
             *为0表示当前会议全部 如果是会议服务类请求为0
             * </pre>
             *
             * <code>repeated fixed32 userids = 3;</code>
             */
            public Builder addAllUserids(
                    java.lang.Iterable<? extends java.lang.Integer> values) {
                copyOnWrite();
                instance.addAllUserids(values);
                return this;
            }
            /**
             * <pre>
             *为0表示当前会议全部 如果是会议服务类请求为0
             * </pre>
             *
             * <code>repeated fixed32 userids = 3;</code>
             */
            public Builder clearUserids() {
                copyOnWrite();
                instance.clearUserids();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Type_SendMeetIM)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_SendMeetIM();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    userids_.makeImmutable();
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_SendMeetIM other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_SendMeetIM) arg1;
                    msgtype_ = visitor.visitInt(msgtype_ != 0, msgtype_,
                            other.msgtype_ != 0, other.msgtype_);
                    msg_ = visitor.visitByteString(msg_ != com.google.protobuf.ByteString.EMPTY, msg_,
                            other.msg_ != com.google.protobuf.ByteString.EMPTY, other.msg_);
                    userids_= visitor.visitIntList(userids_, other.userids_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                        bitField0_ |= other.bitField0_;
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 13: {

                                    msgtype_ = input.readFixed32();
                                    break;
                                }
                                case 18: {

                                    msg_ = input.readBytes();
                                    break;
                                }
                                case 29: {
                                    if (!userids_.isModifiable()) {
                                        userids_ =
                                                com.google.protobuf.GeneratedMessageLite.mutableCopy(userids_);
                                    }
                                    userids_.addInt(input.readFixed32());
                                    break;
                                }
                                case 26: {
                                    int length = input.readRawVarint32();
                                    int limit = input.pushLimit(length);
                                    if (!userids_.isModifiable() && input.getBytesUntilLimit() > 0) {
                                        final int currentSize = userids_.size();
                                        userids_ = userids_.mutableCopyWithCapacity(
                                                currentSize + (length/4));
                                    }
                                    while (input.getBytesUntilLimit() > 0) {
                                        userids_.addInt(input.readFixed32());
                                    }
                                    input.popLimit(limit);
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_SendMeetIM.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Type_SendMeetIM)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_SendMeetIM DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Type_SendMeetIM();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_SendMeetIM getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Type_SendMeetIM> PARSER;

        public static com.google.protobuf.Parser<pbui_Type_SendMeetIM> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Item_MeetIMDetailInfoOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Item_MeetIMDetailInfo)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <pre>
         *消息类型 参见 Pb_MeetIMMSG_TYPE
         * </pre>
         *
         * <code>fixed32 msgtype = 1;</code>
         */
        int getMsgtype();

        /**
         * <pre>
         *发送者角色
         * </pre>
         *
         * <code>fixed32 role = 2;</code>
         */
        int getRole();

        /**
         * <pre>
         *发送者ID
         * </pre>
         *
         * <code>fixed32 memberid = 3;</code>
         */
        int getMemberid();

        /**
         * <pre>
         *消息文本 长度 Pb_MEETIM_CHAR_MSG_MAXLEN
         * </pre>
         *
         * <code>bytes msg = 4;</code>
         */
        com.google.protobuf.ByteString getMsg();

        /**
         * <pre>
         *发送UTC时间 单位:秒
         * </pre>
         *
         * <code>fixed64 utcsecond = 5;</code>
         */
        long getUtcsecond();
    }
    /**
     * <pre>
     *会议交流信息
     * </pre>
     *
     * Protobuf type {@code pbui_Item_MeetIMDetailInfo}
     */
    public  static final class pbui_Item_MeetIMDetailInfo extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Item_MeetIMDetailInfo, pbui_Item_MeetIMDetailInfo.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Item_MeetIMDetailInfo)
            pbui_Item_MeetIMDetailInfoOrBuilder {
        private pbui_Item_MeetIMDetailInfo() {
            msg_ = com.google.protobuf.ByteString.EMPTY;
        }
        public static final int MSGTYPE_FIELD_NUMBER = 1;
        private int msgtype_;
        /**
         * <pre>
         *消息类型 参见 Pb_MeetIMMSG_TYPE
         * </pre>
         *
         * <code>fixed32 msgtype = 1;</code>
         */
        public int getMsgtype() {
            return msgtype_;
        }
        /**
         * <pre>
         *消息类型 参见 Pb_MeetIMMSG_TYPE
         * </pre>
         *
         * <code>fixed32 msgtype = 1;</code>
         */
        private void setMsgtype(int value) {

            msgtype_ = value;
        }
        /**
         * <pre>
         *消息类型 参见 Pb_MeetIMMSG_TYPE
         * </pre>
         *
         * <code>fixed32 msgtype = 1;</code>
         */
        private void clearMsgtype() {

            msgtype_ = 0;
        }

        public static final int ROLE_FIELD_NUMBER = 2;
        private int role_;
        /**
         * <pre>
         *发送者角色
         * </pre>
         *
         * <code>fixed32 role = 2;</code>
         */
        public int getRole() {
            return role_;
        }
        /**
         * <pre>
         *发送者角色
         * </pre>
         *
         * <code>fixed32 role = 2;</code>
         */
        private void setRole(int value) {

            role_ = value;
        }
        /**
         * <pre>
         *发送者角色
         * </pre>
         *
         * <code>fixed32 role = 2;</code>
         */
        private void clearRole() {

            role_ = 0;
        }

        public static final int MEMBERID_FIELD_NUMBER = 3;
        private int memberid_;
        /**
         * <pre>
         *发送者ID
         * </pre>
         *
         * <code>fixed32 memberid = 3;</code>
         */
        public int getMemberid() {
            return memberid_;
        }
        /**
         * <pre>
         *发送者ID
         * </pre>
         *
         * <code>fixed32 memberid = 3;</code>
         */
        private void setMemberid(int value) {

            memberid_ = value;
        }
        /**
         * <pre>
         *发送者ID
         * </pre>
         *
         * <code>fixed32 memberid = 3;</code>
         */
        private void clearMemberid() {

            memberid_ = 0;
        }

        public static final int MSG_FIELD_NUMBER = 4;
        private com.google.protobuf.ByteString msg_;
        /**
         * <pre>
         *消息文本 长度 Pb_MEETIM_CHAR_MSG_MAXLEN
         * </pre>
         *
         * <code>bytes msg = 4;</code>
         */
        public com.google.protobuf.ByteString getMsg() {
            return msg_;
        }
        /**
         * <pre>
         *消息文本 长度 Pb_MEETIM_CHAR_MSG_MAXLEN
         * </pre>
         *
         * <code>bytes msg = 4;</code>
         */
        private void setMsg(com.google.protobuf.ByteString value) {
            if (value == null) {
                throw new NullPointerException();
            }

            msg_ = value;
        }
        /**
         * <pre>
         *消息文本 长度 Pb_MEETIM_CHAR_MSG_MAXLEN
         * </pre>
         *
         * <code>bytes msg = 4;</code>
         */
        private void clearMsg() {

            msg_ = getDefaultInstance().getMsg();
        }

        public static final int UTCSECOND_FIELD_NUMBER = 5;
        private long utcsecond_;
        /**
         * <pre>
         *发送UTC时间 单位:秒
         * </pre>
         *
         * <code>fixed64 utcsecond = 5;</code>
         */
        public long getUtcsecond() {
            return utcsecond_;
        }
        /**
         * <pre>
         *发送UTC时间 单位:秒
         * </pre>
         *
         * <code>fixed64 utcsecond = 5;</code>
         */
        private void setUtcsecond(long value) {

            utcsecond_ = value;
        }
        /**
         * <pre>
         *发送UTC时间 单位:秒
         * </pre>
         *
         * <code>fixed64 utcsecond = 5;</code>
         */
        private void clearUtcsecond() {

            utcsecond_ = 0L;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (msgtype_ != 0) {
                output.writeFixed32(1, msgtype_);
            }
            if (role_ != 0) {
                output.writeFixed32(2, role_);
            }
            if (memberid_ != 0) {
                output.writeFixed32(3, memberid_);
            }
            if (!msg_.isEmpty()) {
                output.writeBytes(4, msg_);
            }
            if (utcsecond_ != 0L) {
                output.writeFixed64(5, utcsecond_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (msgtype_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(1, msgtype_);
            }
            if (role_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(2, role_);
            }
            if (memberid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(3, memberid_);
            }
            if (!msg_.isEmpty()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(4, msg_);
            }
            if (utcsecond_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed64Size(5, utcsecond_);
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetIMDetailInfo parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetIMDetailInfo parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetIMDetailInfo parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetIMDetailInfo parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetIMDetailInfo parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetIMDetailInfo parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetIMDetailInfo parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetIMDetailInfo parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetIMDetailInfo parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetIMDetailInfo parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetIMDetailInfo parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetIMDetailInfo parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetIMDetailInfo prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *会议交流信息
         * </pre>
         *
         * Protobuf type {@code pbui_Item_MeetIMDetailInfo}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetIMDetailInfo, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Item_MeetIMDetailInfo)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetIMDetailInfoOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetIMDetailInfo.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <pre>
             *消息类型 参见 Pb_MeetIMMSG_TYPE
             * </pre>
             *
             * <code>fixed32 msgtype = 1;</code>
             */
            public int getMsgtype() {
                return instance.getMsgtype();
            }
            /**
             * <pre>
             *消息类型 参见 Pb_MeetIMMSG_TYPE
             * </pre>
             *
             * <code>fixed32 msgtype = 1;</code>
             */
            public Builder setMsgtype(int value) {
                copyOnWrite();
                instance.setMsgtype(value);
                return this;
            }
            /**
             * <pre>
             *消息类型 参见 Pb_MeetIMMSG_TYPE
             * </pre>
             *
             * <code>fixed32 msgtype = 1;</code>
             */
            public Builder clearMsgtype() {
                copyOnWrite();
                instance.clearMsgtype();
                return this;
            }

            /**
             * <pre>
             *发送者角色
             * </pre>
             *
             * <code>fixed32 role = 2;</code>
             */
            public int getRole() {
                return instance.getRole();
            }
            /**
             * <pre>
             *发送者角色
             * </pre>
             *
             * <code>fixed32 role = 2;</code>
             */
            public Builder setRole(int value) {
                copyOnWrite();
                instance.setRole(value);
                return this;
            }
            /**
             * <pre>
             *发送者角色
             * </pre>
             *
             * <code>fixed32 role = 2;</code>
             */
            public Builder clearRole() {
                copyOnWrite();
                instance.clearRole();
                return this;
            }

            /**
             * <pre>
             *发送者ID
             * </pre>
             *
             * <code>fixed32 memberid = 3;</code>
             */
            public int getMemberid() {
                return instance.getMemberid();
            }
            /**
             * <pre>
             *发送者ID
             * </pre>
             *
             * <code>fixed32 memberid = 3;</code>
             */
            public Builder setMemberid(int value) {
                copyOnWrite();
                instance.setMemberid(value);
                return this;
            }
            /**
             * <pre>
             *发送者ID
             * </pre>
             *
             * <code>fixed32 memberid = 3;</code>
             */
            public Builder clearMemberid() {
                copyOnWrite();
                instance.clearMemberid();
                return this;
            }

            /**
             * <pre>
             *消息文本 长度 Pb_MEETIM_CHAR_MSG_MAXLEN
             * </pre>
             *
             * <code>bytes msg = 4;</code>
             */
            public com.google.protobuf.ByteString getMsg() {
                return instance.getMsg();
            }
            /**
             * <pre>
             *消息文本 长度 Pb_MEETIM_CHAR_MSG_MAXLEN
             * </pre>
             *
             * <code>bytes msg = 4;</code>
             */
            public Builder setMsg(com.google.protobuf.ByteString value) {
                copyOnWrite();
                instance.setMsg(value);
                return this;
            }
            /**
             * <pre>
             *消息文本 长度 Pb_MEETIM_CHAR_MSG_MAXLEN
             * </pre>
             *
             * <code>bytes msg = 4;</code>
             */
            public Builder clearMsg() {
                copyOnWrite();
                instance.clearMsg();
                return this;
            }

            /**
             * <pre>
             *发送UTC时间 单位:秒
             * </pre>
             *
             * <code>fixed64 utcsecond = 5;</code>
             */
            public long getUtcsecond() {
                return instance.getUtcsecond();
            }
            /**
             * <pre>
             *发送UTC时间 单位:秒
             * </pre>
             *
             * <code>fixed64 utcsecond = 5;</code>
             */
            public Builder setUtcsecond(long value) {
                copyOnWrite();
                instance.setUtcsecond(value);
                return this;
            }
            /**
             * <pre>
             *发送UTC时间 单位:秒
             * </pre>
             *
             * <code>fixed64 utcsecond = 5;</code>
             */
            public Builder clearUtcsecond() {
                copyOnWrite();
                instance.clearUtcsecond();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Item_MeetIMDetailInfo)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetIMDetailInfo();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetIMDetailInfo other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetIMDetailInfo) arg1;
                    msgtype_ = visitor.visitInt(msgtype_ != 0, msgtype_,
                            other.msgtype_ != 0, other.msgtype_);
                    role_ = visitor.visitInt(role_ != 0, role_,
                            other.role_ != 0, other.role_);
                    memberid_ = visitor.visitInt(memberid_ != 0, memberid_,
                            other.memberid_ != 0, other.memberid_);
                    msg_ = visitor.visitByteString(msg_ != com.google.protobuf.ByteString.EMPTY, msg_,
                            other.msg_ != com.google.protobuf.ByteString.EMPTY, other.msg_);
                    utcsecond_ = visitor.visitLong(utcsecond_ != 0L, utcsecond_,
                            other.utcsecond_ != 0L, other.utcsecond_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 13: {

                                    msgtype_ = input.readFixed32();
                                    break;
                                }
                                case 21: {

                                    role_ = input.readFixed32();
                                    break;
                                }
                                case 29: {

                                    memberid_ = input.readFixed32();
                                    break;
                                }
                                case 34: {

                                    msg_ = input.readBytes();
                                    break;
                                }
                                case 41: {

                                    utcsecond_ = input.readFixed64();
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetIMDetailInfo.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Item_MeetIMDetailInfo)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetIMDetailInfo DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Item_MeetIMDetailInfo();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetIMDetailInfo getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Item_MeetIMDetailInfo> PARSER;

        public static com.google.protobuf.Parser<pbui_Item_MeetIMDetailInfo> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Type_MeetIMDetailInfoOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Type_MeetIMDetailInfo)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <code>repeated .pbui_Item_MeetIMDetailInfo item = 1;</code>
         */
        java.util.List<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetIMDetailInfo>
        getItemList();
        /**
         * <code>repeated .pbui_Item_MeetIMDetailInfo item = 1;</code>
         */
        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetIMDetailInfo getItem(int index);
        /**
         * <code>repeated .pbui_Item_MeetIMDetailInfo item = 1;</code>
         */
        int getItemCount();
    }
    /**
     * <pre>
     *callreturn
     *type:Pb_TYPE_MEET_INTERFACE_MEETIM
     *method: query
     * </pre>
     *
     * Protobuf type {@code pbui_Type_MeetIMDetailInfo}
     */
    public  static final class pbui_Type_MeetIMDetailInfo extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Type_MeetIMDetailInfo, pbui_Type_MeetIMDetailInfo.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Type_MeetIMDetailInfo)
            pbui_Type_MeetIMDetailInfoOrBuilder {
        private pbui_Type_MeetIMDetailInfo() {
            item_ = emptyProtobufList();
        }
        public static final int ITEM_FIELD_NUMBER = 1;
        private com.google.protobuf.Internal.ProtobufList<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetIMDetailInfo> item_;
        /**
         * <code>repeated .pbui_Item_MeetIMDetailInfo item = 1;</code>
         */
        public java.util.List<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetIMDetailInfo> getItemList() {
            return item_;
        }
        /**
         * <code>repeated .pbui_Item_MeetIMDetailInfo item = 1;</code>
         */
        public java.util.List<? extends com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetIMDetailInfoOrBuilder>
        getItemOrBuilderList() {
            return item_;
        }
        /**
         * <code>repeated .pbui_Item_MeetIMDetailInfo item = 1;</code>
         */
        public int getItemCount() {
            return item_.size();
        }
        /**
         * <code>repeated .pbui_Item_MeetIMDetailInfo item = 1;</code>
         */
        public com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetIMDetailInfo getItem(int index) {
            return item_.get(index);
        }
        /**
         * <code>repeated .pbui_Item_MeetIMDetailInfo item = 1;</code>
         */
        public com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetIMDetailInfoOrBuilder getItemOrBuilder(
                int index) {
            return item_.get(index);
        }
        private void ensureItemIsMutable() {
            if (!item_.isModifiable()) {
                item_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(item_);
            }
        }

        /**
         * <code>repeated .pbui_Item_MeetIMDetailInfo item = 1;</code>
         */
        private void setItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetIMDetailInfo value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensureItemIsMutable();
            item_.set(index, value);
        }
        /**
         * <code>repeated .pbui_Item_MeetIMDetailInfo item = 1;</code>
         */
        private void setItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetIMDetailInfo.Builder builderForValue) {
            ensureItemIsMutable();
            item_.set(index, builderForValue.build());
        }
        /**
         * <code>repeated .pbui_Item_MeetIMDetailInfo item = 1;</code>
         */
        private void addItem(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetIMDetailInfo value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensureItemIsMutable();
            item_.add(value);
        }
        /**
         * <code>repeated .pbui_Item_MeetIMDetailInfo item = 1;</code>
         */
        private void addItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetIMDetailInfo value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensureItemIsMutable();
            item_.add(index, value);
        }
        /**
         * <code>repeated .pbui_Item_MeetIMDetailInfo item = 1;</code>
         */
        private void addItem(
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetIMDetailInfo.Builder builderForValue) {
            ensureItemIsMutable();
            item_.add(builderForValue.build());
        }
        /**
         * <code>repeated .pbui_Item_MeetIMDetailInfo item = 1;</code>
         */
        private void addItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetIMDetailInfo.Builder builderForValue) {
            ensureItemIsMutable();
            item_.add(index, builderForValue.build());
        }
        /**
         * <code>repeated .pbui_Item_MeetIMDetailInfo item = 1;</code>
         */
        private void addAllItem(
                java.lang.Iterable<? extends com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetIMDetailInfo> values) {
            ensureItemIsMutable();
            com.google.protobuf.AbstractMessageLite.addAll(
                    values, item_);
        }
        /**
         * <code>repeated .pbui_Item_MeetIMDetailInfo item = 1;</code>
         */
        private void clearItem() {
            item_ = emptyProtobufList();
        }
        /**
         * <code>repeated .pbui_Item_MeetIMDetailInfo item = 1;</code>
         */
        private void removeItem(int index) {
            ensureItemIsMutable();
            item_.remove(index);
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            for (int i = 0; i < item_.size(); i++) {
                output.writeMessage(1, item_.get(i));
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            for (int i = 0; i < item_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, item_.get(i));
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetIMDetailInfo parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetIMDetailInfo parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetIMDetailInfo parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetIMDetailInfo parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetIMDetailInfo parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetIMDetailInfo parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetIMDetailInfo parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetIMDetailInfo parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetIMDetailInfo parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetIMDetailInfo parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetIMDetailInfo parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetIMDetailInfo parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetIMDetailInfo prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *callreturn
         *type:Pb_TYPE_MEET_INTERFACE_MEETIM
         *method: query
         * </pre>
         *
         * Protobuf type {@code pbui_Type_MeetIMDetailInfo}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetIMDetailInfo, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Type_MeetIMDetailInfo)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetIMDetailInfoOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetIMDetailInfo.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <code>repeated .pbui_Item_MeetIMDetailInfo item = 1;</code>
             */
            public java.util.List<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetIMDetailInfo> getItemList() {
                return java.util.Collections.unmodifiableList(
                        instance.getItemList());
            }
            /**
             * <code>repeated .pbui_Item_MeetIMDetailInfo item = 1;</code>
             */
            public int getItemCount() {
                return instance.getItemCount();
            }/**
             * <code>repeated .pbui_Item_MeetIMDetailInfo item = 1;</code>
             */
            public com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetIMDetailInfo getItem(int index) {
                return instance.getItem(index);
            }
            /**
             * <code>repeated .pbui_Item_MeetIMDetailInfo item = 1;</code>
             */
            public Builder setItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetIMDetailInfo value) {
                copyOnWrite();
                instance.setItem(index, value);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetIMDetailInfo item = 1;</code>
             */
            public Builder setItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetIMDetailInfo.Builder builderForValue) {
                copyOnWrite();
                instance.setItem(index, builderForValue);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetIMDetailInfo item = 1;</code>
             */
            public Builder addItem(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetIMDetailInfo value) {
                copyOnWrite();
                instance.addItem(value);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetIMDetailInfo item = 1;</code>
             */
            public Builder addItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetIMDetailInfo value) {
                copyOnWrite();
                instance.addItem(index, value);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetIMDetailInfo item = 1;</code>
             */
            public Builder addItem(
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetIMDetailInfo.Builder builderForValue) {
                copyOnWrite();
                instance.addItem(builderForValue);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetIMDetailInfo item = 1;</code>
             */
            public Builder addItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetIMDetailInfo.Builder builderForValue) {
                copyOnWrite();
                instance.addItem(index, builderForValue);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetIMDetailInfo item = 1;</code>
             */
            public Builder addAllItem(
                    java.lang.Iterable<? extends com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetIMDetailInfo> values) {
                copyOnWrite();
                instance.addAllItem(values);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetIMDetailInfo item = 1;</code>
             */
            public Builder clearItem() {
                copyOnWrite();
                instance.clearItem();
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetIMDetailInfo item = 1;</code>
             */
            public Builder removeItem(int index) {
                copyOnWrite();
                instance.removeItem(index);
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Type_MeetIMDetailInfo)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetIMDetailInfo();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    item_.makeImmutable();
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetIMDetailInfo other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetIMDetailInfo) arg1;
                    item_= visitor.visitList(item_, other.item_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 10: {
                                    if (!item_.isModifiable()) {
                                        item_ =
                                                com.google.protobuf.GeneratedMessageLite.mutableCopy(item_);
                                    }
                                    item_.add(
                                            input.readMessage(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetIMDetailInfo.parser(), extensionRegistry));
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetIMDetailInfo.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Type_MeetIMDetailInfo)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetIMDetailInfo DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Type_MeetIMDetailInfo();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetIMDetailInfo getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Type_MeetIMDetailInfo> PARSER;

        public static com.google.protobuf.Parser<pbui_Type_MeetIMDetailInfo> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Type_MeetComplexQueryIMOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Type_MeetComplexQueryIM)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <pre>
         *查询标志 参见 Pb_COMPLEXQUERY_ZERO
         * </pre>
         *
         * <code>fixed32 queryflag = 1;</code>
         */
        int getQueryflag();

        /**
         * <pre>
         *消息类型
         * </pre>
         *
         * <code>fixed32 msgtype = 2;</code>
         */
        int getMsgtype();

        /**
         * <pre>
         *发送者角色
         * </pre>
         *
         * <code>fixed32 role = 3;</code>
         */
        int getRole();

        /**
         * <pre>
         *发送者ID
         * </pre>
         *
         * <code>fixed32 memberid = 4;</code>
         */
        int getMemberid();

        /**
         * <pre>
         *时间范围
         * </pre>
         *
         * <code>fixed64 startutcsecond = 5;</code>
         */
        long getStartutcsecond();

        /**
         * <pre>
         *发送UTC时间
         * </pre>
         *
         * <code>fixed64 endutcsecond = 6;</code>
         */
        long getEndutcsecond();

        /**
         * <pre>
         *起始索引 从0 开始
         * </pre>
         *
         * <code>fixed32 pageindex = 7;</code>
         */
        int getPageindex();

        /**
         * <pre>
         *每页项数
         * </pre>
         *
         * <code>fixed32 pagenum = 8;</code>
         */
        int getPagenum();
    }
    /**
     * <pre>
     *组合查询
     *type:Pb_TYPE_MEET_INTERFACE_MEETIM
     *method: complexquery
     * </pre>
     *
     * Protobuf type {@code pbui_Type_MeetComplexQueryIM}
     */
    public  static final class pbui_Type_MeetComplexQueryIM extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Type_MeetComplexQueryIM, pbui_Type_MeetComplexQueryIM.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Type_MeetComplexQueryIM)
            pbui_Type_MeetComplexQueryIMOrBuilder {
        private pbui_Type_MeetComplexQueryIM() {
        }
        public static final int QUERYFLAG_FIELD_NUMBER = 1;
        private int queryflag_;
        /**
         * <pre>
         *查询标志 参见 Pb_COMPLEXQUERY_ZERO
         * </pre>
         *
         * <code>fixed32 queryflag = 1;</code>
         */
        public int getQueryflag() {
            return queryflag_;
        }
        /**
         * <pre>
         *查询标志 参见 Pb_COMPLEXQUERY_ZERO
         * </pre>
         *
         * <code>fixed32 queryflag = 1;</code>
         */
        private void setQueryflag(int value) {

            queryflag_ = value;
        }
        /**
         * <pre>
         *查询标志 参见 Pb_COMPLEXQUERY_ZERO
         * </pre>
         *
         * <code>fixed32 queryflag = 1;</code>
         */
        private void clearQueryflag() {

            queryflag_ = 0;
        }

        public static final int MSGTYPE_FIELD_NUMBER = 2;
        private int msgtype_;
        /**
         * <pre>
         *消息类型
         * </pre>
         *
         * <code>fixed32 msgtype = 2;</code>
         */
        public int getMsgtype() {
            return msgtype_;
        }
        /**
         * <pre>
         *消息类型
         * </pre>
         *
         * <code>fixed32 msgtype = 2;</code>
         */
        private void setMsgtype(int value) {

            msgtype_ = value;
        }
        /**
         * <pre>
         *消息类型
         * </pre>
         *
         * <code>fixed32 msgtype = 2;</code>
         */
        private void clearMsgtype() {

            msgtype_ = 0;
        }

        public static final int ROLE_FIELD_NUMBER = 3;
        private int role_;
        /**
         * <pre>
         *发送者角色
         * </pre>
         *
         * <code>fixed32 role = 3;</code>
         */
        public int getRole() {
            return role_;
        }
        /**
         * <pre>
         *发送者角色
         * </pre>
         *
         * <code>fixed32 role = 3;</code>
         */
        private void setRole(int value) {

            role_ = value;
        }
        /**
         * <pre>
         *发送者角色
         * </pre>
         *
         * <code>fixed32 role = 3;</code>
         */
        private void clearRole() {

            role_ = 0;
        }

        public static final int MEMBERID_FIELD_NUMBER = 4;
        private int memberid_;
        /**
         * <pre>
         *发送者ID
         * </pre>
         *
         * <code>fixed32 memberid = 4;</code>
         */
        public int getMemberid() {
            return memberid_;
        }
        /**
         * <pre>
         *发送者ID
         * </pre>
         *
         * <code>fixed32 memberid = 4;</code>
         */
        private void setMemberid(int value) {

            memberid_ = value;
        }
        /**
         * <pre>
         *发送者ID
         * </pre>
         *
         * <code>fixed32 memberid = 4;</code>
         */
        private void clearMemberid() {

            memberid_ = 0;
        }

        public static final int STARTUTCSECOND_FIELD_NUMBER = 5;
        private long startutcsecond_;
        /**
         * <pre>
         *时间范围
         * </pre>
         *
         * <code>fixed64 startutcsecond = 5;</code>
         */
        public long getStartutcsecond() {
            return startutcsecond_;
        }
        /**
         * <pre>
         *时间范围
         * </pre>
         *
         * <code>fixed64 startutcsecond = 5;</code>
         */
        private void setStartutcsecond(long value) {

            startutcsecond_ = value;
        }
        /**
         * <pre>
         *时间范围
         * </pre>
         *
         * <code>fixed64 startutcsecond = 5;</code>
         */
        private void clearStartutcsecond() {

            startutcsecond_ = 0L;
        }

        public static final int ENDUTCSECOND_FIELD_NUMBER = 6;
        private long endutcsecond_;
        /**
         * <pre>
         *发送UTC时间
         * </pre>
         *
         * <code>fixed64 endutcsecond = 6;</code>
         */
        public long getEndutcsecond() {
            return endutcsecond_;
        }
        /**
         * <pre>
         *发送UTC时间
         * </pre>
         *
         * <code>fixed64 endutcsecond = 6;</code>
         */
        private void setEndutcsecond(long value) {

            endutcsecond_ = value;
        }
        /**
         * <pre>
         *发送UTC时间
         * </pre>
         *
         * <code>fixed64 endutcsecond = 6;</code>
         */
        private void clearEndutcsecond() {

            endutcsecond_ = 0L;
        }

        public static final int PAGEINDEX_FIELD_NUMBER = 7;
        private int pageindex_;
        /**
         * <pre>
         *起始索引 从0 开始
         * </pre>
         *
         * <code>fixed32 pageindex = 7;</code>
         */
        public int getPageindex() {
            return pageindex_;
        }
        /**
         * <pre>
         *起始索引 从0 开始
         * </pre>
         *
         * <code>fixed32 pageindex = 7;</code>
         */
        private void setPageindex(int value) {

            pageindex_ = value;
        }
        /**
         * <pre>
         *起始索引 从0 开始
         * </pre>
         *
         * <code>fixed32 pageindex = 7;</code>
         */
        private void clearPageindex() {

            pageindex_ = 0;
        }

        public static final int PAGENUM_FIELD_NUMBER = 8;
        private int pagenum_;
        /**
         * <pre>
         *每页项数
         * </pre>
         *
         * <code>fixed32 pagenum = 8;</code>
         */
        public int getPagenum() {
            return pagenum_;
        }
        /**
         * <pre>
         *每页项数
         * </pre>
         *
         * <code>fixed32 pagenum = 8;</code>
         */
        private void setPagenum(int value) {

            pagenum_ = value;
        }
        /**
         * <pre>
         *每页项数
         * </pre>
         *
         * <code>fixed32 pagenum = 8;</code>
         */
        private void clearPagenum() {

            pagenum_ = 0;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (queryflag_ != 0) {
                output.writeFixed32(1, queryflag_);
            }
            if (msgtype_ != 0) {
                output.writeFixed32(2, msgtype_);
            }
            if (role_ != 0) {
                output.writeFixed32(3, role_);
            }
            if (memberid_ != 0) {
                output.writeFixed32(4, memberid_);
            }
            if (startutcsecond_ != 0L) {
                output.writeFixed64(5, startutcsecond_);
            }
            if (endutcsecond_ != 0L) {
                output.writeFixed64(6, endutcsecond_);
            }
            if (pageindex_ != 0) {
                output.writeFixed32(7, pageindex_);
            }
            if (pagenum_ != 0) {
                output.writeFixed32(8, pagenum_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (queryflag_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(1, queryflag_);
            }
            if (msgtype_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(2, msgtype_);
            }
            if (role_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(3, role_);
            }
            if (memberid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(4, memberid_);
            }
            if (startutcsecond_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed64Size(5, startutcsecond_);
            }
            if (endutcsecond_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed64Size(6, endutcsecond_);
            }
            if (pageindex_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(7, pageindex_);
            }
            if (pagenum_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(8, pagenum_);
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetComplexQueryIM parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetComplexQueryIM parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetComplexQueryIM parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetComplexQueryIM parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetComplexQueryIM parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetComplexQueryIM parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetComplexQueryIM parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetComplexQueryIM parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetComplexQueryIM parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetComplexQueryIM parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetComplexQueryIM parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetComplexQueryIM parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetComplexQueryIM prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *组合查询
         *type:Pb_TYPE_MEET_INTERFACE_MEETIM
         *method: complexquery
         * </pre>
         *
         * Protobuf type {@code pbui_Type_MeetComplexQueryIM}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetComplexQueryIM, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Type_MeetComplexQueryIM)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetComplexQueryIMOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetComplexQueryIM.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <pre>
             *查询标志 参见 Pb_COMPLEXQUERY_ZERO
             * </pre>
             *
             * <code>fixed32 queryflag = 1;</code>
             */
            public int getQueryflag() {
                return instance.getQueryflag();
            }
            /**
             * <pre>
             *查询标志 参见 Pb_COMPLEXQUERY_ZERO
             * </pre>
             *
             * <code>fixed32 queryflag = 1;</code>
             */
            public Builder setQueryflag(int value) {
                copyOnWrite();
                instance.setQueryflag(value);
                return this;
            }
            /**
             * <pre>
             *查询标志 参见 Pb_COMPLEXQUERY_ZERO
             * </pre>
             *
             * <code>fixed32 queryflag = 1;</code>
             */
            public Builder clearQueryflag() {
                copyOnWrite();
                instance.clearQueryflag();
                return this;
            }

            /**
             * <pre>
             *消息类型
             * </pre>
             *
             * <code>fixed32 msgtype = 2;</code>
             */
            public int getMsgtype() {
                return instance.getMsgtype();
            }
            /**
             * <pre>
             *消息类型
             * </pre>
             *
             * <code>fixed32 msgtype = 2;</code>
             */
            public Builder setMsgtype(int value) {
                copyOnWrite();
                instance.setMsgtype(value);
                return this;
            }
            /**
             * <pre>
             *消息类型
             * </pre>
             *
             * <code>fixed32 msgtype = 2;</code>
             */
            public Builder clearMsgtype() {
                copyOnWrite();
                instance.clearMsgtype();
                return this;
            }

            /**
             * <pre>
             *发送者角色
             * </pre>
             *
             * <code>fixed32 role = 3;</code>
             */
            public int getRole() {
                return instance.getRole();
            }
            /**
             * <pre>
             *发送者角色
             * </pre>
             *
             * <code>fixed32 role = 3;</code>
             */
            public Builder setRole(int value) {
                copyOnWrite();
                instance.setRole(value);
                return this;
            }
            /**
             * <pre>
             *发送者角色
             * </pre>
             *
             * <code>fixed32 role = 3;</code>
             */
            public Builder clearRole() {
                copyOnWrite();
                instance.clearRole();
                return this;
            }

            /**
             * <pre>
             *发送者ID
             * </pre>
             *
             * <code>fixed32 memberid = 4;</code>
             */
            public int getMemberid() {
                return instance.getMemberid();
            }
            /**
             * <pre>
             *发送者ID
             * </pre>
             *
             * <code>fixed32 memberid = 4;</code>
             */
            public Builder setMemberid(int value) {
                copyOnWrite();
                instance.setMemberid(value);
                return this;
            }
            /**
             * <pre>
             *发送者ID
             * </pre>
             *
             * <code>fixed32 memberid = 4;</code>
             */
            public Builder clearMemberid() {
                copyOnWrite();
                instance.clearMemberid();
                return this;
            }

            /**
             * <pre>
             *时间范围
             * </pre>
             *
             * <code>fixed64 startutcsecond = 5;</code>
             */
            public long getStartutcsecond() {
                return instance.getStartutcsecond();
            }
            /**
             * <pre>
             *时间范围
             * </pre>
             *
             * <code>fixed64 startutcsecond = 5;</code>
             */
            public Builder setStartutcsecond(long value) {
                copyOnWrite();
                instance.setStartutcsecond(value);
                return this;
            }
            /**
             * <pre>
             *时间范围
             * </pre>
             *
             * <code>fixed64 startutcsecond = 5;</code>
             */
            public Builder clearStartutcsecond() {
                copyOnWrite();
                instance.clearStartutcsecond();
                return this;
            }

            /**
             * <pre>
             *发送UTC时间
             * </pre>
             *
             * <code>fixed64 endutcsecond = 6;</code>
             */
            public long getEndutcsecond() {
                return instance.getEndutcsecond();
            }
            /**
             * <pre>
             *发送UTC时间
             * </pre>
             *
             * <code>fixed64 endutcsecond = 6;</code>
             */
            public Builder setEndutcsecond(long value) {
                copyOnWrite();
                instance.setEndutcsecond(value);
                return this;
            }
            /**
             * <pre>
             *发送UTC时间
             * </pre>
             *
             * <code>fixed64 endutcsecond = 6;</code>
             */
            public Builder clearEndutcsecond() {
                copyOnWrite();
                instance.clearEndutcsecond();
                return this;
            }

            /**
             * <pre>
             *起始索引 从0 开始
             * </pre>
             *
             * <code>fixed32 pageindex = 7;</code>
             */
            public int getPageindex() {
                return instance.getPageindex();
            }
            /**
             * <pre>
             *起始索引 从0 开始
             * </pre>
             *
             * <code>fixed32 pageindex = 7;</code>
             */
            public Builder setPageindex(int value) {
                copyOnWrite();
                instance.setPageindex(value);
                return this;
            }
            /**
             * <pre>
             *起始索引 从0 开始
             * </pre>
             *
             * <code>fixed32 pageindex = 7;</code>
             */
            public Builder clearPageindex() {
                copyOnWrite();
                instance.clearPageindex();
                return this;
            }

            /**
             * <pre>
             *每页项数
             * </pre>
             *
             * <code>fixed32 pagenum = 8;</code>
             */
            public int getPagenum() {
                return instance.getPagenum();
            }
            /**
             * <pre>
             *每页项数
             * </pre>
             *
             * <code>fixed32 pagenum = 8;</code>
             */
            public Builder setPagenum(int value) {
                copyOnWrite();
                instance.setPagenum(value);
                return this;
            }
            /**
             * <pre>
             *每页项数
             * </pre>
             *
             * <code>fixed32 pagenum = 8;</code>
             */
            public Builder clearPagenum() {
                copyOnWrite();
                instance.clearPagenum();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Type_MeetComplexQueryIM)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetComplexQueryIM();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetComplexQueryIM other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetComplexQueryIM) arg1;
                    queryflag_ = visitor.visitInt(queryflag_ != 0, queryflag_,
                            other.queryflag_ != 0, other.queryflag_);
                    msgtype_ = visitor.visitInt(msgtype_ != 0, msgtype_,
                            other.msgtype_ != 0, other.msgtype_);
                    role_ = visitor.visitInt(role_ != 0, role_,
                            other.role_ != 0, other.role_);
                    memberid_ = visitor.visitInt(memberid_ != 0, memberid_,
                            other.memberid_ != 0, other.memberid_);
                    startutcsecond_ = visitor.visitLong(startutcsecond_ != 0L, startutcsecond_,
                            other.startutcsecond_ != 0L, other.startutcsecond_);
                    endutcsecond_ = visitor.visitLong(endutcsecond_ != 0L, endutcsecond_,
                            other.endutcsecond_ != 0L, other.endutcsecond_);
                    pageindex_ = visitor.visitInt(pageindex_ != 0, pageindex_,
                            other.pageindex_ != 0, other.pageindex_);
                    pagenum_ = visitor.visitInt(pagenum_ != 0, pagenum_,
                            other.pagenum_ != 0, other.pagenum_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 13: {

                                    queryflag_ = input.readFixed32();
                                    break;
                                }
                                case 21: {

                                    msgtype_ = input.readFixed32();
                                    break;
                                }
                                case 29: {

                                    role_ = input.readFixed32();
                                    break;
                                }
                                case 37: {

                                    memberid_ = input.readFixed32();
                                    break;
                                }
                                case 41: {

                                    startutcsecond_ = input.readFixed64();
                                    break;
                                }
                                case 49: {

                                    endutcsecond_ = input.readFixed64();
                                    break;
                                }
                                case 61: {

                                    pageindex_ = input.readFixed32();
                                    break;
                                }
                                case 69: {

                                    pagenum_ = input.readFixed32();
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetComplexQueryIM.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Type_MeetComplexQueryIM)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetComplexQueryIM DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Type_MeetComplexQueryIM();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetComplexQueryIM getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Type_MeetComplexQueryIM> PARSER;

        public static com.google.protobuf.Parser<pbui_Type_MeetComplexQueryIM> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_TypePageResQueryrMsgInfoOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_TypePageResQueryrMsgInfo)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <pre>
         *起始索引 从0 开始
         * </pre>
         *
         * <code>fixed32 pageindex = 1;</code>
         */
        int getPageindex();

        /**
         * <pre>
         *每页项数
         * </pre>
         *
         * <code>fixed32 pagenum = 2;</code>
         */
        int getPagenum();

        /**
         * <pre>
         *当前页项数 ,根据数据不同用不同的解析
         * </pre>
         *
         * <code>fixed32 itemnum = 3;</code>
         */
        int getItemnum();

        /**
         * <pre>
         *总项数
         * </pre>
         *
         * <code>fixed32 totalnum = 4;</code>
         */
        int getTotalnum();

        /**
         * <pre>
         *消息
         * </pre>
         *
         * <code>repeated .pbui_Item_MeetIMDetailInfo item = 5;</code>
         */
        java.util.List<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetIMDetailInfo>
        getItemList();
        /**
         * <pre>
         *消息
         * </pre>
         *
         * <code>repeated .pbui_Item_MeetIMDetailInfo item = 5;</code>
         */
        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetIMDetailInfo getItem(int index);
        /**
         * <pre>
         *消息
         * </pre>
         *
         * <code>repeated .pbui_Item_MeetIMDetailInfo item = 5;</code>
         */
        int getItemCount();
    }
    /**
     * <pre>
     *组合查询返回结构头部
     *callreturn
     *type:Pb_TYPE_MEET_INTERFACE_MEETIM
     *method: complexpagequery
     * </pre>
     *
     * Protobuf type {@code pbui_TypePageResQueryrMsgInfo}
     */
    public  static final class pbui_TypePageResQueryrMsgInfo extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_TypePageResQueryrMsgInfo, pbui_TypePageResQueryrMsgInfo.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_TypePageResQueryrMsgInfo)
            pbui_TypePageResQueryrMsgInfoOrBuilder {
        private pbui_TypePageResQueryrMsgInfo() {
            item_ = emptyProtobufList();
        }
        private int bitField0_;
        public static final int PAGEINDEX_FIELD_NUMBER = 1;
        private int pageindex_;
        /**
         * <pre>
         *起始索引 从0 开始
         * </pre>
         *
         * <code>fixed32 pageindex = 1;</code>
         */
        public int getPageindex() {
            return pageindex_;
        }
        /**
         * <pre>
         *起始索引 从0 开始
         * </pre>
         *
         * <code>fixed32 pageindex = 1;</code>
         */
        private void setPageindex(int value) {

            pageindex_ = value;
        }
        /**
         * <pre>
         *起始索引 从0 开始
         * </pre>
         *
         * <code>fixed32 pageindex = 1;</code>
         */
        private void clearPageindex() {

            pageindex_ = 0;
        }

        public static final int PAGENUM_FIELD_NUMBER = 2;
        private int pagenum_;
        /**
         * <pre>
         *每页项数
         * </pre>
         *
         * <code>fixed32 pagenum = 2;</code>
         */
        public int getPagenum() {
            return pagenum_;
        }
        /**
         * <pre>
         *每页项数
         * </pre>
         *
         * <code>fixed32 pagenum = 2;</code>
         */
        private void setPagenum(int value) {

            pagenum_ = value;
        }
        /**
         * <pre>
         *每页项数
         * </pre>
         *
         * <code>fixed32 pagenum = 2;</code>
         */
        private void clearPagenum() {

            pagenum_ = 0;
        }

        public static final int ITEMNUM_FIELD_NUMBER = 3;
        private int itemnum_;
        /**
         * <pre>
         *当前页项数 ,根据数据不同用不同的解析
         * </pre>
         *
         * <code>fixed32 itemnum = 3;</code>
         */
        public int getItemnum() {
            return itemnum_;
        }
        /**
         * <pre>
         *当前页项数 ,根据数据不同用不同的解析
         * </pre>
         *
         * <code>fixed32 itemnum = 3;</code>
         */
        private void setItemnum(int value) {

            itemnum_ = value;
        }
        /**
         * <pre>
         *当前页项数 ,根据数据不同用不同的解析
         * </pre>
         *
         * <code>fixed32 itemnum = 3;</code>
         */
        private void clearItemnum() {

            itemnum_ = 0;
        }

        public static final int TOTALNUM_FIELD_NUMBER = 4;
        private int totalnum_;
        /**
         * <pre>
         *总项数
         * </pre>
         *
         * <code>fixed32 totalnum = 4;</code>
         */
        public int getTotalnum() {
            return totalnum_;
        }
        /**
         * <pre>
         *总项数
         * </pre>
         *
         * <code>fixed32 totalnum = 4;</code>
         */
        private void setTotalnum(int value) {

            totalnum_ = value;
        }
        /**
         * <pre>
         *总项数
         * </pre>
         *
         * <code>fixed32 totalnum = 4;</code>
         */
        private void clearTotalnum() {

            totalnum_ = 0;
        }

        public static final int ITEM_FIELD_NUMBER = 5;
        private com.google.protobuf.Internal.ProtobufList<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetIMDetailInfo> item_;
        /**
         * <pre>
         *消息
         * </pre>
         *
         * <code>repeated .pbui_Item_MeetIMDetailInfo item = 5;</code>
         */
        public java.util.List<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetIMDetailInfo> getItemList() {
            return item_;
        }
        /**
         * <pre>
         *消息
         * </pre>
         *
         * <code>repeated .pbui_Item_MeetIMDetailInfo item = 5;</code>
         */
        public java.util.List<? extends com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetIMDetailInfoOrBuilder>
        getItemOrBuilderList() {
            return item_;
        }
        /**
         * <pre>
         *消息
         * </pre>
         *
         * <code>repeated .pbui_Item_MeetIMDetailInfo item = 5;</code>
         */
        public int getItemCount() {
            return item_.size();
        }
        /**
         * <pre>
         *消息
         * </pre>
         *
         * <code>repeated .pbui_Item_MeetIMDetailInfo item = 5;</code>
         */
        public com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetIMDetailInfo getItem(int index) {
            return item_.get(index);
        }
        /**
         * <pre>
         *消息
         * </pre>
         *
         * <code>repeated .pbui_Item_MeetIMDetailInfo item = 5;</code>
         */
        public com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetIMDetailInfoOrBuilder getItemOrBuilder(
                int index) {
            return item_.get(index);
        }
        private void ensureItemIsMutable() {
            if (!item_.isModifiable()) {
                item_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(item_);
            }
        }

        /**
         * <pre>
         *消息
         * </pre>
         *
         * <code>repeated .pbui_Item_MeetIMDetailInfo item = 5;</code>
         */
        private void setItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetIMDetailInfo value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensureItemIsMutable();
            item_.set(index, value);
        }
        /**
         * <pre>
         *消息
         * </pre>
         *
         * <code>repeated .pbui_Item_MeetIMDetailInfo item = 5;</code>
         */
        private void setItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetIMDetailInfo.Builder builderForValue) {
            ensureItemIsMutable();
            item_.set(index, builderForValue.build());
        }
        /**
         * <pre>
         *消息
         * </pre>
         *
         * <code>repeated .pbui_Item_MeetIMDetailInfo item = 5;</code>
         */
        private void addItem(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetIMDetailInfo value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensureItemIsMutable();
            item_.add(value);
        }
        /**
         * <pre>
         *消息
         * </pre>
         *
         * <code>repeated .pbui_Item_MeetIMDetailInfo item = 5;</code>
         */
        private void addItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetIMDetailInfo value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensureItemIsMutable();
            item_.add(index, value);
        }
        /**
         * <pre>
         *消息
         * </pre>
         *
         * <code>repeated .pbui_Item_MeetIMDetailInfo item = 5;</code>
         */
        private void addItem(
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetIMDetailInfo.Builder builderForValue) {
            ensureItemIsMutable();
            item_.add(builderForValue.build());
        }
        /**
         * <pre>
         *消息
         * </pre>
         *
         * <code>repeated .pbui_Item_MeetIMDetailInfo item = 5;</code>
         */
        private void addItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetIMDetailInfo.Builder builderForValue) {
            ensureItemIsMutable();
            item_.add(index, builderForValue.build());
        }
        /**
         * <pre>
         *消息
         * </pre>
         *
         * <code>repeated .pbui_Item_MeetIMDetailInfo item = 5;</code>
         */
        private void addAllItem(
                java.lang.Iterable<? extends com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetIMDetailInfo> values) {
            ensureItemIsMutable();
            com.google.protobuf.AbstractMessageLite.addAll(
                    values, item_);
        }
        /**
         * <pre>
         *消息
         * </pre>
         *
         * <code>repeated .pbui_Item_MeetIMDetailInfo item = 5;</code>
         */
        private void clearItem() {
            item_ = emptyProtobufList();
        }
        /**
         * <pre>
         *消息
         * </pre>
         *
         * <code>repeated .pbui_Item_MeetIMDetailInfo item = 5;</code>
         */
        private void removeItem(int index) {
            ensureItemIsMutable();
            item_.remove(index);
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (pageindex_ != 0) {
                output.writeFixed32(1, pageindex_);
            }
            if (pagenum_ != 0) {
                output.writeFixed32(2, pagenum_);
            }
            if (itemnum_ != 0) {
                output.writeFixed32(3, itemnum_);
            }
            if (totalnum_ != 0) {
                output.writeFixed32(4, totalnum_);
            }
            for (int i = 0; i < item_.size(); i++) {
                output.writeMessage(5, item_.get(i));
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (pageindex_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(1, pageindex_);
            }
            if (pagenum_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(2, pagenum_);
            }
            if (itemnum_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(3, itemnum_);
            }
            if (totalnum_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(4, totalnum_);
            }
            for (int i = 0; i < item_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(5, item_.get(i));
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_TypePageResQueryrMsgInfo parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_TypePageResQueryrMsgInfo parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_TypePageResQueryrMsgInfo parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_TypePageResQueryrMsgInfo parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_TypePageResQueryrMsgInfo parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_TypePageResQueryrMsgInfo parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_TypePageResQueryrMsgInfo parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_TypePageResQueryrMsgInfo parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_TypePageResQueryrMsgInfo parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_TypePageResQueryrMsgInfo parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_TypePageResQueryrMsgInfo parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_TypePageResQueryrMsgInfo parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_TypePageResQueryrMsgInfo prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *组合查询返回结构头部
         *callreturn
         *type:Pb_TYPE_MEET_INTERFACE_MEETIM
         *method: complexpagequery
         * </pre>
         *
         * Protobuf type {@code pbui_TypePageResQueryrMsgInfo}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_TypePageResQueryrMsgInfo, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_TypePageResQueryrMsgInfo)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_TypePageResQueryrMsgInfoOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_TypePageResQueryrMsgInfo.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <pre>
             *起始索引 从0 开始
             * </pre>
             *
             * <code>fixed32 pageindex = 1;</code>
             */
            public int getPageindex() {
                return instance.getPageindex();
            }
            /**
             * <pre>
             *起始索引 从0 开始
             * </pre>
             *
             * <code>fixed32 pageindex = 1;</code>
             */
            public Builder setPageindex(int value) {
                copyOnWrite();
                instance.setPageindex(value);
                return this;
            }
            /**
             * <pre>
             *起始索引 从0 开始
             * </pre>
             *
             * <code>fixed32 pageindex = 1;</code>
             */
            public Builder clearPageindex() {
                copyOnWrite();
                instance.clearPageindex();
                return this;
            }

            /**
             * <pre>
             *每页项数
             * </pre>
             *
             * <code>fixed32 pagenum = 2;</code>
             */
            public int getPagenum() {
                return instance.getPagenum();
            }
            /**
             * <pre>
             *每页项数
             * </pre>
             *
             * <code>fixed32 pagenum = 2;</code>
             */
            public Builder setPagenum(int value) {
                copyOnWrite();
                instance.setPagenum(value);
                return this;
            }
            /**
             * <pre>
             *每页项数
             * </pre>
             *
             * <code>fixed32 pagenum = 2;</code>
             */
            public Builder clearPagenum() {
                copyOnWrite();
                instance.clearPagenum();
                return this;
            }

            /**
             * <pre>
             *当前页项数 ,根据数据不同用不同的解析
             * </pre>
             *
             * <code>fixed32 itemnum = 3;</code>
             */
            public int getItemnum() {
                return instance.getItemnum();
            }
            /**
             * <pre>
             *当前页项数 ,根据数据不同用不同的解析
             * </pre>
             *
             * <code>fixed32 itemnum = 3;</code>
             */
            public Builder setItemnum(int value) {
                copyOnWrite();
                instance.setItemnum(value);
                return this;
            }
            /**
             * <pre>
             *当前页项数 ,根据数据不同用不同的解析
             * </pre>
             *
             * <code>fixed32 itemnum = 3;</code>
             */
            public Builder clearItemnum() {
                copyOnWrite();
                instance.clearItemnum();
                return this;
            }

            /**
             * <pre>
             *总项数
             * </pre>
             *
             * <code>fixed32 totalnum = 4;</code>
             */
            public int getTotalnum() {
                return instance.getTotalnum();
            }
            /**
             * <pre>
             *总项数
             * </pre>
             *
             * <code>fixed32 totalnum = 4;</code>
             */
            public Builder setTotalnum(int value) {
                copyOnWrite();
                instance.setTotalnum(value);
                return this;
            }
            /**
             * <pre>
             *总项数
             * </pre>
             *
             * <code>fixed32 totalnum = 4;</code>
             */
            public Builder clearTotalnum() {
                copyOnWrite();
                instance.clearTotalnum();
                return this;
            }

            /**
             * <pre>
             *消息
             * </pre>
             *
             * <code>repeated .pbui_Item_MeetIMDetailInfo item = 5;</code>
             */
            public java.util.List<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetIMDetailInfo> getItemList() {
                return java.util.Collections.unmodifiableList(
                        instance.getItemList());
            }
            /**
             * <pre>
             *消息
             * </pre>
             *
             * <code>repeated .pbui_Item_MeetIMDetailInfo item = 5;</code>
             */
            public int getItemCount() {
                return instance.getItemCount();
            }/**
             * <pre>
             *消息
             * </pre>
             *
             * <code>repeated .pbui_Item_MeetIMDetailInfo item = 5;</code>
             */
            public com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetIMDetailInfo getItem(int index) {
                return instance.getItem(index);
            }
            /**
             * <pre>
             *消息
             * </pre>
             *
             * <code>repeated .pbui_Item_MeetIMDetailInfo item = 5;</code>
             */
            public Builder setItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetIMDetailInfo value) {
                copyOnWrite();
                instance.setItem(index, value);
                return this;
            }
            /**
             * <pre>
             *消息
             * </pre>
             *
             * <code>repeated .pbui_Item_MeetIMDetailInfo item = 5;</code>
             */
            public Builder setItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetIMDetailInfo.Builder builderForValue) {
                copyOnWrite();
                instance.setItem(index, builderForValue);
                return this;
            }
            /**
             * <pre>
             *消息
             * </pre>
             *
             * <code>repeated .pbui_Item_MeetIMDetailInfo item = 5;</code>
             */
            public Builder addItem(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetIMDetailInfo value) {
                copyOnWrite();
                instance.addItem(value);
                return this;
            }
            /**
             * <pre>
             *消息
             * </pre>
             *
             * <code>repeated .pbui_Item_MeetIMDetailInfo item = 5;</code>
             */
            public Builder addItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetIMDetailInfo value) {
                copyOnWrite();
                instance.addItem(index, value);
                return this;
            }
            /**
             * <pre>
             *消息
             * </pre>
             *
             * <code>repeated .pbui_Item_MeetIMDetailInfo item = 5;</code>
             */
            public Builder addItem(
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetIMDetailInfo.Builder builderForValue) {
                copyOnWrite();
                instance.addItem(builderForValue);
                return this;
            }
            /**
             * <pre>
             *消息
             * </pre>
             *
             * <code>repeated .pbui_Item_MeetIMDetailInfo item = 5;</code>
             */
            public Builder addItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetIMDetailInfo.Builder builderForValue) {
                copyOnWrite();
                instance.addItem(index, builderForValue);
                return this;
            }
            /**
             * <pre>
             *消息
             * </pre>
             *
             * <code>repeated .pbui_Item_MeetIMDetailInfo item = 5;</code>
             */
            public Builder addAllItem(
                    java.lang.Iterable<? extends com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetIMDetailInfo> values) {
                copyOnWrite();
                instance.addAllItem(values);
                return this;
            }
            /**
             * <pre>
             *消息
             * </pre>
             *
             * <code>repeated .pbui_Item_MeetIMDetailInfo item = 5;</code>
             */
            public Builder clearItem() {
                copyOnWrite();
                instance.clearItem();
                return this;
            }
            /**
             * <pre>
             *消息
             * </pre>
             *
             * <code>repeated .pbui_Item_MeetIMDetailInfo item = 5;</code>
             */
            public Builder removeItem(int index) {
                copyOnWrite();
                instance.removeItem(index);
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_TypePageResQueryrMsgInfo)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_TypePageResQueryrMsgInfo();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    item_.makeImmutable();
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_TypePageResQueryrMsgInfo other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_TypePageResQueryrMsgInfo) arg1;
                    pageindex_ = visitor.visitInt(pageindex_ != 0, pageindex_,
                            other.pageindex_ != 0, other.pageindex_);
                    pagenum_ = visitor.visitInt(pagenum_ != 0, pagenum_,
                            other.pagenum_ != 0, other.pagenum_);
                    itemnum_ = visitor.visitInt(itemnum_ != 0, itemnum_,
                            other.itemnum_ != 0, other.itemnum_);
                    totalnum_ = visitor.visitInt(totalnum_ != 0, totalnum_,
                            other.totalnum_ != 0, other.totalnum_);
                    item_= visitor.visitList(item_, other.item_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                        bitField0_ |= other.bitField0_;
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 13: {

                                    pageindex_ = input.readFixed32();
                                    break;
                                }
                                case 21: {

                                    pagenum_ = input.readFixed32();
                                    break;
                                }
                                case 29: {

                                    itemnum_ = input.readFixed32();
                                    break;
                                }
                                case 37: {

                                    totalnum_ = input.readFixed32();
                                    break;
                                }
                                case 42: {
                                    if (!item_.isModifiable()) {
                                        item_ =
                                                com.google.protobuf.GeneratedMessageLite.mutableCopy(item_);
                                    }
                                    item_.add(
                                            input.readMessage(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetIMDetailInfo.parser(), extensionRegistry));
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_TypePageResQueryrMsgInfo.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_TypePageResQueryrMsgInfo)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_TypePageResQueryrMsgInfo DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_TypePageResQueryrMsgInfo();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_TypePageResQueryrMsgInfo getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_TypePageResQueryrMsgInfo> PARSER;

        public static com.google.protobuf.Parser<pbui_TypePageResQueryrMsgInfo> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Item_MeetOnVotingDetailInfoOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Item_MeetOnVotingDetailInfo)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <code>fixed32 voteid = 1;</code>
         */
        int getVoteid();

        /**
         * <pre>
         *投票内容
         * </pre>
         *
         * <code>bytes content = 2;</code>
         */
        com.google.protobuf.ByteString getContent();

        /**
         * <pre>
         *投票 选举 调查问卷 参见Pb_MeetVoteType
         * </pre>
         *
         * <code>fixed32 maintype = 3;</code>
         */
        int getMaintype();

        /**
         * <pre>
         *匿名投票 记名投票 参见Pb_MeetVoteMode
         * </pre>
         *
         * <code>fixed32 mode = 4;</code>
         */
        int getMode();

        /**
         * <pre>
         *多选 单选 参见Pb_MeetVote_SelType
         * </pre>
         *
         * <code>fixed32 type = 5;</code>
         */
        int getType();

        /**
         * <pre>
         *超时值 单位 秒
         * </pre>
         *
         * <code>fixed32 timeouts = 6;</code>
         */
        int getTimeouts();

        /**
         * <pre>
         *有效选项
         * </pre>
         *
         * <code>fixed32 selectcount = 7;</code>
         */
        int getSelectcount();

        /**
         * <pre>
         *选项描述文字
         * </pre>
         *
         * <code>repeated bytes text = 8;</code>
         */
        java.util.List<com.google.protobuf.ByteString> getTextList();
        /**
         * <pre>
         *选项描述文字
         * </pre>
         *
         * <code>repeated bytes text = 8;</code>
         */
        int getTextCount();
        /**
         * <pre>
         *选项描述文字
         * </pre>
         *
         * <code>repeated bytes text = 8;</code>
         */
        com.google.protobuf.ByteString getText(int index);
    }
    /**
     * <pre>
     *会议发起投票信息
     * </pre>
     *
     * Protobuf type {@code pbui_Item_MeetOnVotingDetailInfo}
     */
    public  static final class pbui_Item_MeetOnVotingDetailInfo extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Item_MeetOnVotingDetailInfo, pbui_Item_MeetOnVotingDetailInfo.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Item_MeetOnVotingDetailInfo)
            pbui_Item_MeetOnVotingDetailInfoOrBuilder {
        private pbui_Item_MeetOnVotingDetailInfo() {
            content_ = com.google.protobuf.ByteString.EMPTY;
            text_ = emptyProtobufList();
        }
        private int bitField0_;
        public static final int VOTEID_FIELD_NUMBER = 1;
        private int voteid_;
        /**
         * <code>fixed32 voteid = 1;</code>
         */
        public int getVoteid() {
            return voteid_;
        }
        /**
         * <code>fixed32 voteid = 1;</code>
         */
        private void setVoteid(int value) {

            voteid_ = value;
        }
        /**
         * <code>fixed32 voteid = 1;</code>
         */
        private void clearVoteid() {

            voteid_ = 0;
        }

        public static final int CONTENT_FIELD_NUMBER = 2;
        private com.google.protobuf.ByteString content_;
        /**
         * <pre>
         *投票内容
         * </pre>
         *
         * <code>bytes content = 2;</code>
         */
        public com.google.protobuf.ByteString getContent() {
            return content_;
        }
        /**
         * <pre>
         *投票内容
         * </pre>
         *
         * <code>bytes content = 2;</code>
         */
        private void setContent(com.google.protobuf.ByteString value) {
            if (value == null) {
                throw new NullPointerException();
            }

            content_ = value;
        }
        /**
         * <pre>
         *投票内容
         * </pre>
         *
         * <code>bytes content = 2;</code>
         */
        private void clearContent() {

            content_ = getDefaultInstance().getContent();
        }

        public static final int MAINTYPE_FIELD_NUMBER = 3;
        private int maintype_;
        /**
         * <pre>
         *投票 选举 调查问卷 参见Pb_MeetVoteType
         * </pre>
         *
         * <code>fixed32 maintype = 3;</code>
         */
        public int getMaintype() {
            return maintype_;
        }
        /**
         * <pre>
         *投票 选举 调查问卷 参见Pb_MeetVoteType
         * </pre>
         *
         * <code>fixed32 maintype = 3;</code>
         */
        private void setMaintype(int value) {

            maintype_ = value;
        }
        /**
         * <pre>
         *投票 选举 调查问卷 参见Pb_MeetVoteType
         * </pre>
         *
         * <code>fixed32 maintype = 3;</code>
         */
        private void clearMaintype() {

            maintype_ = 0;
        }

        public static final int MODE_FIELD_NUMBER = 4;
        private int mode_;
        /**
         * <pre>
         *匿名投票 记名投票 参见Pb_MeetVoteMode
         * </pre>
         *
         * <code>fixed32 mode = 4;</code>
         */
        public int getMode() {
            return mode_;
        }
        /**
         * <pre>
         *匿名投票 记名投票 参见Pb_MeetVoteMode
         * </pre>
         *
         * <code>fixed32 mode = 4;</code>
         */
        private void setMode(int value) {

            mode_ = value;
        }
        /**
         * <pre>
         *匿名投票 记名投票 参见Pb_MeetVoteMode
         * </pre>
         *
         * <code>fixed32 mode = 4;</code>
         */
        private void clearMode() {

            mode_ = 0;
        }

        public static final int TYPE_FIELD_NUMBER = 5;
        private int type_;
        /**
         * <pre>
         *多选 单选 参见Pb_MeetVote_SelType
         * </pre>
         *
         * <code>fixed32 type = 5;</code>
         */
        public int getType() {
            return type_;
        }
        /**
         * <pre>
         *多选 单选 参见Pb_MeetVote_SelType
         * </pre>
         *
         * <code>fixed32 type = 5;</code>
         */
        private void setType(int value) {

            type_ = value;
        }
        /**
         * <pre>
         *多选 单选 参见Pb_MeetVote_SelType
         * </pre>
         *
         * <code>fixed32 type = 5;</code>
         */
        private void clearType() {

            type_ = 0;
        }

        public static final int TIMEOUTS_FIELD_NUMBER = 6;
        private int timeouts_;
        /**
         * <pre>
         *超时值 单位 秒
         * </pre>
         *
         * <code>fixed32 timeouts = 6;</code>
         */
        public int getTimeouts() {
            return timeouts_;
        }
        /**
         * <pre>
         *超时值 单位 秒
         * </pre>
         *
         * <code>fixed32 timeouts = 6;</code>
         */
        private void setTimeouts(int value) {

            timeouts_ = value;
        }
        /**
         * <pre>
         *超时值 单位 秒
         * </pre>
         *
         * <code>fixed32 timeouts = 6;</code>
         */
        private void clearTimeouts() {

            timeouts_ = 0;
        }

        public static final int SELECTCOUNT_FIELD_NUMBER = 7;
        private int selectcount_;
        /**
         * <pre>
         *有效选项
         * </pre>
         *
         * <code>fixed32 selectcount = 7;</code>
         */
        public int getSelectcount() {
            return selectcount_;
        }
        /**
         * <pre>
         *有效选项
         * </pre>
         *
         * <code>fixed32 selectcount = 7;</code>
         */
        private void setSelectcount(int value) {

            selectcount_ = value;
        }
        /**
         * <pre>
         *有效选项
         * </pre>
         *
         * <code>fixed32 selectcount = 7;</code>
         */
        private void clearSelectcount() {

            selectcount_ = 0;
        }

        public static final int TEXT_FIELD_NUMBER = 8;
        private com.google.protobuf.Internal.ProtobufList<com.google.protobuf.ByteString> text_;
        /**
         * <pre>
         *选项描述文字
         * </pre>
         *
         * <code>repeated bytes text = 8;</code>
         */
        public java.util.List<com.google.protobuf.ByteString>
        getTextList() {
            return text_;
        }
        /**
         * <pre>
         *选项描述文字
         * </pre>
         *
         * <code>repeated bytes text = 8;</code>
         */
        public int getTextCount() {
            return text_.size();
        }
        /**
         * <pre>
         *选项描述文字
         * </pre>
         *
         * <code>repeated bytes text = 8;</code>
         */
        public com.google.protobuf.ByteString getText(int index) {
            return text_.get(index);
        }
        private void ensureTextIsMutable() {
            if (!text_.isModifiable()) {
                text_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(text_);
            }
        }
        /**
         * <pre>
         *选项描述文字
         * </pre>
         *
         * <code>repeated bytes text = 8;</code>
         */
        private void setText(
                int index, com.google.protobuf.ByteString value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensureTextIsMutable();
            text_.set(index, value);
        }
        /**
         * <pre>
         *选项描述文字
         * </pre>
         *
         * <code>repeated bytes text = 8;</code>
         */
        private void addText(com.google.protobuf.ByteString value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensureTextIsMutable();
            text_.add(value);
        }
        /**
         * <pre>
         *选项描述文字
         * </pre>
         *
         * <code>repeated bytes text = 8;</code>
         */
        private void addAllText(
                java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
            ensureTextIsMutable();
            com.google.protobuf.AbstractMessageLite.addAll(
                    values, text_);
        }
        /**
         * <pre>
         *选项描述文字
         * </pre>
         *
         * <code>repeated bytes text = 8;</code>
         */
        private void clearText() {
            text_ = emptyProtobufList();
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (voteid_ != 0) {
                output.writeFixed32(1, voteid_);
            }
            if (!content_.isEmpty()) {
                output.writeBytes(2, content_);
            }
            if (maintype_ != 0) {
                output.writeFixed32(3, maintype_);
            }
            if (mode_ != 0) {
                output.writeFixed32(4, mode_);
            }
            if (type_ != 0) {
                output.writeFixed32(5, type_);
            }
            if (timeouts_ != 0) {
                output.writeFixed32(6, timeouts_);
            }
            if (selectcount_ != 0) {
                output.writeFixed32(7, selectcount_);
            }
            for (int i = 0; i < text_.size(); i++) {
                output.writeBytes(8, text_.get(i));
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (voteid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(1, voteid_);
            }
            if (!content_.isEmpty()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(2, content_);
            }
            if (maintype_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(3, maintype_);
            }
            if (mode_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(4, mode_);
            }
            if (type_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(5, type_);
            }
            if (timeouts_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(6, timeouts_);
            }
            if (selectcount_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(7, selectcount_);
            }
            {
                int dataSize = 0;
                for (int i = 0; i < text_.size(); i++) {
                    dataSize += com.google.protobuf.CodedOutputStream
                            .computeBytesSizeNoTag(text_.get(i));
                }
                size += dataSize;
                size += 1 * getTextList().size();
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOnVotingDetailInfo parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOnVotingDetailInfo parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOnVotingDetailInfo parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOnVotingDetailInfo parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOnVotingDetailInfo parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOnVotingDetailInfo parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOnVotingDetailInfo parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOnVotingDetailInfo parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOnVotingDetailInfo parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOnVotingDetailInfo parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOnVotingDetailInfo parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOnVotingDetailInfo parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOnVotingDetailInfo prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *会议发起投票信息
         * </pre>
         *
         * Protobuf type {@code pbui_Item_MeetOnVotingDetailInfo}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOnVotingDetailInfo, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Item_MeetOnVotingDetailInfo)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOnVotingDetailInfoOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOnVotingDetailInfo.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <code>fixed32 voteid = 1;</code>
             */
            public int getVoteid() {
                return instance.getVoteid();
            }
            /**
             * <code>fixed32 voteid = 1;</code>
             */
            public Builder setVoteid(int value) {
                copyOnWrite();
                instance.setVoteid(value);
                return this;
            }
            /**
             * <code>fixed32 voteid = 1;</code>
             */
            public Builder clearVoteid() {
                copyOnWrite();
                instance.clearVoteid();
                return this;
            }

            /**
             * <pre>
             *投票内容
             * </pre>
             *
             * <code>bytes content = 2;</code>
             */
            public com.google.protobuf.ByteString getContent() {
                return instance.getContent();
            }
            /**
             * <pre>
             *投票内容
             * </pre>
             *
             * <code>bytes content = 2;</code>
             */
            public Builder setContent(com.google.protobuf.ByteString value) {
                copyOnWrite();
                instance.setContent(value);
                return this;
            }
            /**
             * <pre>
             *投票内容
             * </pre>
             *
             * <code>bytes content = 2;</code>
             */
            public Builder clearContent() {
                copyOnWrite();
                instance.clearContent();
                return this;
            }

            /**
             * <pre>
             *投票 选举 调查问卷 参见Pb_MeetVoteType
             * </pre>
             *
             * <code>fixed32 maintype = 3;</code>
             */
            public int getMaintype() {
                return instance.getMaintype();
            }
            /**
             * <pre>
             *投票 选举 调查问卷 参见Pb_MeetVoteType
             * </pre>
             *
             * <code>fixed32 maintype = 3;</code>
             */
            public Builder setMaintype(int value) {
                copyOnWrite();
                instance.setMaintype(value);
                return this;
            }
            /**
             * <pre>
             *投票 选举 调查问卷 参见Pb_MeetVoteType
             * </pre>
             *
             * <code>fixed32 maintype = 3;</code>
             */
            public Builder clearMaintype() {
                copyOnWrite();
                instance.clearMaintype();
                return this;
            }

            /**
             * <pre>
             *匿名投票 记名投票 参见Pb_MeetVoteMode
             * </pre>
             *
             * <code>fixed32 mode = 4;</code>
             */
            public int getMode() {
                return instance.getMode();
            }
            /**
             * <pre>
             *匿名投票 记名投票 参见Pb_MeetVoteMode
             * </pre>
             *
             * <code>fixed32 mode = 4;</code>
             */
            public Builder setMode(int value) {
                copyOnWrite();
                instance.setMode(value);
                return this;
            }
            /**
             * <pre>
             *匿名投票 记名投票 参见Pb_MeetVoteMode
             * </pre>
             *
             * <code>fixed32 mode = 4;</code>
             */
            public Builder clearMode() {
                copyOnWrite();
                instance.clearMode();
                return this;
            }

            /**
             * <pre>
             *多选 单选 参见Pb_MeetVote_SelType
             * </pre>
             *
             * <code>fixed32 type = 5;</code>
             */
            public int getType() {
                return instance.getType();
            }
            /**
             * <pre>
             *多选 单选 参见Pb_MeetVote_SelType
             * </pre>
             *
             * <code>fixed32 type = 5;</code>
             */
            public Builder setType(int value) {
                copyOnWrite();
                instance.setType(value);
                return this;
            }
            /**
             * <pre>
             *多选 单选 参见Pb_MeetVote_SelType
             * </pre>
             *
             * <code>fixed32 type = 5;</code>
             */
            public Builder clearType() {
                copyOnWrite();
                instance.clearType();
                return this;
            }

            /**
             * <pre>
             *超时值 单位 秒
             * </pre>
             *
             * <code>fixed32 timeouts = 6;</code>
             */
            public int getTimeouts() {
                return instance.getTimeouts();
            }
            /**
             * <pre>
             *超时值 单位 秒
             * </pre>
             *
             * <code>fixed32 timeouts = 6;</code>
             */
            public Builder setTimeouts(int value) {
                copyOnWrite();
                instance.setTimeouts(value);
                return this;
            }
            /**
             * <pre>
             *超时值 单位 秒
             * </pre>
             *
             * <code>fixed32 timeouts = 6;</code>
             */
            public Builder clearTimeouts() {
                copyOnWrite();
                instance.clearTimeouts();
                return this;
            }

            /**
             * <pre>
             *有效选项
             * </pre>
             *
             * <code>fixed32 selectcount = 7;</code>
             */
            public int getSelectcount() {
                return instance.getSelectcount();
            }
            /**
             * <pre>
             *有效选项
             * </pre>
             *
             * <code>fixed32 selectcount = 7;</code>
             */
            public Builder setSelectcount(int value) {
                copyOnWrite();
                instance.setSelectcount(value);
                return this;
            }
            /**
             * <pre>
             *有效选项
             * </pre>
             *
             * <code>fixed32 selectcount = 7;</code>
             */
            public Builder clearSelectcount() {
                copyOnWrite();
                instance.clearSelectcount();
                return this;
            }

            /**
             * <pre>
             *选项描述文字
             * </pre>
             *
             * <code>repeated bytes text = 8;</code>
             */
            public java.util.List<com.google.protobuf.ByteString>
            getTextList() {
                return java.util.Collections.unmodifiableList(
                        instance.getTextList());
            }
            /**
             * <pre>
             *选项描述文字
             * </pre>
             *
             * <code>repeated bytes text = 8;</code>
             */
            public int getTextCount() {
                return instance.getTextCount();
            }
            /**
             * <pre>
             *选项描述文字
             * </pre>
             *
             * <code>repeated bytes text = 8;</code>
             */
            public com.google.protobuf.ByteString getText(int index) {
                return instance.getText(index);
            }
            /**
             * <pre>
             *选项描述文字
             * </pre>
             *
             * <code>repeated bytes text = 8;</code>
             */
            public Builder setText(
                    int index, com.google.protobuf.ByteString value) {
                copyOnWrite();
                instance.setText(index, value);
                return this;
            }
            /**
             * <pre>
             *选项描述文字
             * </pre>
             *
             * <code>repeated bytes text = 8;</code>
             */
            public Builder addText(com.google.protobuf.ByteString value) {
                copyOnWrite();
                instance.addText(value);
                return this;
            }
            /**
             * <pre>
             *选项描述文字
             * </pre>
             *
             * <code>repeated bytes text = 8;</code>
             */
            public Builder addAllText(
                    java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
                copyOnWrite();
                instance.addAllText(values);
                return this;
            }
            /**
             * <pre>
             *选项描述文字
             * </pre>
             *
             * <code>repeated bytes text = 8;</code>
             */
            public Builder clearText() {
                copyOnWrite();
                instance.clearText();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Item_MeetOnVotingDetailInfo)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOnVotingDetailInfo();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    text_.makeImmutable();
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOnVotingDetailInfo other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOnVotingDetailInfo) arg1;
                    voteid_ = visitor.visitInt(voteid_ != 0, voteid_,
                            other.voteid_ != 0, other.voteid_);
                    content_ = visitor.visitByteString(content_ != com.google.protobuf.ByteString.EMPTY, content_,
                            other.content_ != com.google.protobuf.ByteString.EMPTY, other.content_);
                    maintype_ = visitor.visitInt(maintype_ != 0, maintype_,
                            other.maintype_ != 0, other.maintype_);
                    mode_ = visitor.visitInt(mode_ != 0, mode_,
                            other.mode_ != 0, other.mode_);
                    type_ = visitor.visitInt(type_ != 0, type_,
                            other.type_ != 0, other.type_);
                    timeouts_ = visitor.visitInt(timeouts_ != 0, timeouts_,
                            other.timeouts_ != 0, other.timeouts_);
                    selectcount_ = visitor.visitInt(selectcount_ != 0, selectcount_,
                            other.selectcount_ != 0, other.selectcount_);
                    text_= visitor.visitList(text_, other.text_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                        bitField0_ |= other.bitField0_;
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 13: {

                                    voteid_ = input.readFixed32();
                                    break;
                                }
                                case 18: {

                                    content_ = input.readBytes();
                                    break;
                                }
                                case 29: {

                                    maintype_ = input.readFixed32();
                                    break;
                                }
                                case 37: {

                                    mode_ = input.readFixed32();
                                    break;
                                }
                                case 45: {

                                    type_ = input.readFixed32();
                                    break;
                                }
                                case 53: {

                                    timeouts_ = input.readFixed32();
                                    break;
                                }
                                case 61: {

                                    selectcount_ = input.readFixed32();
                                    break;
                                }
                                case 66: {
                                    if (!text_.isModifiable()) {
                                        text_ =
                                                com.google.protobuf.GeneratedMessageLite.mutableCopy(text_);
                                    }
                                    text_.add(input.readBytes());
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOnVotingDetailInfo.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Item_MeetOnVotingDetailInfo)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOnVotingDetailInfo DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Item_MeetOnVotingDetailInfo();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOnVotingDetailInfo getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Item_MeetOnVotingDetailInfo> PARSER;

        public static com.google.protobuf.Parser<pbui_Item_MeetOnVotingDetailInfo> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Type_MeetOnVotingDetailInfoOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Type_MeetOnVotingDetailInfo)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <pre>
         *投票信息
         * </pre>
         *
         * <code>repeated .pbui_Item_MeetOnVotingDetailInfo item = 1;</code>
         */
        java.util.List<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOnVotingDetailInfo>
        getItemList();
        /**
         * <pre>
         *投票信息
         * </pre>
         *
         * <code>repeated .pbui_Item_MeetOnVotingDetailInfo item = 1;</code>
         */
        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOnVotingDetailInfo getItem(int index);
        /**
         * <pre>
         *投票信息
         * </pre>
         *
         * <code>repeated .pbui_Item_MeetOnVotingDetailInfo item = 1;</code>
         */
        int getItemCount();
    }
    /**
     * <pre>
     *type:Pb_TYPE_MEET_INTERFACE_MEETONVOTING
     *method: query/add/mod/
     * </pre>
     *
     * Protobuf type {@code pbui_Type_MeetOnVotingDetailInfo}
     */
    public  static final class pbui_Type_MeetOnVotingDetailInfo extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Type_MeetOnVotingDetailInfo, pbui_Type_MeetOnVotingDetailInfo.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Type_MeetOnVotingDetailInfo)
            pbui_Type_MeetOnVotingDetailInfoOrBuilder {
        private pbui_Type_MeetOnVotingDetailInfo() {
            item_ = emptyProtobufList();
        }
        public static final int ITEM_FIELD_NUMBER = 1;
        private com.google.protobuf.Internal.ProtobufList<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOnVotingDetailInfo> item_;
        /**
         * <pre>
         *投票信息
         * </pre>
         *
         * <code>repeated .pbui_Item_MeetOnVotingDetailInfo item = 1;</code>
         */
        public java.util.List<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOnVotingDetailInfo> getItemList() {
            return item_;
        }
        /**
         * <pre>
         *投票信息
         * </pre>
         *
         * <code>repeated .pbui_Item_MeetOnVotingDetailInfo item = 1;</code>
         */
        public java.util.List<? extends com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOnVotingDetailInfoOrBuilder>
        getItemOrBuilderList() {
            return item_;
        }
        /**
         * <pre>
         *投票信息
         * </pre>
         *
         * <code>repeated .pbui_Item_MeetOnVotingDetailInfo item = 1;</code>
         */
        public int getItemCount() {
            return item_.size();
        }
        /**
         * <pre>
         *投票信息
         * </pre>
         *
         * <code>repeated .pbui_Item_MeetOnVotingDetailInfo item = 1;</code>
         */
        public com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOnVotingDetailInfo getItem(int index) {
            return item_.get(index);
        }
        /**
         * <pre>
         *投票信息
         * </pre>
         *
         * <code>repeated .pbui_Item_MeetOnVotingDetailInfo item = 1;</code>
         */
        public com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOnVotingDetailInfoOrBuilder getItemOrBuilder(
                int index) {
            return item_.get(index);
        }
        private void ensureItemIsMutable() {
            if (!item_.isModifiable()) {
                item_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(item_);
            }
        }

        /**
         * <pre>
         *投票信息
         * </pre>
         *
         * <code>repeated .pbui_Item_MeetOnVotingDetailInfo item = 1;</code>
         */
        private void setItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOnVotingDetailInfo value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensureItemIsMutable();
            item_.set(index, value);
        }
        /**
         * <pre>
         *投票信息
         * </pre>
         *
         * <code>repeated .pbui_Item_MeetOnVotingDetailInfo item = 1;</code>
         */
        private void setItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOnVotingDetailInfo.Builder builderForValue) {
            ensureItemIsMutable();
            item_.set(index, builderForValue.build());
        }
        /**
         * <pre>
         *投票信息
         * </pre>
         *
         * <code>repeated .pbui_Item_MeetOnVotingDetailInfo item = 1;</code>
         */
        private void addItem(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOnVotingDetailInfo value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensureItemIsMutable();
            item_.add(value);
        }
        /**
         * <pre>
         *投票信息
         * </pre>
         *
         * <code>repeated .pbui_Item_MeetOnVotingDetailInfo item = 1;</code>
         */
        private void addItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOnVotingDetailInfo value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensureItemIsMutable();
            item_.add(index, value);
        }
        /**
         * <pre>
         *投票信息
         * </pre>
         *
         * <code>repeated .pbui_Item_MeetOnVotingDetailInfo item = 1;</code>
         */
        private void addItem(
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOnVotingDetailInfo.Builder builderForValue) {
            ensureItemIsMutable();
            item_.add(builderForValue.build());
        }
        /**
         * <pre>
         *投票信息
         * </pre>
         *
         * <code>repeated .pbui_Item_MeetOnVotingDetailInfo item = 1;</code>
         */
        private void addItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOnVotingDetailInfo.Builder builderForValue) {
            ensureItemIsMutable();
            item_.add(index, builderForValue.build());
        }
        /**
         * <pre>
         *投票信息
         * </pre>
         *
         * <code>repeated .pbui_Item_MeetOnVotingDetailInfo item = 1;</code>
         */
        private void addAllItem(
                java.lang.Iterable<? extends com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOnVotingDetailInfo> values) {
            ensureItemIsMutable();
            com.google.protobuf.AbstractMessageLite.addAll(
                    values, item_);
        }
        /**
         * <pre>
         *投票信息
         * </pre>
         *
         * <code>repeated .pbui_Item_MeetOnVotingDetailInfo item = 1;</code>
         */
        private void clearItem() {
            item_ = emptyProtobufList();
        }
        /**
         * <pre>
         *投票信息
         * </pre>
         *
         * <code>repeated .pbui_Item_MeetOnVotingDetailInfo item = 1;</code>
         */
        private void removeItem(int index) {
            ensureItemIsMutable();
            item_.remove(index);
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            for (int i = 0; i < item_.size(); i++) {
                output.writeMessage(1, item_.get(i));
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            for (int i = 0; i < item_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, item_.get(i));
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetOnVotingDetailInfo parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetOnVotingDetailInfo parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetOnVotingDetailInfo parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetOnVotingDetailInfo parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetOnVotingDetailInfo parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetOnVotingDetailInfo parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetOnVotingDetailInfo parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetOnVotingDetailInfo parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetOnVotingDetailInfo parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetOnVotingDetailInfo parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetOnVotingDetailInfo parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetOnVotingDetailInfo parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetOnVotingDetailInfo prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *type:Pb_TYPE_MEET_INTERFACE_MEETONVOTING
         *method: query/add/mod/
         * </pre>
         *
         * Protobuf type {@code pbui_Type_MeetOnVotingDetailInfo}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetOnVotingDetailInfo, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Type_MeetOnVotingDetailInfo)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetOnVotingDetailInfoOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetOnVotingDetailInfo.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <pre>
             *投票信息
             * </pre>
             *
             * <code>repeated .pbui_Item_MeetOnVotingDetailInfo item = 1;</code>
             */
            public java.util.List<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOnVotingDetailInfo> getItemList() {
                return java.util.Collections.unmodifiableList(
                        instance.getItemList());
            }
            /**
             * <pre>
             *投票信息
             * </pre>
             *
             * <code>repeated .pbui_Item_MeetOnVotingDetailInfo item = 1;</code>
             */
            public int getItemCount() {
                return instance.getItemCount();
            }/**
             * <pre>
             *投票信息
             * </pre>
             *
             * <code>repeated .pbui_Item_MeetOnVotingDetailInfo item = 1;</code>
             */
            public com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOnVotingDetailInfo getItem(int index) {
                return instance.getItem(index);
            }
            /**
             * <pre>
             *投票信息
             * </pre>
             *
             * <code>repeated .pbui_Item_MeetOnVotingDetailInfo item = 1;</code>
             */
            public Builder setItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOnVotingDetailInfo value) {
                copyOnWrite();
                instance.setItem(index, value);
                return this;
            }
            /**
             * <pre>
             *投票信息
             * </pre>
             *
             * <code>repeated .pbui_Item_MeetOnVotingDetailInfo item = 1;</code>
             */
            public Builder setItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOnVotingDetailInfo.Builder builderForValue) {
                copyOnWrite();
                instance.setItem(index, builderForValue);
                return this;
            }
            /**
             * <pre>
             *投票信息
             * </pre>
             *
             * <code>repeated .pbui_Item_MeetOnVotingDetailInfo item = 1;</code>
             */
            public Builder addItem(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOnVotingDetailInfo value) {
                copyOnWrite();
                instance.addItem(value);
                return this;
            }
            /**
             * <pre>
             *投票信息
             * </pre>
             *
             * <code>repeated .pbui_Item_MeetOnVotingDetailInfo item = 1;</code>
             */
            public Builder addItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOnVotingDetailInfo value) {
                copyOnWrite();
                instance.addItem(index, value);
                return this;
            }
            /**
             * <pre>
             *投票信息
             * </pre>
             *
             * <code>repeated .pbui_Item_MeetOnVotingDetailInfo item = 1;</code>
             */
            public Builder addItem(
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOnVotingDetailInfo.Builder builderForValue) {
                copyOnWrite();
                instance.addItem(builderForValue);
                return this;
            }
            /**
             * <pre>
             *投票信息
             * </pre>
             *
             * <code>repeated .pbui_Item_MeetOnVotingDetailInfo item = 1;</code>
             */
            public Builder addItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOnVotingDetailInfo.Builder builderForValue) {
                copyOnWrite();
                instance.addItem(index, builderForValue);
                return this;
            }
            /**
             * <pre>
             *投票信息
             * </pre>
             *
             * <code>repeated .pbui_Item_MeetOnVotingDetailInfo item = 1;</code>
             */
            public Builder addAllItem(
                    java.lang.Iterable<? extends com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOnVotingDetailInfo> values) {
                copyOnWrite();
                instance.addAllItem(values);
                return this;
            }
            /**
             * <pre>
             *投票信息
             * </pre>
             *
             * <code>repeated .pbui_Item_MeetOnVotingDetailInfo item = 1;</code>
             */
            public Builder clearItem() {
                copyOnWrite();
                instance.clearItem();
                return this;
            }
            /**
             * <pre>
             *投票信息
             * </pre>
             *
             * <code>repeated .pbui_Item_MeetOnVotingDetailInfo item = 1;</code>
             */
            public Builder removeItem(int index) {
                copyOnWrite();
                instance.removeItem(index);
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Type_MeetOnVotingDetailInfo)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetOnVotingDetailInfo();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    item_.makeImmutable();
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetOnVotingDetailInfo other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetOnVotingDetailInfo) arg1;
                    item_= visitor.visitList(item_, other.item_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 10: {
                                    if (!item_.isModifiable()) {
                                        item_ =
                                                com.google.protobuf.GeneratedMessageLite.mutableCopy(item_);
                                    }
                                    item_.add(
                                            input.readMessage(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOnVotingDetailInfo.parser(), extensionRegistry));
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetOnVotingDetailInfo.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Type_MeetOnVotingDetailInfo)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetOnVotingDetailInfo DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Type_MeetOnVotingDetailInfo();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetOnVotingDetailInfo getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Type_MeetOnVotingDetailInfo> PARSER;

        public static com.google.protobuf.Parser<pbui_Type_MeetOnVotingDetailInfo> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Type_MeetSetVoteTimeoutsOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Type_MeetSetVoteTimeouts)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <pre>
         *投票ID
         * </pre>
         *
         * <code>fixed32 voteid = 1;</code>
         */
        int getVoteid();

        /**
         * <pre>
         *计时 单位 秒
         * </pre>
         *
         * <code>fixed32 timeouts = 2;</code>
         */
        int getTimeouts();
    }
    /**
     * <pre>
     *设置投投票计时值
     *type:Pb_TYPE_MEET_INTERFACE_MEETONVOTING
     *method: set
     * </pre>
     *
     * Protobuf type {@code pbui_Type_MeetSetVoteTimeouts}
     */
    public  static final class pbui_Type_MeetSetVoteTimeouts extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Type_MeetSetVoteTimeouts, pbui_Type_MeetSetVoteTimeouts.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Type_MeetSetVoteTimeouts)
            pbui_Type_MeetSetVoteTimeoutsOrBuilder {
        private pbui_Type_MeetSetVoteTimeouts() {
        }
        public static final int VOTEID_FIELD_NUMBER = 1;
        private int voteid_;
        /**
         * <pre>
         *投票ID
         * </pre>
         *
         * <code>fixed32 voteid = 1;</code>
         */
        public int getVoteid() {
            return voteid_;
        }
        /**
         * <pre>
         *投票ID
         * </pre>
         *
         * <code>fixed32 voteid = 1;</code>
         */
        private void setVoteid(int value) {

            voteid_ = value;
        }
        /**
         * <pre>
         *投票ID
         * </pre>
         *
         * <code>fixed32 voteid = 1;</code>
         */
        private void clearVoteid() {

            voteid_ = 0;
        }

        public static final int TIMEOUTS_FIELD_NUMBER = 2;
        private int timeouts_;
        /**
         * <pre>
         *计时 单位 秒
         * </pre>
         *
         * <code>fixed32 timeouts = 2;</code>
         */
        public int getTimeouts() {
            return timeouts_;
        }
        /**
         * <pre>
         *计时 单位 秒
         * </pre>
         *
         * <code>fixed32 timeouts = 2;</code>
         */
        private void setTimeouts(int value) {

            timeouts_ = value;
        }
        /**
         * <pre>
         *计时 单位 秒
         * </pre>
         *
         * <code>fixed32 timeouts = 2;</code>
         */
        private void clearTimeouts() {

            timeouts_ = 0;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (voteid_ != 0) {
                output.writeFixed32(1, voteid_);
            }
            if (timeouts_ != 0) {
                output.writeFixed32(2, timeouts_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (voteid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(1, voteid_);
            }
            if (timeouts_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(2, timeouts_);
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSetVoteTimeouts parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSetVoteTimeouts parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSetVoteTimeouts parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSetVoteTimeouts parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSetVoteTimeouts parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSetVoteTimeouts parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSetVoteTimeouts parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSetVoteTimeouts parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSetVoteTimeouts parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSetVoteTimeouts parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSetVoteTimeouts parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSetVoteTimeouts parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSetVoteTimeouts prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *设置投投票计时值
         *type:Pb_TYPE_MEET_INTERFACE_MEETONVOTING
         *method: set
         * </pre>
         *
         * Protobuf type {@code pbui_Type_MeetSetVoteTimeouts}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSetVoteTimeouts, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Type_MeetSetVoteTimeouts)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSetVoteTimeoutsOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSetVoteTimeouts.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <pre>
             *投票ID
             * </pre>
             *
             * <code>fixed32 voteid = 1;</code>
             */
            public int getVoteid() {
                return instance.getVoteid();
            }
            /**
             * <pre>
             *投票ID
             * </pre>
             *
             * <code>fixed32 voteid = 1;</code>
             */
            public Builder setVoteid(int value) {
                copyOnWrite();
                instance.setVoteid(value);
                return this;
            }
            /**
             * <pre>
             *投票ID
             * </pre>
             *
             * <code>fixed32 voteid = 1;</code>
             */
            public Builder clearVoteid() {
                copyOnWrite();
                instance.clearVoteid();
                return this;
            }

            /**
             * <pre>
             *计时 单位 秒
             * </pre>
             *
             * <code>fixed32 timeouts = 2;</code>
             */
            public int getTimeouts() {
                return instance.getTimeouts();
            }
            /**
             * <pre>
             *计时 单位 秒
             * </pre>
             *
             * <code>fixed32 timeouts = 2;</code>
             */
            public Builder setTimeouts(int value) {
                copyOnWrite();
                instance.setTimeouts(value);
                return this;
            }
            /**
             * <pre>
             *计时 单位 秒
             * </pre>
             *
             * <code>fixed32 timeouts = 2;</code>
             */
            public Builder clearTimeouts() {
                copyOnWrite();
                instance.clearTimeouts();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Type_MeetSetVoteTimeouts)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSetVoteTimeouts();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSetVoteTimeouts other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSetVoteTimeouts) arg1;
                    voteid_ = visitor.visitInt(voteid_ != 0, voteid_,
                            other.voteid_ != 0, other.voteid_);
                    timeouts_ = visitor.visitInt(timeouts_ != 0, timeouts_,
                            other.timeouts_ != 0, other.timeouts_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 13: {

                                    voteid_ = input.readFixed32();
                                    break;
                                }
                                case 21: {

                                    timeouts_ = input.readFixed32();
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSetVoteTimeouts.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Type_MeetSetVoteTimeouts)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSetVoteTimeouts DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Type_MeetSetVoteTimeouts();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSetVoteTimeouts getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Type_MeetSetVoteTimeouts> PARSER;

        public static com.google.protobuf.Parser<pbui_Type_MeetSetVoteTimeouts> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Type_MeetStopVoteInfoOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Type_MeetStopVoteInfo)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <code>repeated fixed32 voteid = 1;</code>
         */
        java.util.List<java.lang.Integer> getVoteidList();
        /**
         * <code>repeated fixed32 voteid = 1;</code>
         */
        int getVoteidCount();
        /**
         * <code>repeated fixed32 voteid = 1;</code>
         */
        int getVoteid(int index);
    }
    /**
     * <pre>
     *会议发起投票信息
     *type:Pb_TYPE_MEET_INTERFACE_MEETONVOTING
     *method: start/stop/del
     * </pre>
     *
     * Protobuf type {@code pbui_Type_MeetStopVoteInfo}
     */
    public  static final class pbui_Type_MeetStopVoteInfo extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Type_MeetStopVoteInfo, pbui_Type_MeetStopVoteInfo.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Type_MeetStopVoteInfo)
            pbui_Type_MeetStopVoteInfoOrBuilder {
        private pbui_Type_MeetStopVoteInfo() {
            voteid_ = emptyIntList();
        }
        public static final int VOTEID_FIELD_NUMBER = 1;
        private com.google.protobuf.Internal.IntList voteid_;
        /**
         * <code>repeated fixed32 voteid = 1;</code>
         */
        public java.util.List<java.lang.Integer>
        getVoteidList() {
            return voteid_;
        }
        /**
         * <code>repeated fixed32 voteid = 1;</code>
         */
        public int getVoteidCount() {
            return voteid_.size();
        }
        /**
         * <code>repeated fixed32 voteid = 1;</code>
         */
        public int getVoteid(int index) {
            return voteid_.getInt(index);
        }
        private void ensureVoteidIsMutable() {
            if (!voteid_.isModifiable()) {
                voteid_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(voteid_);
            }
        }
        /**
         * <code>repeated fixed32 voteid = 1;</code>
         */
        private void setVoteid(
                int index, int value) {
            ensureVoteidIsMutable();
            voteid_.setInt(index, value);
        }
        /**
         * <code>repeated fixed32 voteid = 1;</code>
         */
        private void addVoteid(int value) {
            ensureVoteidIsMutable();
            voteid_.addInt(value);
        }
        /**
         * <code>repeated fixed32 voteid = 1;</code>
         */
        private void addAllVoteid(
                java.lang.Iterable<? extends java.lang.Integer> values) {
            ensureVoteidIsMutable();
            com.google.protobuf.AbstractMessageLite.addAll(
                    values, voteid_);
        }
        /**
         * <code>repeated fixed32 voteid = 1;</code>
         */
        private void clearVoteid() {
            voteid_ = emptyIntList();
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            for (int i = 0; i < voteid_.size(); i++) {
                output.writeFixed32(1, voteid_.getInt(i));
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            {
                int dataSize = 0;
                dataSize = 4 * getVoteidList().size();
                size += dataSize;
                size += 1 * getVoteidList().size();
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStopVoteInfo parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStopVoteInfo parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStopVoteInfo parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStopVoteInfo parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStopVoteInfo parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStopVoteInfo parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStopVoteInfo parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStopVoteInfo parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStopVoteInfo parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStopVoteInfo parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStopVoteInfo parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStopVoteInfo parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStopVoteInfo prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *会议发起投票信息
         *type:Pb_TYPE_MEET_INTERFACE_MEETONVOTING
         *method: start/stop/del
         * </pre>
         *
         * Protobuf type {@code pbui_Type_MeetStopVoteInfo}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStopVoteInfo, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Type_MeetStopVoteInfo)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStopVoteInfoOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStopVoteInfo.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <code>repeated fixed32 voteid = 1;</code>
             */
            public java.util.List<java.lang.Integer>
            getVoteidList() {
                return java.util.Collections.unmodifiableList(
                        instance.getVoteidList());
            }
            /**
             * <code>repeated fixed32 voteid = 1;</code>
             */
            public int getVoteidCount() {
                return instance.getVoteidCount();
            }
            /**
             * <code>repeated fixed32 voteid = 1;</code>
             */
            public int getVoteid(int index) {
                return instance.getVoteid(index);
            }
            /**
             * <code>repeated fixed32 voteid = 1;</code>
             */
            public Builder setVoteid(
                    int index, int value) {
                copyOnWrite();
                instance.setVoteid(index, value);
                return this;
            }
            /**
             * <code>repeated fixed32 voteid = 1;</code>
             */
            public Builder addVoteid(int value) {
                copyOnWrite();
                instance.addVoteid(value);
                return this;
            }
            /**
             * <code>repeated fixed32 voteid = 1;</code>
             */
            public Builder addAllVoteid(
                    java.lang.Iterable<? extends java.lang.Integer> values) {
                copyOnWrite();
                instance.addAllVoteid(values);
                return this;
            }
            /**
             * <code>repeated fixed32 voteid = 1;</code>
             */
            public Builder clearVoteid() {
                copyOnWrite();
                instance.clearVoteid();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Type_MeetStopVoteInfo)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStopVoteInfo();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    voteid_.makeImmutable();
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStopVoteInfo other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStopVoteInfo) arg1;
                    voteid_= visitor.visitIntList(voteid_, other.voteid_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 13: {
                                    if (!voteid_.isModifiable()) {
                                        voteid_ =
                                                com.google.protobuf.GeneratedMessageLite.mutableCopy(voteid_);
                                    }
                                    voteid_.addInt(input.readFixed32());
                                    break;
                                }
                                case 10: {
                                    int length = input.readRawVarint32();
                                    int limit = input.pushLimit(length);
                                    if (!voteid_.isModifiable() && input.getBytesUntilLimit() > 0) {
                                        final int currentSize = voteid_.size();
                                        voteid_ = voteid_.mutableCopyWithCapacity(
                                                currentSize + (length/4));
                                    }
                                    while (input.getBytesUntilLimit() > 0) {
                                        voteid_.addInt(input.readFixed32());
                                    }
                                    input.popLimit(limit);
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStopVoteInfo.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Type_MeetStopVoteInfo)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStopVoteInfo DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Type_MeetStopVoteInfo();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStopVoteInfo getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Type_MeetStopVoteInfo> PARSER;

        public static com.google.protobuf.Parser<pbui_Type_MeetStopVoteInfo> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Item_MeetSubmitVoteOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Item_MeetSubmitVote)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <code>fixed32 voteid = 1;</code>
         */
        int getVoteid();

        /**
         * <pre>
         *有效选项数
         * </pre>
         *
         * <code>fixed32 selcnt = 2;</code>
         */
        int getSelcnt();

        /**
         * <pre>
         *选择的项 0x00000001 选择了第一项 0x00000002第二项 对应项位置1表示选择
         * </pre>
         *
         * <code>fixed32 selitem = 3;</code>
         */
        int getSelitem();
    }
    /**
     * <pre>
     *提交会议投票信息
     * </pre>
     *
     * Protobuf type {@code pbui_Item_MeetSubmitVote}
     */
    public  static final class pbui_Item_MeetSubmitVote extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Item_MeetSubmitVote, pbui_Item_MeetSubmitVote.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Item_MeetSubmitVote)
            pbui_Item_MeetSubmitVoteOrBuilder {
        private pbui_Item_MeetSubmitVote() {
        }
        public static final int VOTEID_FIELD_NUMBER = 1;
        private int voteid_;
        /**
         * <code>fixed32 voteid = 1;</code>
         */
        public int getVoteid() {
            return voteid_;
        }
        /**
         * <code>fixed32 voteid = 1;</code>
         */
        private void setVoteid(int value) {

            voteid_ = value;
        }
        /**
         * <code>fixed32 voteid = 1;</code>
         */
        private void clearVoteid() {

            voteid_ = 0;
        }

        public static final int SELCNT_FIELD_NUMBER = 2;
        private int selcnt_;
        /**
         * <pre>
         *有效选项数
         * </pre>
         *
         * <code>fixed32 selcnt = 2;</code>
         */
        public int getSelcnt() {
            return selcnt_;
        }
        /**
         * <pre>
         *有效选项数
         * </pre>
         *
         * <code>fixed32 selcnt = 2;</code>
         */
        private void setSelcnt(int value) {

            selcnt_ = value;
        }
        /**
         * <pre>
         *有效选项数
         * </pre>
         *
         * <code>fixed32 selcnt = 2;</code>
         */
        private void clearSelcnt() {

            selcnt_ = 0;
        }

        public static final int SELITEM_FIELD_NUMBER = 3;
        private int selitem_;
        /**
         * <pre>
         *选择的项 0x00000001 选择了第一项 0x00000002第二项 对应项位置1表示选择
         * </pre>
         *
         * <code>fixed32 selitem = 3;</code>
         */
        public int getSelitem() {
            return selitem_;
        }
        /**
         * <pre>
         *选择的项 0x00000001 选择了第一项 0x00000002第二项 对应项位置1表示选择
         * </pre>
         *
         * <code>fixed32 selitem = 3;</code>
         */
        private void setSelitem(int value) {

            selitem_ = value;
        }
        /**
         * <pre>
         *选择的项 0x00000001 选择了第一项 0x00000002第二项 对应项位置1表示选择
         * </pre>
         *
         * <code>fixed32 selitem = 3;</code>
         */
        private void clearSelitem() {

            selitem_ = 0;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (voteid_ != 0) {
                output.writeFixed32(1, voteid_);
            }
            if (selcnt_ != 0) {
                output.writeFixed32(2, selcnt_);
            }
            if (selitem_ != 0) {
                output.writeFixed32(3, selitem_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (voteid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(1, voteid_);
            }
            if (selcnt_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(2, selcnt_);
            }
            if (selitem_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(3, selitem_);
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSubmitVote parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSubmitVote parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSubmitVote parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSubmitVote parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSubmitVote parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSubmitVote parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSubmitVote parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSubmitVote parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSubmitVote parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSubmitVote parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSubmitVote parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSubmitVote parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSubmitVote prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *提交会议投票信息
         * </pre>
         *
         * Protobuf type {@code pbui_Item_MeetSubmitVote}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSubmitVote, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Item_MeetSubmitVote)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSubmitVoteOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSubmitVote.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <code>fixed32 voteid = 1;</code>
             */
            public int getVoteid() {
                return instance.getVoteid();
            }
            /**
             * <code>fixed32 voteid = 1;</code>
             */
            public Builder setVoteid(int value) {
                copyOnWrite();
                instance.setVoteid(value);
                return this;
            }
            /**
             * <code>fixed32 voteid = 1;</code>
             */
            public Builder clearVoteid() {
                copyOnWrite();
                instance.clearVoteid();
                return this;
            }

            /**
             * <pre>
             *有效选项数
             * </pre>
             *
             * <code>fixed32 selcnt = 2;</code>
             */
            public int getSelcnt() {
                return instance.getSelcnt();
            }
            /**
             * <pre>
             *有效选项数
             * </pre>
             *
             * <code>fixed32 selcnt = 2;</code>
             */
            public Builder setSelcnt(int value) {
                copyOnWrite();
                instance.setSelcnt(value);
                return this;
            }
            /**
             * <pre>
             *有效选项数
             * </pre>
             *
             * <code>fixed32 selcnt = 2;</code>
             */
            public Builder clearSelcnt() {
                copyOnWrite();
                instance.clearSelcnt();
                return this;
            }

            /**
             * <pre>
             *选择的项 0x00000001 选择了第一项 0x00000002第二项 对应项位置1表示选择
             * </pre>
             *
             * <code>fixed32 selitem = 3;</code>
             */
            public int getSelitem() {
                return instance.getSelitem();
            }
            /**
             * <pre>
             *选择的项 0x00000001 选择了第一项 0x00000002第二项 对应项位置1表示选择
             * </pre>
             *
             * <code>fixed32 selitem = 3;</code>
             */
            public Builder setSelitem(int value) {
                copyOnWrite();
                instance.setSelitem(value);
                return this;
            }
            /**
             * <pre>
             *选择的项 0x00000001 选择了第一项 0x00000002第二项 对应项位置1表示选择
             * </pre>
             *
             * <code>fixed32 selitem = 3;</code>
             */
            public Builder clearSelitem() {
                copyOnWrite();
                instance.clearSelitem();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Item_MeetSubmitVote)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSubmitVote();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSubmitVote other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSubmitVote) arg1;
                    voteid_ = visitor.visitInt(voteid_ != 0, voteid_,
                            other.voteid_ != 0, other.voteid_);
                    selcnt_ = visitor.visitInt(selcnt_ != 0, selcnt_,
                            other.selcnt_ != 0, other.selcnt_);
                    selitem_ = visitor.visitInt(selitem_ != 0, selitem_,
                            other.selitem_ != 0, other.selitem_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 13: {

                                    voteid_ = input.readFixed32();
                                    break;
                                }
                                case 21: {

                                    selcnt_ = input.readFixed32();
                                    break;
                                }
                                case 29: {

                                    selitem_ = input.readFixed32();
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSubmitVote.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Item_MeetSubmitVote)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSubmitVote DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Item_MeetSubmitVote();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSubmitVote getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Item_MeetSubmitVote> PARSER;

        public static com.google.protobuf.Parser<pbui_Item_MeetSubmitVote> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Type_MeetSubmitVoteOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Type_MeetSubmitVote)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <code>repeated .pbui_Item_MeetSubmitVote item = 1;</code>
         */
        java.util.List<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSubmitVote>
        getItemList();
        /**
         * <code>repeated .pbui_Item_MeetSubmitVote item = 1;</code>
         */
        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSubmitVote getItem(int index);
        /**
         * <code>repeated .pbui_Item_MeetSubmitVote item = 1;</code>
         */
        int getItemCount();
    }
    /**
     * <pre>
     *提交会议投票信息
     *call
     *type:Pb_TYPE_MEET_INTERFACE_MEETONVOTING
     *method: submit
     * </pre>
     *
     * Protobuf type {@code pbui_Type_MeetSubmitVote}
     */
    public  static final class pbui_Type_MeetSubmitVote extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Type_MeetSubmitVote, pbui_Type_MeetSubmitVote.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Type_MeetSubmitVote)
            pbui_Type_MeetSubmitVoteOrBuilder {
        private pbui_Type_MeetSubmitVote() {
            item_ = emptyProtobufList();
        }
        public static final int ITEM_FIELD_NUMBER = 1;
        private com.google.protobuf.Internal.ProtobufList<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSubmitVote> item_;
        /**
         * <code>repeated .pbui_Item_MeetSubmitVote item = 1;</code>
         */
        public java.util.List<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSubmitVote> getItemList() {
            return item_;
        }
        /**
         * <code>repeated .pbui_Item_MeetSubmitVote item = 1;</code>
         */
        public java.util.List<? extends com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSubmitVoteOrBuilder>
        getItemOrBuilderList() {
            return item_;
        }
        /**
         * <code>repeated .pbui_Item_MeetSubmitVote item = 1;</code>
         */
        public int getItemCount() {
            return item_.size();
        }
        /**
         * <code>repeated .pbui_Item_MeetSubmitVote item = 1;</code>
         */
        public com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSubmitVote getItem(int index) {
            return item_.get(index);
        }
        /**
         * <code>repeated .pbui_Item_MeetSubmitVote item = 1;</code>
         */
        public com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSubmitVoteOrBuilder getItemOrBuilder(
                int index) {
            return item_.get(index);
        }
        private void ensureItemIsMutable() {
            if (!item_.isModifiable()) {
                item_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(item_);
            }
        }

        /**
         * <code>repeated .pbui_Item_MeetSubmitVote item = 1;</code>
         */
        private void setItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSubmitVote value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensureItemIsMutable();
            item_.set(index, value);
        }
        /**
         * <code>repeated .pbui_Item_MeetSubmitVote item = 1;</code>
         */
        private void setItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSubmitVote.Builder builderForValue) {
            ensureItemIsMutable();
            item_.set(index, builderForValue.build());
        }
        /**
         * <code>repeated .pbui_Item_MeetSubmitVote item = 1;</code>
         */
        private void addItem(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSubmitVote value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensureItemIsMutable();
            item_.add(value);
        }
        /**
         * <code>repeated .pbui_Item_MeetSubmitVote item = 1;</code>
         */
        private void addItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSubmitVote value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensureItemIsMutable();
            item_.add(index, value);
        }
        /**
         * <code>repeated .pbui_Item_MeetSubmitVote item = 1;</code>
         */
        private void addItem(
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSubmitVote.Builder builderForValue) {
            ensureItemIsMutable();
            item_.add(builderForValue.build());
        }
        /**
         * <code>repeated .pbui_Item_MeetSubmitVote item = 1;</code>
         */
        private void addItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSubmitVote.Builder builderForValue) {
            ensureItemIsMutable();
            item_.add(index, builderForValue.build());
        }
        /**
         * <code>repeated .pbui_Item_MeetSubmitVote item = 1;</code>
         */
        private void addAllItem(
                java.lang.Iterable<? extends com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSubmitVote> values) {
            ensureItemIsMutable();
            com.google.protobuf.AbstractMessageLite.addAll(
                    values, item_);
        }
        /**
         * <code>repeated .pbui_Item_MeetSubmitVote item = 1;</code>
         */
        private void clearItem() {
            item_ = emptyProtobufList();
        }
        /**
         * <code>repeated .pbui_Item_MeetSubmitVote item = 1;</code>
         */
        private void removeItem(int index) {
            ensureItemIsMutable();
            item_.remove(index);
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            for (int i = 0; i < item_.size(); i++) {
                output.writeMessage(1, item_.get(i));
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            for (int i = 0; i < item_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, item_.get(i));
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSubmitVote parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSubmitVote parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSubmitVote parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSubmitVote parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSubmitVote parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSubmitVote parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSubmitVote parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSubmitVote parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSubmitVote parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSubmitVote parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSubmitVote parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSubmitVote parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSubmitVote prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *提交会议投票信息
         *call
         *type:Pb_TYPE_MEET_INTERFACE_MEETONVOTING
         *method: submit
         * </pre>
         *
         * Protobuf type {@code pbui_Type_MeetSubmitVote}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSubmitVote, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Type_MeetSubmitVote)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSubmitVoteOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSubmitVote.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <code>repeated .pbui_Item_MeetSubmitVote item = 1;</code>
             */
            public java.util.List<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSubmitVote> getItemList() {
                return java.util.Collections.unmodifiableList(
                        instance.getItemList());
            }
            /**
             * <code>repeated .pbui_Item_MeetSubmitVote item = 1;</code>
             */
            public int getItemCount() {
                return instance.getItemCount();
            }/**
             * <code>repeated .pbui_Item_MeetSubmitVote item = 1;</code>
             */
            public com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSubmitVote getItem(int index) {
                return instance.getItem(index);
            }
            /**
             * <code>repeated .pbui_Item_MeetSubmitVote item = 1;</code>
             */
            public Builder setItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSubmitVote value) {
                copyOnWrite();
                instance.setItem(index, value);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetSubmitVote item = 1;</code>
             */
            public Builder setItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSubmitVote.Builder builderForValue) {
                copyOnWrite();
                instance.setItem(index, builderForValue);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetSubmitVote item = 1;</code>
             */
            public Builder addItem(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSubmitVote value) {
                copyOnWrite();
                instance.addItem(value);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetSubmitVote item = 1;</code>
             */
            public Builder addItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSubmitVote value) {
                copyOnWrite();
                instance.addItem(index, value);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetSubmitVote item = 1;</code>
             */
            public Builder addItem(
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSubmitVote.Builder builderForValue) {
                copyOnWrite();
                instance.addItem(builderForValue);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetSubmitVote item = 1;</code>
             */
            public Builder addItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSubmitVote.Builder builderForValue) {
                copyOnWrite();
                instance.addItem(index, builderForValue);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetSubmitVote item = 1;</code>
             */
            public Builder addAllItem(
                    java.lang.Iterable<? extends com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSubmitVote> values) {
                copyOnWrite();
                instance.addAllItem(values);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetSubmitVote item = 1;</code>
             */
            public Builder clearItem() {
                copyOnWrite();
                instance.clearItem();
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetSubmitVote item = 1;</code>
             */
            public Builder removeItem(int index) {
                copyOnWrite();
                instance.removeItem(index);
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Type_MeetSubmitVote)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSubmitVote();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    item_.makeImmutable();
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSubmitVote other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSubmitVote) arg1;
                    item_= visitor.visitList(item_, other.item_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 10: {
                                    if (!item_.isModifiable()) {
                                        item_ =
                                                com.google.protobuf.GeneratedMessageLite.mutableCopy(item_);
                                    }
                                    item_.add(
                                            input.readMessage(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSubmitVote.parser(), extensionRegistry));
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSubmitVote.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Type_MeetSubmitVote)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSubmitVote DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Type_MeetSubmitVote();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSubmitVote getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Type_MeetSubmitVote> PARSER;

        public static com.google.protobuf.Parser<pbui_Type_MeetSubmitVote> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_SubItem_VoteItemInfoOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_SubItem_VoteItemInfo)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <pre>
         *描述文字
         * </pre>
         *
         * <code>bytes text = 1;</code>
         */
        com.google.protobuf.ByteString getText();

        /**
         * <pre>
         *投票数
         * </pre>
         *
         * <code>fixed32 selcnt = 2;</code>
         */
        int getSelcnt();
    }
    /**
     * <pre>
     *会议投票信息
     * </pre>
     *
     * Protobuf type {@code pbui_SubItem_VoteItemInfo}
     */
    public  static final class pbui_SubItem_VoteItemInfo extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_SubItem_VoteItemInfo, pbui_SubItem_VoteItemInfo.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_SubItem_VoteItemInfo)
            pbui_SubItem_VoteItemInfoOrBuilder {
        private pbui_SubItem_VoteItemInfo() {
            text_ = com.google.protobuf.ByteString.EMPTY;
        }
        public static final int TEXT_FIELD_NUMBER = 1;
        private com.google.protobuf.ByteString text_;
        /**
         * <pre>
         *描述文字
         * </pre>
         *
         * <code>bytes text = 1;</code>
         */
        public com.google.protobuf.ByteString getText() {
            return text_;
        }
        /**
         * <pre>
         *描述文字
         * </pre>
         *
         * <code>bytes text = 1;</code>
         */
        private void setText(com.google.protobuf.ByteString value) {
            if (value == null) {
                throw new NullPointerException();
            }

            text_ = value;
        }
        /**
         * <pre>
         *描述文字
         * </pre>
         *
         * <code>bytes text = 1;</code>
         */
        private void clearText() {

            text_ = getDefaultInstance().getText();
        }

        public static final int SELCNT_FIELD_NUMBER = 2;
        private int selcnt_;
        /**
         * <pre>
         *投票数
         * </pre>
         *
         * <code>fixed32 selcnt = 2;</code>
         */
        public int getSelcnt() {
            return selcnt_;
        }
        /**
         * <pre>
         *投票数
         * </pre>
         *
         * <code>fixed32 selcnt = 2;</code>
         */
        private void setSelcnt(int value) {

            selcnt_ = value;
        }
        /**
         * <pre>
         *投票数
         * </pre>
         *
         * <code>fixed32 selcnt = 2;</code>
         */
        private void clearSelcnt() {

            selcnt_ = 0;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (!text_.isEmpty()) {
                output.writeBytes(1, text_);
            }
            if (selcnt_ != 0) {
                output.writeFixed32(2, selcnt_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (!text_.isEmpty()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(1, text_);
            }
            if (selcnt_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(2, selcnt_);
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_SubItem_VoteItemInfo parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_SubItem_VoteItemInfo parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_SubItem_VoteItemInfo parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_SubItem_VoteItemInfo parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_SubItem_VoteItemInfo parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_SubItem_VoteItemInfo parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_SubItem_VoteItemInfo parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_SubItem_VoteItemInfo parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_SubItem_VoteItemInfo parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_SubItem_VoteItemInfo parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_SubItem_VoteItemInfo parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_SubItem_VoteItemInfo parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_SubItem_VoteItemInfo prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *会议投票信息
         * </pre>
         *
         * Protobuf type {@code pbui_SubItem_VoteItemInfo}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_SubItem_VoteItemInfo, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_SubItem_VoteItemInfo)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_SubItem_VoteItemInfoOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_SubItem_VoteItemInfo.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <pre>
             *描述文字
             * </pre>
             *
             * <code>bytes text = 1;</code>
             */
            public com.google.protobuf.ByteString getText() {
                return instance.getText();
            }
            /**
             * <pre>
             *描述文字
             * </pre>
             *
             * <code>bytes text = 1;</code>
             */
            public Builder setText(com.google.protobuf.ByteString value) {
                copyOnWrite();
                instance.setText(value);
                return this;
            }
            /**
             * <pre>
             *描述文字
             * </pre>
             *
             * <code>bytes text = 1;</code>
             */
            public Builder clearText() {
                copyOnWrite();
                instance.clearText();
                return this;
            }

            /**
             * <pre>
             *投票数
             * </pre>
             *
             * <code>fixed32 selcnt = 2;</code>
             */
            public int getSelcnt() {
                return instance.getSelcnt();
            }
            /**
             * <pre>
             *投票数
             * </pre>
             *
             * <code>fixed32 selcnt = 2;</code>
             */
            public Builder setSelcnt(int value) {
                copyOnWrite();
                instance.setSelcnt(value);
                return this;
            }
            /**
             * <pre>
             *投票数
             * </pre>
             *
             * <code>fixed32 selcnt = 2;</code>
             */
            public Builder clearSelcnt() {
                copyOnWrite();
                instance.clearSelcnt();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_SubItem_VoteItemInfo)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_SubItem_VoteItemInfo();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_SubItem_VoteItemInfo other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_SubItem_VoteItemInfo) arg1;
                    text_ = visitor.visitByteString(text_ != com.google.protobuf.ByteString.EMPTY, text_,
                            other.text_ != com.google.protobuf.ByteString.EMPTY, other.text_);
                    selcnt_ = visitor.visitInt(selcnt_ != 0, selcnt_,
                            other.selcnt_ != 0, other.selcnt_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 10: {

                                    text_ = input.readBytes();
                                    break;
                                }
                                case 21: {

                                    selcnt_ = input.readFixed32();
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_SubItem_VoteItemInfo.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_SubItem_VoteItemInfo)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_SubItem_VoteItemInfo DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_SubItem_VoteItemInfo();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_SubItem_VoteItemInfo getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_SubItem_VoteItemInfo> PARSER;

        public static com.google.protobuf.Parser<pbui_SubItem_VoteItemInfo> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Item_MeetVoteDetailInfoOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Item_MeetVoteDetailInfo)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <code>fixed32 voteid = 1;</code>
         */
        int getVoteid();

        /**
         * <pre>
         *投票内容
         * </pre>
         *
         * <code>bytes content = 2;</code>
         */
        com.google.protobuf.ByteString getContent();

        /**
         * <pre>
         *类别 投票 选举 调查问卷 参见Pb_MeetVoteType
         * </pre>
         *
         * <code>fixed32 maintype = 3;</code>
         */
        int getMaintype();

        /**
         * <pre>
         *匿名投票 记名投票 参见Pb_MeetVoteMode
         * </pre>
         *
         * <code>fixed32 mode = 4;</code>
         */
        int getMode();

        /**
         * <pre>
         *多选 单选 参见Pb_MeetVote_SelType
         * </pre>
         *
         * <code>fixed32 type = 5;</code>
         */
        int getType();

        /**
         * <pre>
         *投票状态 参见Pb_MeetVoteStatus
         * </pre>
         *
         * <code>fixed32 votestate = 6;</code>
         */
        int getVotestate();

        /**
         * <pre>
         *超时值
         * </pre>
         *
         * <code>fixed32 timeouts = 7;</code>
         */
        int getTimeouts();

        /**
         * <pre>
         *有效选项
         * </pre>
         *
         * <code>fixed32 selectcount = 8;</code>
         */
        int getSelectcount();

        /**
         * <pre>
         *选项描述文字
         * </pre>
         *
         * <code>repeated .pbui_SubItem_VoteItemInfo item = 9;</code>
         */
        java.util.List<com.mogujie.tt.protobuf.InterfaceMain2.pbui_SubItem_VoteItemInfo>
        getItemList();
        /**
         * <pre>
         *选项描述文字
         * </pre>
         *
         * <code>repeated .pbui_SubItem_VoteItemInfo item = 9;</code>
         */
        com.mogujie.tt.protobuf.InterfaceMain2.pbui_SubItem_VoteItemInfo getItem(int index);
        /**
         * <pre>
         *选项描述文字
         * </pre>
         *
         * <code>repeated .pbui_SubItem_VoteItemInfo item = 9;</code>
         */
        int getItemCount();
    }
    /**
     * Protobuf type {@code pbui_Item_MeetVoteDetailInfo}
     */
    public  static final class pbui_Item_MeetVoteDetailInfo extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Item_MeetVoteDetailInfo, pbui_Item_MeetVoteDetailInfo.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Item_MeetVoteDetailInfo)
            pbui_Item_MeetVoteDetailInfoOrBuilder {
        private pbui_Item_MeetVoteDetailInfo() {
            content_ = com.google.protobuf.ByteString.EMPTY;
            item_ = emptyProtobufList();
        }
        private int bitField0_;
        public static final int VOTEID_FIELD_NUMBER = 1;
        private int voteid_;
        /**
         * <code>fixed32 voteid = 1;</code>
         */
        public int getVoteid() {
            return voteid_;
        }
        /**
         * <code>fixed32 voteid = 1;</code>
         */
        private void setVoteid(int value) {

            voteid_ = value;
        }
        /**
         * <code>fixed32 voteid = 1;</code>
         */
        private void clearVoteid() {

            voteid_ = 0;
        }

        public static final int CONTENT_FIELD_NUMBER = 2;
        private com.google.protobuf.ByteString content_;
        /**
         * <pre>
         *投票内容
         * </pre>
         *
         * <code>bytes content = 2;</code>
         */
        public com.google.protobuf.ByteString getContent() {
            return content_;
        }
        /**
         * <pre>
         *投票内容
         * </pre>
         *
         * <code>bytes content = 2;</code>
         */
        private void setContent(com.google.protobuf.ByteString value) {
            if (value == null) {
                throw new NullPointerException();
            }

            content_ = value;
        }
        /**
         * <pre>
         *投票内容
         * </pre>
         *
         * <code>bytes content = 2;</code>
         */
        private void clearContent() {

            content_ = getDefaultInstance().getContent();
        }

        public static final int MAINTYPE_FIELD_NUMBER = 3;
        private int maintype_;
        /**
         * <pre>
         *类别 投票 选举 调查问卷 参见Pb_MeetVoteType
         * </pre>
         *
         * <code>fixed32 maintype = 3;</code>
         */
        public int getMaintype() {
            return maintype_;
        }
        /**
         * <pre>
         *类别 投票 选举 调查问卷 参见Pb_MeetVoteType
         * </pre>
         *
         * <code>fixed32 maintype = 3;</code>
         */
        private void setMaintype(int value) {

            maintype_ = value;
        }
        /**
         * <pre>
         *类别 投票 选举 调查问卷 参见Pb_MeetVoteType
         * </pre>
         *
         * <code>fixed32 maintype = 3;</code>
         */
        private void clearMaintype() {

            maintype_ = 0;
        }

        public static final int MODE_FIELD_NUMBER = 4;
        private int mode_;
        /**
         * <pre>
         *匿名投票 记名投票 参见Pb_MeetVoteMode
         * </pre>
         *
         * <code>fixed32 mode = 4;</code>
         */
        public int getMode() {
            return mode_;
        }
        /**
         * <pre>
         *匿名投票 记名投票 参见Pb_MeetVoteMode
         * </pre>
         *
         * <code>fixed32 mode = 4;</code>
         */
        private void setMode(int value) {

            mode_ = value;
        }
        /**
         * <pre>
         *匿名投票 记名投票 参见Pb_MeetVoteMode
         * </pre>
         *
         * <code>fixed32 mode = 4;</code>
         */
        private void clearMode() {

            mode_ = 0;
        }

        public static final int TYPE_FIELD_NUMBER = 5;
        private int type_;
        /**
         * <pre>
         *多选 单选 参见Pb_MeetVote_SelType
         * </pre>
         *
         * <code>fixed32 type = 5;</code>
         */
        public int getType() {
            return type_;
        }
        /**
         * <pre>
         *多选 单选 参见Pb_MeetVote_SelType
         * </pre>
         *
         * <code>fixed32 type = 5;</code>
         */
        private void setType(int value) {

            type_ = value;
        }
        /**
         * <pre>
         *多选 单选 参见Pb_MeetVote_SelType
         * </pre>
         *
         * <code>fixed32 type = 5;</code>
         */
        private void clearType() {

            type_ = 0;
        }

        public static final int VOTESTATE_FIELD_NUMBER = 6;
        private int votestate_;
        /**
         * <pre>
         *投票状态 参见Pb_MeetVoteStatus
         * </pre>
         *
         * <code>fixed32 votestate = 6;</code>
         */
        public int getVotestate() {
            return votestate_;
        }
        /**
         * <pre>
         *投票状态 参见Pb_MeetVoteStatus
         * </pre>
         *
         * <code>fixed32 votestate = 6;</code>
         */
        private void setVotestate(int value) {

            votestate_ = value;
        }
        /**
         * <pre>
         *投票状态 参见Pb_MeetVoteStatus
         * </pre>
         *
         * <code>fixed32 votestate = 6;</code>
         */
        private void clearVotestate() {

            votestate_ = 0;
        }

        public static final int TIMEOUTS_FIELD_NUMBER = 7;
        private int timeouts_;
        /**
         * <pre>
         *超时值
         * </pre>
         *
         * <code>fixed32 timeouts = 7;</code>
         */
        public int getTimeouts() {
            return timeouts_;
        }
        /**
         * <pre>
         *超时值
         * </pre>
         *
         * <code>fixed32 timeouts = 7;</code>
         */
        private void setTimeouts(int value) {

            timeouts_ = value;
        }
        /**
         * <pre>
         *超时值
         * </pre>
         *
         * <code>fixed32 timeouts = 7;</code>
         */
        private void clearTimeouts() {

            timeouts_ = 0;
        }

        public static final int SELECTCOUNT_FIELD_NUMBER = 8;
        private int selectcount_;
        /**
         * <pre>
         *有效选项
         * </pre>
         *
         * <code>fixed32 selectcount = 8;</code>
         */
        public int getSelectcount() {
            return selectcount_;
        }
        /**
         * <pre>
         *有效选项
         * </pre>
         *
         * <code>fixed32 selectcount = 8;</code>
         */
        private void setSelectcount(int value) {

            selectcount_ = value;
        }
        /**
         * <pre>
         *有效选项
         * </pre>
         *
         * <code>fixed32 selectcount = 8;</code>
         */
        private void clearSelectcount() {

            selectcount_ = 0;
        }

        public static final int ITEM_FIELD_NUMBER = 9;
        private com.google.protobuf.Internal.ProtobufList<com.mogujie.tt.protobuf.InterfaceMain2.pbui_SubItem_VoteItemInfo> item_;
        /**
         * <pre>
         *选项描述文字
         * </pre>
         *
         * <code>repeated .pbui_SubItem_VoteItemInfo item = 9;</code>
         */
        public java.util.List<com.mogujie.tt.protobuf.InterfaceMain2.pbui_SubItem_VoteItemInfo> getItemList() {
            return item_;
        }
        /**
         * <pre>
         *选项描述文字
         * </pre>
         *
         * <code>repeated .pbui_SubItem_VoteItemInfo item = 9;</code>
         */
        public java.util.List<? extends com.mogujie.tt.protobuf.InterfaceMain2.pbui_SubItem_VoteItemInfoOrBuilder>
        getItemOrBuilderList() {
            return item_;
        }
        /**
         * <pre>
         *选项描述文字
         * </pre>
         *
         * <code>repeated .pbui_SubItem_VoteItemInfo item = 9;</code>
         */
        public int getItemCount() {
            return item_.size();
        }
        /**
         * <pre>
         *选项描述文字
         * </pre>
         *
         * <code>repeated .pbui_SubItem_VoteItemInfo item = 9;</code>
         */
        public com.mogujie.tt.protobuf.InterfaceMain2.pbui_SubItem_VoteItemInfo getItem(int index) {
            return item_.get(index);
        }
        /**
         * <pre>
         *选项描述文字
         * </pre>
         *
         * <code>repeated .pbui_SubItem_VoteItemInfo item = 9;</code>
         */
        public com.mogujie.tt.protobuf.InterfaceMain2.pbui_SubItem_VoteItemInfoOrBuilder getItemOrBuilder(
                int index) {
            return item_.get(index);
        }
        private void ensureItemIsMutable() {
            if (!item_.isModifiable()) {
                item_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(item_);
            }
        }

        /**
         * <pre>
         *选项描述文字
         * </pre>
         *
         * <code>repeated .pbui_SubItem_VoteItemInfo item = 9;</code>
         */
        private void setItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_SubItem_VoteItemInfo value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensureItemIsMutable();
            item_.set(index, value);
        }
        /**
         * <pre>
         *选项描述文字
         * </pre>
         *
         * <code>repeated .pbui_SubItem_VoteItemInfo item = 9;</code>
         */
        private void setItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_SubItem_VoteItemInfo.Builder builderForValue) {
            ensureItemIsMutable();
            item_.set(index, builderForValue.build());
        }
        /**
         * <pre>
         *选项描述文字
         * </pre>
         *
         * <code>repeated .pbui_SubItem_VoteItemInfo item = 9;</code>
         */
        private void addItem(com.mogujie.tt.protobuf.InterfaceMain2.pbui_SubItem_VoteItemInfo value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensureItemIsMutable();
            item_.add(value);
        }
        /**
         * <pre>
         *选项描述文字
         * </pre>
         *
         * <code>repeated .pbui_SubItem_VoteItemInfo item = 9;</code>
         */
        private void addItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_SubItem_VoteItemInfo value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensureItemIsMutable();
            item_.add(index, value);
        }
        /**
         * <pre>
         *选项描述文字
         * </pre>
         *
         * <code>repeated .pbui_SubItem_VoteItemInfo item = 9;</code>
         */
        private void addItem(
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_SubItem_VoteItemInfo.Builder builderForValue) {
            ensureItemIsMutable();
            item_.add(builderForValue.build());
        }
        /**
         * <pre>
         *选项描述文字
         * </pre>
         *
         * <code>repeated .pbui_SubItem_VoteItemInfo item = 9;</code>
         */
        private void addItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_SubItem_VoteItemInfo.Builder builderForValue) {
            ensureItemIsMutable();
            item_.add(index, builderForValue.build());
        }
        /**
         * <pre>
         *选项描述文字
         * </pre>
         *
         * <code>repeated .pbui_SubItem_VoteItemInfo item = 9;</code>
         */
        private void addAllItem(
                java.lang.Iterable<? extends com.mogujie.tt.protobuf.InterfaceMain2.pbui_SubItem_VoteItemInfo> values) {
            ensureItemIsMutable();
            com.google.protobuf.AbstractMessageLite.addAll(
                    values, item_);
        }
        /**
         * <pre>
         *选项描述文字
         * </pre>
         *
         * <code>repeated .pbui_SubItem_VoteItemInfo item = 9;</code>
         */
        private void clearItem() {
            item_ = emptyProtobufList();
        }
        /**
         * <pre>
         *选项描述文字
         * </pre>
         *
         * <code>repeated .pbui_SubItem_VoteItemInfo item = 9;</code>
         */
        private void removeItem(int index) {
            ensureItemIsMutable();
            item_.remove(index);
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (voteid_ != 0) {
                output.writeFixed32(1, voteid_);
            }
            if (!content_.isEmpty()) {
                output.writeBytes(2, content_);
            }
            if (maintype_ != 0) {
                output.writeFixed32(3, maintype_);
            }
            if (mode_ != 0) {
                output.writeFixed32(4, mode_);
            }
            if (type_ != 0) {
                output.writeFixed32(5, type_);
            }
            if (votestate_ != 0) {
                output.writeFixed32(6, votestate_);
            }
            if (timeouts_ != 0) {
                output.writeFixed32(7, timeouts_);
            }
            if (selectcount_ != 0) {
                output.writeFixed32(8, selectcount_);
            }
            for (int i = 0; i < item_.size(); i++) {
                output.writeMessage(9, item_.get(i));
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (voteid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(1, voteid_);
            }
            if (!content_.isEmpty()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(2, content_);
            }
            if (maintype_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(3, maintype_);
            }
            if (mode_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(4, mode_);
            }
            if (type_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(5, type_);
            }
            if (votestate_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(6, votestate_);
            }
            if (timeouts_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(7, timeouts_);
            }
            if (selectcount_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(8, selectcount_);
            }
            for (int i = 0; i < item_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(9, item_.get(i));
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteDetailInfo parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteDetailInfo parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteDetailInfo parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteDetailInfo parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteDetailInfo parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteDetailInfo parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteDetailInfo parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteDetailInfo parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteDetailInfo parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteDetailInfo parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteDetailInfo parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteDetailInfo parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteDetailInfo prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * Protobuf type {@code pbui_Item_MeetVoteDetailInfo}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteDetailInfo, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Item_MeetVoteDetailInfo)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteDetailInfoOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteDetailInfo.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <code>fixed32 voteid = 1;</code>
             */
            public int getVoteid() {
                return instance.getVoteid();
            }
            /**
             * <code>fixed32 voteid = 1;</code>
             */
            public Builder setVoteid(int value) {
                copyOnWrite();
                instance.setVoteid(value);
                return this;
            }
            /**
             * <code>fixed32 voteid = 1;</code>
             */
            public Builder clearVoteid() {
                copyOnWrite();
                instance.clearVoteid();
                return this;
            }

            /**
             * <pre>
             *投票内容
             * </pre>
             *
             * <code>bytes content = 2;</code>
             */
            public com.google.protobuf.ByteString getContent() {
                return instance.getContent();
            }
            /**
             * <pre>
             *投票内容
             * </pre>
             *
             * <code>bytes content = 2;</code>
             */
            public Builder setContent(com.google.protobuf.ByteString value) {
                copyOnWrite();
                instance.setContent(value);
                return this;
            }
            /**
             * <pre>
             *投票内容
             * </pre>
             *
             * <code>bytes content = 2;</code>
             */
            public Builder clearContent() {
                copyOnWrite();
                instance.clearContent();
                return this;
            }

            /**
             * <pre>
             *类别 投票 选举 调查问卷 参见Pb_MeetVoteType
             * </pre>
             *
             * <code>fixed32 maintype = 3;</code>
             */
            public int getMaintype() {
                return instance.getMaintype();
            }
            /**
             * <pre>
             *类别 投票 选举 调查问卷 参见Pb_MeetVoteType
             * </pre>
             *
             * <code>fixed32 maintype = 3;</code>
             */
            public Builder setMaintype(int value) {
                copyOnWrite();
                instance.setMaintype(value);
                return this;
            }
            /**
             * <pre>
             *类别 投票 选举 调查问卷 参见Pb_MeetVoteType
             * </pre>
             *
             * <code>fixed32 maintype = 3;</code>
             */
            public Builder clearMaintype() {
                copyOnWrite();
                instance.clearMaintype();
                return this;
            }

            /**
             * <pre>
             *匿名投票 记名投票 参见Pb_MeetVoteMode
             * </pre>
             *
             * <code>fixed32 mode = 4;</code>
             */
            public int getMode() {
                return instance.getMode();
            }
            /**
             * <pre>
             *匿名投票 记名投票 参见Pb_MeetVoteMode
             * </pre>
             *
             * <code>fixed32 mode = 4;</code>
             */
            public Builder setMode(int value) {
                copyOnWrite();
                instance.setMode(value);
                return this;
            }
            /**
             * <pre>
             *匿名投票 记名投票 参见Pb_MeetVoteMode
             * </pre>
             *
             * <code>fixed32 mode = 4;</code>
             */
            public Builder clearMode() {
                copyOnWrite();
                instance.clearMode();
                return this;
            }

            /**
             * <pre>
             *多选 单选 参见Pb_MeetVote_SelType
             * </pre>
             *
             * <code>fixed32 type = 5;</code>
             */
            public int getType() {
                return instance.getType();
            }
            /**
             * <pre>
             *多选 单选 参见Pb_MeetVote_SelType
             * </pre>
             *
             * <code>fixed32 type = 5;</code>
             */
            public Builder setType(int value) {
                copyOnWrite();
                instance.setType(value);
                return this;
            }
            /**
             * <pre>
             *多选 单选 参见Pb_MeetVote_SelType
             * </pre>
             *
             * <code>fixed32 type = 5;</code>
             */
            public Builder clearType() {
                copyOnWrite();
                instance.clearType();
                return this;
            }

            /**
             * <pre>
             *投票状态 参见Pb_MeetVoteStatus
             * </pre>
             *
             * <code>fixed32 votestate = 6;</code>
             */
            public int getVotestate() {
                return instance.getVotestate();
            }
            /**
             * <pre>
             *投票状态 参见Pb_MeetVoteStatus
             * </pre>
             *
             * <code>fixed32 votestate = 6;</code>
             */
            public Builder setVotestate(int value) {
                copyOnWrite();
                instance.setVotestate(value);
                return this;
            }
            /**
             * <pre>
             *投票状态 参见Pb_MeetVoteStatus
             * </pre>
             *
             * <code>fixed32 votestate = 6;</code>
             */
            public Builder clearVotestate() {
                copyOnWrite();
                instance.clearVotestate();
                return this;
            }

            /**
             * <pre>
             *超时值
             * </pre>
             *
             * <code>fixed32 timeouts = 7;</code>
             */
            public int getTimeouts() {
                return instance.getTimeouts();
            }
            /**
             * <pre>
             *超时值
             * </pre>
             *
             * <code>fixed32 timeouts = 7;</code>
             */
            public Builder setTimeouts(int value) {
                copyOnWrite();
                instance.setTimeouts(value);
                return this;
            }
            /**
             * <pre>
             *超时值
             * </pre>
             *
             * <code>fixed32 timeouts = 7;</code>
             */
            public Builder clearTimeouts() {
                copyOnWrite();
                instance.clearTimeouts();
                return this;
            }

            /**
             * <pre>
             *有效选项
             * </pre>
             *
             * <code>fixed32 selectcount = 8;</code>
             */
            public int getSelectcount() {
                return instance.getSelectcount();
            }
            /**
             * <pre>
             *有效选项
             * </pre>
             *
             * <code>fixed32 selectcount = 8;</code>
             */
            public Builder setSelectcount(int value) {
                copyOnWrite();
                instance.setSelectcount(value);
                return this;
            }
            /**
             * <pre>
             *有效选项
             * </pre>
             *
             * <code>fixed32 selectcount = 8;</code>
             */
            public Builder clearSelectcount() {
                copyOnWrite();
                instance.clearSelectcount();
                return this;
            }

            /**
             * <pre>
             *选项描述文字
             * </pre>
             *
             * <code>repeated .pbui_SubItem_VoteItemInfo item = 9;</code>
             */
            public java.util.List<com.mogujie.tt.protobuf.InterfaceMain2.pbui_SubItem_VoteItemInfo> getItemList() {
                return java.util.Collections.unmodifiableList(
                        instance.getItemList());
            }
            /**
             * <pre>
             *选项描述文字
             * </pre>
             *
             * <code>repeated .pbui_SubItem_VoteItemInfo item = 9;</code>
             */
            public int getItemCount() {
                return instance.getItemCount();
            }/**
             * <pre>
             *选项描述文字
             * </pre>
             *
             * <code>repeated .pbui_SubItem_VoteItemInfo item = 9;</code>
             */
            public com.mogujie.tt.protobuf.InterfaceMain2.pbui_SubItem_VoteItemInfo getItem(int index) {
                return instance.getItem(index);
            }
            /**
             * <pre>
             *选项描述文字
             * </pre>
             *
             * <code>repeated .pbui_SubItem_VoteItemInfo item = 9;</code>
             */
            public Builder setItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_SubItem_VoteItemInfo value) {
                copyOnWrite();
                instance.setItem(index, value);
                return this;
            }
            /**
             * <pre>
             *选项描述文字
             * </pre>
             *
             * <code>repeated .pbui_SubItem_VoteItemInfo item = 9;</code>
             */
            public Builder setItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_SubItem_VoteItemInfo.Builder builderForValue) {
                copyOnWrite();
                instance.setItem(index, builderForValue);
                return this;
            }
            /**
             * <pre>
             *选项描述文字
             * </pre>
             *
             * <code>repeated .pbui_SubItem_VoteItemInfo item = 9;</code>
             */
            public Builder addItem(com.mogujie.tt.protobuf.InterfaceMain2.pbui_SubItem_VoteItemInfo value) {
                copyOnWrite();
                instance.addItem(value);
                return this;
            }
            /**
             * <pre>
             *选项描述文字
             * </pre>
             *
             * <code>repeated .pbui_SubItem_VoteItemInfo item = 9;</code>
             */
            public Builder addItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_SubItem_VoteItemInfo value) {
                copyOnWrite();
                instance.addItem(index, value);
                return this;
            }
            /**
             * <pre>
             *选项描述文字
             * </pre>
             *
             * <code>repeated .pbui_SubItem_VoteItemInfo item = 9;</code>
             */
            public Builder addItem(
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_SubItem_VoteItemInfo.Builder builderForValue) {
                copyOnWrite();
                instance.addItem(builderForValue);
                return this;
            }
            /**
             * <pre>
             *选项描述文字
             * </pre>
             *
             * <code>repeated .pbui_SubItem_VoteItemInfo item = 9;</code>
             */
            public Builder addItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_SubItem_VoteItemInfo.Builder builderForValue) {
                copyOnWrite();
                instance.addItem(index, builderForValue);
                return this;
            }
            /**
             * <pre>
             *选项描述文字
             * </pre>
             *
             * <code>repeated .pbui_SubItem_VoteItemInfo item = 9;</code>
             */
            public Builder addAllItem(
                    java.lang.Iterable<? extends com.mogujie.tt.protobuf.InterfaceMain2.pbui_SubItem_VoteItemInfo> values) {
                copyOnWrite();
                instance.addAllItem(values);
                return this;
            }
            /**
             * <pre>
             *选项描述文字
             * </pre>
             *
             * <code>repeated .pbui_SubItem_VoteItemInfo item = 9;</code>
             */
            public Builder clearItem() {
                copyOnWrite();
                instance.clearItem();
                return this;
            }
            /**
             * <pre>
             *选项描述文字
             * </pre>
             *
             * <code>repeated .pbui_SubItem_VoteItemInfo item = 9;</code>
             */
            public Builder removeItem(int index) {
                copyOnWrite();
                instance.removeItem(index);
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Item_MeetVoteDetailInfo)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteDetailInfo();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    item_.makeImmutable();
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteDetailInfo other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteDetailInfo) arg1;
                    voteid_ = visitor.visitInt(voteid_ != 0, voteid_,
                            other.voteid_ != 0, other.voteid_);
                    content_ = visitor.visitByteString(content_ != com.google.protobuf.ByteString.EMPTY, content_,
                            other.content_ != com.google.protobuf.ByteString.EMPTY, other.content_);
                    maintype_ = visitor.visitInt(maintype_ != 0, maintype_,
                            other.maintype_ != 0, other.maintype_);
                    mode_ = visitor.visitInt(mode_ != 0, mode_,
                            other.mode_ != 0, other.mode_);
                    type_ = visitor.visitInt(type_ != 0, type_,
                            other.type_ != 0, other.type_);
                    votestate_ = visitor.visitInt(votestate_ != 0, votestate_,
                            other.votestate_ != 0, other.votestate_);
                    timeouts_ = visitor.visitInt(timeouts_ != 0, timeouts_,
                            other.timeouts_ != 0, other.timeouts_);
                    selectcount_ = visitor.visitInt(selectcount_ != 0, selectcount_,
                            other.selectcount_ != 0, other.selectcount_);
                    item_= visitor.visitList(item_, other.item_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                        bitField0_ |= other.bitField0_;
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 13: {

                                    voteid_ = input.readFixed32();
                                    break;
                                }
                                case 18: {

                                    content_ = input.readBytes();
                                    break;
                                }
                                case 29: {

                                    maintype_ = input.readFixed32();
                                    break;
                                }
                                case 37: {

                                    mode_ = input.readFixed32();
                                    break;
                                }
                                case 45: {

                                    type_ = input.readFixed32();
                                    break;
                                }
                                case 53: {

                                    votestate_ = input.readFixed32();
                                    break;
                                }
                                case 61: {

                                    timeouts_ = input.readFixed32();
                                    break;
                                }
                                case 69: {

                                    selectcount_ = input.readFixed32();
                                    break;
                                }
                                case 74: {
                                    if (!item_.isModifiable()) {
                                        item_ =
                                                com.google.protobuf.GeneratedMessageLite.mutableCopy(item_);
                                    }
                                    item_.add(
                                            input.readMessage(com.mogujie.tt.protobuf.InterfaceMain2.pbui_SubItem_VoteItemInfo.parser(), extensionRegistry));
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteDetailInfo.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Item_MeetVoteDetailInfo)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteDetailInfo DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Item_MeetVoteDetailInfo();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteDetailInfo getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Item_MeetVoteDetailInfo> PARSER;

        public static com.google.protobuf.Parser<pbui_Item_MeetVoteDetailInfo> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Type_MeetVoteDetailInfoOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Type_MeetVoteDetailInfo)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <code>repeated .pbui_Item_MeetVoteDetailInfo item = 1;</code>
         */
        java.util.List<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteDetailInfo>
        getItemList();
        /**
         * <code>repeated .pbui_Item_MeetVoteDetailInfo item = 1;</code>
         */
        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteDetailInfo getItem(int index);
        /**
         * <code>repeated .pbui_Item_MeetVoteDetailInfo item = 1;</code>
         */
        int getItemCount();
    }
    /**
     * <pre>
     *type:Pb_TYPE_MEET_INTERFACE_MEETVOTEINFO
     *method: query
     * </pre>
     *
     * Protobuf type {@code pbui_Type_MeetVoteDetailInfo}
     */
    public  static final class pbui_Type_MeetVoteDetailInfo extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Type_MeetVoteDetailInfo, pbui_Type_MeetVoteDetailInfo.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Type_MeetVoteDetailInfo)
            pbui_Type_MeetVoteDetailInfoOrBuilder {
        private pbui_Type_MeetVoteDetailInfo() {
            item_ = emptyProtobufList();
        }
        public static final int ITEM_FIELD_NUMBER = 1;
        private com.google.protobuf.Internal.ProtobufList<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteDetailInfo> item_;
        /**
         * <code>repeated .pbui_Item_MeetVoteDetailInfo item = 1;</code>
         */
        public java.util.List<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteDetailInfo> getItemList() {
            return item_;
        }
        /**
         * <code>repeated .pbui_Item_MeetVoteDetailInfo item = 1;</code>
         */
        public java.util.List<? extends com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteDetailInfoOrBuilder>
        getItemOrBuilderList() {
            return item_;
        }
        /**
         * <code>repeated .pbui_Item_MeetVoteDetailInfo item = 1;</code>
         */
        public int getItemCount() {
            return item_.size();
        }
        /**
         * <code>repeated .pbui_Item_MeetVoteDetailInfo item = 1;</code>
         */
        public com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteDetailInfo getItem(int index) {
            return item_.get(index);
        }
        /**
         * <code>repeated .pbui_Item_MeetVoteDetailInfo item = 1;</code>
         */
        public com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteDetailInfoOrBuilder getItemOrBuilder(
                int index) {
            return item_.get(index);
        }
        private void ensureItemIsMutable() {
            if (!item_.isModifiable()) {
                item_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(item_);
            }
        }

        /**
         * <code>repeated .pbui_Item_MeetVoteDetailInfo item = 1;</code>
         */
        private void setItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteDetailInfo value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensureItemIsMutable();
            item_.set(index, value);
        }
        /**
         * <code>repeated .pbui_Item_MeetVoteDetailInfo item = 1;</code>
         */
        private void setItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteDetailInfo.Builder builderForValue) {
            ensureItemIsMutable();
            item_.set(index, builderForValue.build());
        }
        /**
         * <code>repeated .pbui_Item_MeetVoteDetailInfo item = 1;</code>
         */
        private void addItem(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteDetailInfo value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensureItemIsMutable();
            item_.add(value);
        }
        /**
         * <code>repeated .pbui_Item_MeetVoteDetailInfo item = 1;</code>
         */
        private void addItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteDetailInfo value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensureItemIsMutable();
            item_.add(index, value);
        }
        /**
         * <code>repeated .pbui_Item_MeetVoteDetailInfo item = 1;</code>
         */
        private void addItem(
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteDetailInfo.Builder builderForValue) {
            ensureItemIsMutable();
            item_.add(builderForValue.build());
        }
        /**
         * <code>repeated .pbui_Item_MeetVoteDetailInfo item = 1;</code>
         */
        private void addItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteDetailInfo.Builder builderForValue) {
            ensureItemIsMutable();
            item_.add(index, builderForValue.build());
        }
        /**
         * <code>repeated .pbui_Item_MeetVoteDetailInfo item = 1;</code>
         */
        private void addAllItem(
                java.lang.Iterable<? extends com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteDetailInfo> values) {
            ensureItemIsMutable();
            com.google.protobuf.AbstractMessageLite.addAll(
                    values, item_);
        }
        /**
         * <code>repeated .pbui_Item_MeetVoteDetailInfo item = 1;</code>
         */
        private void clearItem() {
            item_ = emptyProtobufList();
        }
        /**
         * <code>repeated .pbui_Item_MeetVoteDetailInfo item = 1;</code>
         */
        private void removeItem(int index) {
            ensureItemIsMutable();
            item_.remove(index);
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            for (int i = 0; i < item_.size(); i++) {
                output.writeMessage(1, item_.get(i));
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            for (int i = 0; i < item_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, item_.get(i));
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteDetailInfo parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteDetailInfo parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteDetailInfo parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteDetailInfo parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteDetailInfo parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteDetailInfo parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteDetailInfo parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteDetailInfo parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteDetailInfo parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteDetailInfo parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteDetailInfo parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteDetailInfo parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteDetailInfo prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *type:Pb_TYPE_MEET_INTERFACE_MEETVOTEINFO
         *method: query
         * </pre>
         *
         * Protobuf type {@code pbui_Type_MeetVoteDetailInfo}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteDetailInfo, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Type_MeetVoteDetailInfo)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteDetailInfoOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteDetailInfo.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <code>repeated .pbui_Item_MeetVoteDetailInfo item = 1;</code>
             */
            public java.util.List<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteDetailInfo> getItemList() {
                return java.util.Collections.unmodifiableList(
                        instance.getItemList());
            }
            /**
             * <code>repeated .pbui_Item_MeetVoteDetailInfo item = 1;</code>
             */
            public int getItemCount() {
                return instance.getItemCount();
            }/**
             * <code>repeated .pbui_Item_MeetVoteDetailInfo item = 1;</code>
             */
            public com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteDetailInfo getItem(int index) {
                return instance.getItem(index);
            }
            /**
             * <code>repeated .pbui_Item_MeetVoteDetailInfo item = 1;</code>
             */
            public Builder setItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteDetailInfo value) {
                copyOnWrite();
                instance.setItem(index, value);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetVoteDetailInfo item = 1;</code>
             */
            public Builder setItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteDetailInfo.Builder builderForValue) {
                copyOnWrite();
                instance.setItem(index, builderForValue);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetVoteDetailInfo item = 1;</code>
             */
            public Builder addItem(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteDetailInfo value) {
                copyOnWrite();
                instance.addItem(value);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetVoteDetailInfo item = 1;</code>
             */
            public Builder addItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteDetailInfo value) {
                copyOnWrite();
                instance.addItem(index, value);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetVoteDetailInfo item = 1;</code>
             */
            public Builder addItem(
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteDetailInfo.Builder builderForValue) {
                copyOnWrite();
                instance.addItem(builderForValue);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetVoteDetailInfo item = 1;</code>
             */
            public Builder addItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteDetailInfo.Builder builderForValue) {
                copyOnWrite();
                instance.addItem(index, builderForValue);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetVoteDetailInfo item = 1;</code>
             */
            public Builder addAllItem(
                    java.lang.Iterable<? extends com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteDetailInfo> values) {
                copyOnWrite();
                instance.addAllItem(values);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetVoteDetailInfo item = 1;</code>
             */
            public Builder clearItem() {
                copyOnWrite();
                instance.clearItem();
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetVoteDetailInfo item = 1;</code>
             */
            public Builder removeItem(int index) {
                copyOnWrite();
                instance.removeItem(index);
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Type_MeetVoteDetailInfo)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteDetailInfo();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    item_.makeImmutable();
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteDetailInfo other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteDetailInfo) arg1;
                    item_= visitor.visitList(item_, other.item_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 10: {
                                    if (!item_.isModifiable()) {
                                        item_ =
                                                com.google.protobuf.GeneratedMessageLite.mutableCopy(item_);
                                    }
                                    item_.add(
                                            input.readMessage(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteDetailInfo.parser(), extensionRegistry));
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteDetailInfo.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Type_MeetVoteDetailInfo)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteDetailInfo DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Type_MeetVoteDetailInfo();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteDetailInfo getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Type_MeetVoteDetailInfo> PARSER;

        public static com.google.protobuf.Parser<pbui_Type_MeetVoteDetailInfo> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Type_MeetVoteComplexQueryOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Type_MeetVoteComplexQuery)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <pre>
         *指定大类 参见本文件中的maintype 定义
         * </pre>
         *
         * <code>fixed32 maintype = 1;</code>
         */
        int getMaintype();
    }
    /**
     * <pre>
     *type:Pb_TYPE_MEET_INTERFACE_MEETVOTEINFO
     *method: complexquery
     * </pre>
     *
     * Protobuf type {@code pbui_Type_MeetVoteComplexQuery}
     */
    public  static final class pbui_Type_MeetVoteComplexQuery extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Type_MeetVoteComplexQuery, pbui_Type_MeetVoteComplexQuery.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Type_MeetVoteComplexQuery)
            pbui_Type_MeetVoteComplexQueryOrBuilder {
        private pbui_Type_MeetVoteComplexQuery() {
        }
        public static final int MAINTYPE_FIELD_NUMBER = 1;
        private int maintype_;
        /**
         * <pre>
         *指定大类 参见本文件中的maintype 定义
         * </pre>
         *
         * <code>fixed32 maintype = 1;</code>
         */
        public int getMaintype() {
            return maintype_;
        }
        /**
         * <pre>
         *指定大类 参见本文件中的maintype 定义
         * </pre>
         *
         * <code>fixed32 maintype = 1;</code>
         */
        private void setMaintype(int value) {

            maintype_ = value;
        }
        /**
         * <pre>
         *指定大类 参见本文件中的maintype 定义
         * </pre>
         *
         * <code>fixed32 maintype = 1;</code>
         */
        private void clearMaintype() {

            maintype_ = 0;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (maintype_ != 0) {
                output.writeFixed32(1, maintype_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (maintype_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(1, maintype_);
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteComplexQuery parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteComplexQuery parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteComplexQuery parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteComplexQuery parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteComplexQuery parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteComplexQuery parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteComplexQuery parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteComplexQuery parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteComplexQuery parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteComplexQuery parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteComplexQuery parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteComplexQuery parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteComplexQuery prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *type:Pb_TYPE_MEET_INTERFACE_MEETVOTEINFO
         *method: complexquery
         * </pre>
         *
         * Protobuf type {@code pbui_Type_MeetVoteComplexQuery}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteComplexQuery, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Type_MeetVoteComplexQuery)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteComplexQueryOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteComplexQuery.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <pre>
             *指定大类 参见本文件中的maintype 定义
             * </pre>
             *
             * <code>fixed32 maintype = 1;</code>
             */
            public int getMaintype() {
                return instance.getMaintype();
            }
            /**
             * <pre>
             *指定大类 参见本文件中的maintype 定义
             * </pre>
             *
             * <code>fixed32 maintype = 1;</code>
             */
            public Builder setMaintype(int value) {
                copyOnWrite();
                instance.setMaintype(value);
                return this;
            }
            /**
             * <pre>
             *指定大类 参见本文件中的maintype 定义
             * </pre>
             *
             * <code>fixed32 maintype = 1;</code>
             */
            public Builder clearMaintype() {
                copyOnWrite();
                instance.clearMaintype();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Type_MeetVoteComplexQuery)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteComplexQuery();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteComplexQuery other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteComplexQuery) arg1;
                    maintype_ = visitor.visitInt(maintype_ != 0, maintype_,
                            other.maintype_ != 0, other.maintype_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 13: {

                                    maintype_ = input.readFixed32();
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteComplexQuery.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Type_MeetVoteComplexQuery)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteComplexQuery DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Type_MeetVoteComplexQuery();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteComplexQuery getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Type_MeetVoteComplexQuery> PARSER;

        public static com.google.protobuf.Parser<pbui_Type_MeetVoteComplexQuery> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Item_MeetVoteSignInDetailInfoOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Item_MeetVoteSignInDetailInfo)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <pre>
         *投票人员
         * </pre>
         *
         * <code>fixed32 id = 1;</code>
         */
        int getId();

        /**
         * <pre>
         *投票选项 0x00000001 选择了第一项 0x00000002第二项 对应项位置1表示选择
         * </pre>
         *
         * <code>fixed32 selcnt = 2;</code>
         */
        int getSelcnt();
    }
    /**
     * <pre>
     *会议投票人
     * </pre>
     *
     * Protobuf type {@code pbui_Item_MeetVoteSignInDetailInfo}
     */
    public  static final class pbui_Item_MeetVoteSignInDetailInfo extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Item_MeetVoteSignInDetailInfo, pbui_Item_MeetVoteSignInDetailInfo.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Item_MeetVoteSignInDetailInfo)
            pbui_Item_MeetVoteSignInDetailInfoOrBuilder {
        private pbui_Item_MeetVoteSignInDetailInfo() {
        }
        public static final int ID_FIELD_NUMBER = 1;
        private int id_;
        /**
         * <pre>
         *投票人员
         * </pre>
         *
         * <code>fixed32 id = 1;</code>
         */
        public int getId() {
            return id_;
        }
        /**
         * <pre>
         *投票人员
         * </pre>
         *
         * <code>fixed32 id = 1;</code>
         */
        private void setId(int value) {

            id_ = value;
        }
        /**
         * <pre>
         *投票人员
         * </pre>
         *
         * <code>fixed32 id = 1;</code>
         */
        private void clearId() {

            id_ = 0;
        }

        public static final int SELCNT_FIELD_NUMBER = 2;
        private int selcnt_;
        /**
         * <pre>
         *投票选项 0x00000001 选择了第一项 0x00000002第二项 对应项位置1表示选择
         * </pre>
         *
         * <code>fixed32 selcnt = 2;</code>
         */
        public int getSelcnt() {
            return selcnt_;
        }
        /**
         * <pre>
         *投票选项 0x00000001 选择了第一项 0x00000002第二项 对应项位置1表示选择
         * </pre>
         *
         * <code>fixed32 selcnt = 2;</code>
         */
        private void setSelcnt(int value) {

            selcnt_ = value;
        }
        /**
         * <pre>
         *投票选项 0x00000001 选择了第一项 0x00000002第二项 对应项位置1表示选择
         * </pre>
         *
         * <code>fixed32 selcnt = 2;</code>
         */
        private void clearSelcnt() {

            selcnt_ = 0;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (id_ != 0) {
                output.writeFixed32(1, id_);
            }
            if (selcnt_ != 0) {
                output.writeFixed32(2, selcnt_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (id_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(1, id_);
            }
            if (selcnt_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(2, selcnt_);
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteSignInDetailInfo parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteSignInDetailInfo parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteSignInDetailInfo parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteSignInDetailInfo parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteSignInDetailInfo parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteSignInDetailInfo parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteSignInDetailInfo parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteSignInDetailInfo parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteSignInDetailInfo parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteSignInDetailInfo parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteSignInDetailInfo parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteSignInDetailInfo parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteSignInDetailInfo prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *会议投票人
         * </pre>
         *
         * Protobuf type {@code pbui_Item_MeetVoteSignInDetailInfo}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteSignInDetailInfo, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Item_MeetVoteSignInDetailInfo)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteSignInDetailInfoOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteSignInDetailInfo.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <pre>
             *投票人员
             * </pre>
             *
             * <code>fixed32 id = 1;</code>
             */
            public int getId() {
                return instance.getId();
            }
            /**
             * <pre>
             *投票人员
             * </pre>
             *
             * <code>fixed32 id = 1;</code>
             */
            public Builder setId(int value) {
                copyOnWrite();
                instance.setId(value);
                return this;
            }
            /**
             * <pre>
             *投票人员
             * </pre>
             *
             * <code>fixed32 id = 1;</code>
             */
            public Builder clearId() {
                copyOnWrite();
                instance.clearId();
                return this;
            }

            /**
             * <pre>
             *投票选项 0x00000001 选择了第一项 0x00000002第二项 对应项位置1表示选择
             * </pre>
             *
             * <code>fixed32 selcnt = 2;</code>
             */
            public int getSelcnt() {
                return instance.getSelcnt();
            }
            /**
             * <pre>
             *投票选项 0x00000001 选择了第一项 0x00000002第二项 对应项位置1表示选择
             * </pre>
             *
             * <code>fixed32 selcnt = 2;</code>
             */
            public Builder setSelcnt(int value) {
                copyOnWrite();
                instance.setSelcnt(value);
                return this;
            }
            /**
             * <pre>
             *投票选项 0x00000001 选择了第一项 0x00000002第二项 对应项位置1表示选择
             * </pre>
             *
             * <code>fixed32 selcnt = 2;</code>
             */
            public Builder clearSelcnt() {
                copyOnWrite();
                instance.clearSelcnt();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Item_MeetVoteSignInDetailInfo)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteSignInDetailInfo();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteSignInDetailInfo other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteSignInDetailInfo) arg1;
                    id_ = visitor.visitInt(id_ != 0, id_,
                            other.id_ != 0, other.id_);
                    selcnt_ = visitor.visitInt(selcnt_ != 0, selcnt_,
                            other.selcnt_ != 0, other.selcnt_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 13: {

                                    id_ = input.readFixed32();
                                    break;
                                }
                                case 21: {

                                    selcnt_ = input.readFixed32();
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteSignInDetailInfo.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Item_MeetVoteSignInDetailInfo)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteSignInDetailInfo DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Item_MeetVoteSignInDetailInfo();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteSignInDetailInfo getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Item_MeetVoteSignInDetailInfo> PARSER;

        public static com.google.protobuf.Parser<pbui_Item_MeetVoteSignInDetailInfo> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Type_MeetVoteSignInDetailInfoOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Type_MeetVoteSignInDetailInfo)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <code>fixed32 voteid = 1;</code>
         */
        int getVoteid();

        /**
         * <code>repeated .pbui_Item_MeetVoteSignInDetailInfo item = 2;</code>
         */
        java.util.List<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteSignInDetailInfo>
        getItemList();
        /**
         * <code>repeated .pbui_Item_MeetVoteSignInDetailInfo item = 2;</code>
         */
        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteSignInDetailInfo getItem(int index);
        /**
         * <code>repeated .pbui_Item_MeetVoteSignInDetailInfo item = 2;</code>
         */
        int getItemCount();
    }
    /**
     * <pre>
     *type:Pb_TYPE_MEET_INTERFACE_MEETVOTESIGNED
     *method: query
     * </pre>
     *
     * Protobuf type {@code pbui_Type_MeetVoteSignInDetailInfo}
     */
    public  static final class pbui_Type_MeetVoteSignInDetailInfo extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Type_MeetVoteSignInDetailInfo, pbui_Type_MeetVoteSignInDetailInfo.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Type_MeetVoteSignInDetailInfo)
            pbui_Type_MeetVoteSignInDetailInfoOrBuilder {
        private pbui_Type_MeetVoteSignInDetailInfo() {
            item_ = emptyProtobufList();
        }
        private int bitField0_;
        public static final int VOTEID_FIELD_NUMBER = 1;
        private int voteid_;
        /**
         * <code>fixed32 voteid = 1;</code>
         */
        public int getVoteid() {
            return voteid_;
        }
        /**
         * <code>fixed32 voteid = 1;</code>
         */
        private void setVoteid(int value) {

            voteid_ = value;
        }
        /**
         * <code>fixed32 voteid = 1;</code>
         */
        private void clearVoteid() {

            voteid_ = 0;
        }

        public static final int ITEM_FIELD_NUMBER = 2;
        private com.google.protobuf.Internal.ProtobufList<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteSignInDetailInfo> item_;
        /**
         * <code>repeated .pbui_Item_MeetVoteSignInDetailInfo item = 2;</code>
         */
        public java.util.List<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteSignInDetailInfo> getItemList() {
            return item_;
        }
        /**
         * <code>repeated .pbui_Item_MeetVoteSignInDetailInfo item = 2;</code>
         */
        public java.util.List<? extends com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteSignInDetailInfoOrBuilder>
        getItemOrBuilderList() {
            return item_;
        }
        /**
         * <code>repeated .pbui_Item_MeetVoteSignInDetailInfo item = 2;</code>
         */
        public int getItemCount() {
            return item_.size();
        }
        /**
         * <code>repeated .pbui_Item_MeetVoteSignInDetailInfo item = 2;</code>
         */
        public com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteSignInDetailInfo getItem(int index) {
            return item_.get(index);
        }
        /**
         * <code>repeated .pbui_Item_MeetVoteSignInDetailInfo item = 2;</code>
         */
        public com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteSignInDetailInfoOrBuilder getItemOrBuilder(
                int index) {
            return item_.get(index);
        }
        private void ensureItemIsMutable() {
            if (!item_.isModifiable()) {
                item_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(item_);
            }
        }

        /**
         * <code>repeated .pbui_Item_MeetVoteSignInDetailInfo item = 2;</code>
         */
        private void setItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteSignInDetailInfo value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensureItemIsMutable();
            item_.set(index, value);
        }
        /**
         * <code>repeated .pbui_Item_MeetVoteSignInDetailInfo item = 2;</code>
         */
        private void setItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteSignInDetailInfo.Builder builderForValue) {
            ensureItemIsMutable();
            item_.set(index, builderForValue.build());
        }
        /**
         * <code>repeated .pbui_Item_MeetVoteSignInDetailInfo item = 2;</code>
         */
        private void addItem(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteSignInDetailInfo value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensureItemIsMutable();
            item_.add(value);
        }
        /**
         * <code>repeated .pbui_Item_MeetVoteSignInDetailInfo item = 2;</code>
         */
        private void addItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteSignInDetailInfo value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensureItemIsMutable();
            item_.add(index, value);
        }
        /**
         * <code>repeated .pbui_Item_MeetVoteSignInDetailInfo item = 2;</code>
         */
        private void addItem(
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteSignInDetailInfo.Builder builderForValue) {
            ensureItemIsMutable();
            item_.add(builderForValue.build());
        }
        /**
         * <code>repeated .pbui_Item_MeetVoteSignInDetailInfo item = 2;</code>
         */
        private void addItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteSignInDetailInfo.Builder builderForValue) {
            ensureItemIsMutable();
            item_.add(index, builderForValue.build());
        }
        /**
         * <code>repeated .pbui_Item_MeetVoteSignInDetailInfo item = 2;</code>
         */
        private void addAllItem(
                java.lang.Iterable<? extends com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteSignInDetailInfo> values) {
            ensureItemIsMutable();
            com.google.protobuf.AbstractMessageLite.addAll(
                    values, item_);
        }
        /**
         * <code>repeated .pbui_Item_MeetVoteSignInDetailInfo item = 2;</code>
         */
        private void clearItem() {
            item_ = emptyProtobufList();
        }
        /**
         * <code>repeated .pbui_Item_MeetVoteSignInDetailInfo item = 2;</code>
         */
        private void removeItem(int index) {
            ensureItemIsMutable();
            item_.remove(index);
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (voteid_ != 0) {
                output.writeFixed32(1, voteid_);
            }
            for (int i = 0; i < item_.size(); i++) {
                output.writeMessage(2, item_.get(i));
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (voteid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(1, voteid_);
            }
            for (int i = 0; i < item_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(2, item_.get(i));
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteSignInDetailInfo parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteSignInDetailInfo parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteSignInDetailInfo parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteSignInDetailInfo parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteSignInDetailInfo parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteSignInDetailInfo parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteSignInDetailInfo parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteSignInDetailInfo parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteSignInDetailInfo parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteSignInDetailInfo parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteSignInDetailInfo parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteSignInDetailInfo parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteSignInDetailInfo prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *type:Pb_TYPE_MEET_INTERFACE_MEETVOTESIGNED
         *method: query
         * </pre>
         *
         * Protobuf type {@code pbui_Type_MeetVoteSignInDetailInfo}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteSignInDetailInfo, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Type_MeetVoteSignInDetailInfo)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteSignInDetailInfoOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteSignInDetailInfo.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <code>fixed32 voteid = 1;</code>
             */
            public int getVoteid() {
                return instance.getVoteid();
            }
            /**
             * <code>fixed32 voteid = 1;</code>
             */
            public Builder setVoteid(int value) {
                copyOnWrite();
                instance.setVoteid(value);
                return this;
            }
            /**
             * <code>fixed32 voteid = 1;</code>
             */
            public Builder clearVoteid() {
                copyOnWrite();
                instance.clearVoteid();
                return this;
            }

            /**
             * <code>repeated .pbui_Item_MeetVoteSignInDetailInfo item = 2;</code>
             */
            public java.util.List<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteSignInDetailInfo> getItemList() {
                return java.util.Collections.unmodifiableList(
                        instance.getItemList());
            }
            /**
             * <code>repeated .pbui_Item_MeetVoteSignInDetailInfo item = 2;</code>
             */
            public int getItemCount() {
                return instance.getItemCount();
            }/**
             * <code>repeated .pbui_Item_MeetVoteSignInDetailInfo item = 2;</code>
             */
            public com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteSignInDetailInfo getItem(int index) {
                return instance.getItem(index);
            }
            /**
             * <code>repeated .pbui_Item_MeetVoteSignInDetailInfo item = 2;</code>
             */
            public Builder setItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteSignInDetailInfo value) {
                copyOnWrite();
                instance.setItem(index, value);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetVoteSignInDetailInfo item = 2;</code>
             */
            public Builder setItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteSignInDetailInfo.Builder builderForValue) {
                copyOnWrite();
                instance.setItem(index, builderForValue);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetVoteSignInDetailInfo item = 2;</code>
             */
            public Builder addItem(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteSignInDetailInfo value) {
                copyOnWrite();
                instance.addItem(value);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetVoteSignInDetailInfo item = 2;</code>
             */
            public Builder addItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteSignInDetailInfo value) {
                copyOnWrite();
                instance.addItem(index, value);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetVoteSignInDetailInfo item = 2;</code>
             */
            public Builder addItem(
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteSignInDetailInfo.Builder builderForValue) {
                copyOnWrite();
                instance.addItem(builderForValue);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetVoteSignInDetailInfo item = 2;</code>
             */
            public Builder addItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteSignInDetailInfo.Builder builderForValue) {
                copyOnWrite();
                instance.addItem(index, builderForValue);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetVoteSignInDetailInfo item = 2;</code>
             */
            public Builder addAllItem(
                    java.lang.Iterable<? extends com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteSignInDetailInfo> values) {
                copyOnWrite();
                instance.addAllItem(values);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetVoteSignInDetailInfo item = 2;</code>
             */
            public Builder clearItem() {
                copyOnWrite();
                instance.clearItem();
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetVoteSignInDetailInfo item = 2;</code>
             */
            public Builder removeItem(int index) {
                copyOnWrite();
                instance.removeItem(index);
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Type_MeetVoteSignInDetailInfo)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteSignInDetailInfo();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    item_.makeImmutable();
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteSignInDetailInfo other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteSignInDetailInfo) arg1;
                    voteid_ = visitor.visitInt(voteid_ != 0, voteid_,
                            other.voteid_ != 0, other.voteid_);
                    item_= visitor.visitList(item_, other.item_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                        bitField0_ |= other.bitField0_;
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 13: {

                                    voteid_ = input.readFixed32();
                                    break;
                                }
                                case 18: {
                                    if (!item_.isModifiable()) {
                                        item_ =
                                                com.google.protobuf.GeneratedMessageLite.mutableCopy(item_);
                                    }
                                    item_.add(
                                            input.readMessage(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetVoteSignInDetailInfo.parser(), extensionRegistry));
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteSignInDetailInfo.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Type_MeetVoteSignInDetailInfo)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteSignInDetailInfo DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Type_MeetVoteSignInDetailInfo();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteSignInDetailInfo getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Type_MeetVoteSignInDetailInfo> PARSER;

        public static com.google.protobuf.Parser<pbui_Type_MeetVoteSignInDetailInfo> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Type_MeetVoteQueryPropertyOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Type_MeetVoteQueryProperty)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <pre>
         *数据ID
         * </pre>
         *
         * <code>fixed32 propertyid = 1;</code>
         */
        int getPropertyid();

        /**
         * <pre>
         *传入参数
         * </pre>
         *
         * <code>fixed32 voteid = 2;</code>
         */
        int getVoteid();

        /**
         * <pre>
         *传入参数 为0表示本身
         * </pre>
         *
         * <code>fixed32 memberid = 3;</code>
         */
        int getMemberid();
    }
    /**
     * <pre>
     *查询会议投票人属性信息
     *call
     *type:Pb_TYPE_MEET_INTERFACE_MEETVOTESIGNED
     *method: queryproperty
     * </pre>
     *
     * Protobuf type {@code pbui_Type_MeetVoteQueryProperty}
     */
    public  static final class pbui_Type_MeetVoteQueryProperty extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Type_MeetVoteQueryProperty, pbui_Type_MeetVoteQueryProperty.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Type_MeetVoteQueryProperty)
            pbui_Type_MeetVoteQueryPropertyOrBuilder {
        private pbui_Type_MeetVoteQueryProperty() {
        }
        public static final int PROPERTYID_FIELD_NUMBER = 1;
        private int propertyid_;
        /**
         * <pre>
         *数据ID
         * </pre>
         *
         * <code>fixed32 propertyid = 1;</code>
         */
        public int getPropertyid() {
            return propertyid_;
        }
        /**
         * <pre>
         *数据ID
         * </pre>
         *
         * <code>fixed32 propertyid = 1;</code>
         */
        private void setPropertyid(int value) {

            propertyid_ = value;
        }
        /**
         * <pre>
         *数据ID
         * </pre>
         *
         * <code>fixed32 propertyid = 1;</code>
         */
        private void clearPropertyid() {

            propertyid_ = 0;
        }

        public static final int VOTEID_FIELD_NUMBER = 2;
        private int voteid_;
        /**
         * <pre>
         *传入参数
         * </pre>
         *
         * <code>fixed32 voteid = 2;</code>
         */
        public int getVoteid() {
            return voteid_;
        }
        /**
         * <pre>
         *传入参数
         * </pre>
         *
         * <code>fixed32 voteid = 2;</code>
         */
        private void setVoteid(int value) {

            voteid_ = value;
        }
        /**
         * <pre>
         *传入参数
         * </pre>
         *
         * <code>fixed32 voteid = 2;</code>
         */
        private void clearVoteid() {

            voteid_ = 0;
        }

        public static final int MEMBERID_FIELD_NUMBER = 3;
        private int memberid_;
        /**
         * <pre>
         *传入参数 为0表示本身
         * </pre>
         *
         * <code>fixed32 memberid = 3;</code>
         */
        public int getMemberid() {
            return memberid_;
        }
        /**
         * <pre>
         *传入参数 为0表示本身
         * </pre>
         *
         * <code>fixed32 memberid = 3;</code>
         */
        private void setMemberid(int value) {

            memberid_ = value;
        }
        /**
         * <pre>
         *传入参数 为0表示本身
         * </pre>
         *
         * <code>fixed32 memberid = 3;</code>
         */
        private void clearMemberid() {

            memberid_ = 0;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (propertyid_ != 0) {
                output.writeFixed32(1, propertyid_);
            }
            if (voteid_ != 0) {
                output.writeFixed32(2, voteid_);
            }
            if (memberid_ != 0) {
                output.writeFixed32(3, memberid_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (propertyid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(1, propertyid_);
            }
            if (voteid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(2, voteid_);
            }
            if (memberid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(3, memberid_);
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteQueryProperty parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteQueryProperty parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteQueryProperty parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteQueryProperty parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteQueryProperty parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteQueryProperty parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteQueryProperty parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteQueryProperty parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteQueryProperty parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteQueryProperty parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteQueryProperty parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteQueryProperty parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteQueryProperty prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *查询会议投票人属性信息
         *call
         *type:Pb_TYPE_MEET_INTERFACE_MEETVOTESIGNED
         *method: queryproperty
         * </pre>
         *
         * Protobuf type {@code pbui_Type_MeetVoteQueryProperty}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteQueryProperty, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Type_MeetVoteQueryProperty)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteQueryPropertyOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteQueryProperty.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <pre>
             *数据ID
             * </pre>
             *
             * <code>fixed32 propertyid = 1;</code>
             */
            public int getPropertyid() {
                return instance.getPropertyid();
            }
            /**
             * <pre>
             *数据ID
             * </pre>
             *
             * <code>fixed32 propertyid = 1;</code>
             */
            public Builder setPropertyid(int value) {
                copyOnWrite();
                instance.setPropertyid(value);
                return this;
            }
            /**
             * <pre>
             *数据ID
             * </pre>
             *
             * <code>fixed32 propertyid = 1;</code>
             */
            public Builder clearPropertyid() {
                copyOnWrite();
                instance.clearPropertyid();
                return this;
            }

            /**
             * <pre>
             *传入参数
             * </pre>
             *
             * <code>fixed32 voteid = 2;</code>
             */
            public int getVoteid() {
                return instance.getVoteid();
            }
            /**
             * <pre>
             *传入参数
             * </pre>
             *
             * <code>fixed32 voteid = 2;</code>
             */
            public Builder setVoteid(int value) {
                copyOnWrite();
                instance.setVoteid(value);
                return this;
            }
            /**
             * <pre>
             *传入参数
             * </pre>
             *
             * <code>fixed32 voteid = 2;</code>
             */
            public Builder clearVoteid() {
                copyOnWrite();
                instance.clearVoteid();
                return this;
            }

            /**
             * <pre>
             *传入参数 为0表示本身
             * </pre>
             *
             * <code>fixed32 memberid = 3;</code>
             */
            public int getMemberid() {
                return instance.getMemberid();
            }
            /**
             * <pre>
             *传入参数 为0表示本身
             * </pre>
             *
             * <code>fixed32 memberid = 3;</code>
             */
            public Builder setMemberid(int value) {
                copyOnWrite();
                instance.setMemberid(value);
                return this;
            }
            /**
             * <pre>
             *传入参数 为0表示本身
             * </pre>
             *
             * <code>fixed32 memberid = 3;</code>
             */
            public Builder clearMemberid() {
                copyOnWrite();
                instance.clearMemberid();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Type_MeetVoteQueryProperty)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteQueryProperty();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteQueryProperty other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteQueryProperty) arg1;
                    propertyid_ = visitor.visitInt(propertyid_ != 0, propertyid_,
                            other.propertyid_ != 0, other.propertyid_);
                    voteid_ = visitor.visitInt(voteid_ != 0, voteid_,
                            other.voteid_ != 0, other.voteid_);
                    memberid_ = visitor.visitInt(memberid_ != 0, memberid_,
                            other.memberid_ != 0, other.memberid_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 13: {

                                    propertyid_ = input.readFixed32();
                                    break;
                                }
                                case 21: {

                                    voteid_ = input.readFixed32();
                                    break;
                                }
                                case 29: {

                                    memberid_ = input.readFixed32();
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteQueryProperty.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Type_MeetVoteQueryProperty)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteQueryProperty DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Type_MeetVoteQueryProperty();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetVoteQueryProperty getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Type_MeetVoteQueryProperty> PARSER;

        public static com.google.protobuf.Parser<pbui_Type_MeetVoteQueryProperty> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Item_MeetSignInDetailInfoOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Item_MeetSignInDetailInfo)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <pre>
         *人员ID
         * </pre>
         *
         * <code>fixed32 nameId = 1;</code>
         */
        int getNameId();

        /**
         * <pre>
         *日期 时间 单位:秒
         * </pre>
         *
         * <code>fixed64 utcseconds = 2;</code>
         */
        long getUtcseconds();

        /**
         * <pre>
         *签到方式 参见Pb_MeetSignType
         * </pre>
         *
         * <code>fixed32 signin_type = 3;</code>
         */
        int getSigninType();

        /**
         * <pre>
         *签到密码
         * </pre>
         *
         * <code>bytes password = 4;</code>
         */
        com.google.protobuf.ByteString getPassword();

        /**
         * <pre>
         *如果有图片签到则为png图片数据(二进制转hex编码)
         * </pre>
         *
         * <code>bytes psigndata = 5;</code>
         */
        com.google.protobuf.ByteString getPsigndata();
    }
    /**
     * <pre>
     *会议签到
     * </pre>
     *
     * Protobuf type {@code pbui_Item_MeetSignInDetailInfo}
     */
    public  static final class pbui_Item_MeetSignInDetailInfo extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Item_MeetSignInDetailInfo, pbui_Item_MeetSignInDetailInfo.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Item_MeetSignInDetailInfo)
            pbui_Item_MeetSignInDetailInfoOrBuilder {
        private pbui_Item_MeetSignInDetailInfo() {
            password_ = com.google.protobuf.ByteString.EMPTY;
            psigndata_ = com.google.protobuf.ByteString.EMPTY;
        }
        public static final int NAMEID_FIELD_NUMBER = 1;
        private int nameId_;
        /**
         * <pre>
         *人员ID
         * </pre>
         *
         * <code>fixed32 nameId = 1;</code>
         */
        public int getNameId() {
            return nameId_;
        }
        /**
         * <pre>
         *人员ID
         * </pre>
         *
         * <code>fixed32 nameId = 1;</code>
         */
        private void setNameId(int value) {

            nameId_ = value;
        }
        /**
         * <pre>
         *人员ID
         * </pre>
         *
         * <code>fixed32 nameId = 1;</code>
         */
        private void clearNameId() {

            nameId_ = 0;
        }

        public static final int UTCSECONDS_FIELD_NUMBER = 2;
        private long utcseconds_;
        /**
         * <pre>
         *日期 时间 单位:秒
         * </pre>
         *
         * <code>fixed64 utcseconds = 2;</code>
         */
        public long getUtcseconds() {
            return utcseconds_;
        }
        /**
         * <pre>
         *日期 时间 单位:秒
         * </pre>
         *
         * <code>fixed64 utcseconds = 2;</code>
         */
        private void setUtcseconds(long value) {

            utcseconds_ = value;
        }
        /**
         * <pre>
         *日期 时间 单位:秒
         * </pre>
         *
         * <code>fixed64 utcseconds = 2;</code>
         */
        private void clearUtcseconds() {

            utcseconds_ = 0L;
        }

        public static final int SIGNIN_TYPE_FIELD_NUMBER = 3;
        private int signinType_;
        /**
         * <pre>
         *签到方式 参见Pb_MeetSignType
         * </pre>
         *
         * <code>fixed32 signin_type = 3;</code>
         */
        public int getSigninType() {
            return signinType_;
        }
        /**
         * <pre>
         *签到方式 参见Pb_MeetSignType
         * </pre>
         *
         * <code>fixed32 signin_type = 3;</code>
         */
        private void setSigninType(int value) {

            signinType_ = value;
        }
        /**
         * <pre>
         *签到方式 参见Pb_MeetSignType
         * </pre>
         *
         * <code>fixed32 signin_type = 3;</code>
         */
        private void clearSigninType() {

            signinType_ = 0;
        }

        public static final int PASSWORD_FIELD_NUMBER = 4;
        private com.google.protobuf.ByteString password_;
        /**
         * <pre>
         *签到密码
         * </pre>
         *
         * <code>bytes password = 4;</code>
         */
        public com.google.protobuf.ByteString getPassword() {
            return password_;
        }
        /**
         * <pre>
         *签到密码
         * </pre>
         *
         * <code>bytes password = 4;</code>
         */
        private void setPassword(com.google.protobuf.ByteString value) {
            if (value == null) {
                throw new NullPointerException();
            }

            password_ = value;
        }
        /**
         * <pre>
         *签到密码
         * </pre>
         *
         * <code>bytes password = 4;</code>
         */
        private void clearPassword() {

            password_ = getDefaultInstance().getPassword();
        }

        public static final int PSIGNDATA_FIELD_NUMBER = 5;
        private com.google.protobuf.ByteString psigndata_;
        /**
         * <pre>
         *如果有图片签到则为png图片数据(二进制转hex编码)
         * </pre>
         *
         * <code>bytes psigndata = 5;</code>
         */
        public com.google.protobuf.ByteString getPsigndata() {
            return psigndata_;
        }
        /**
         * <pre>
         *如果有图片签到则为png图片数据(二进制转hex编码)
         * </pre>
         *
         * <code>bytes psigndata = 5;</code>
         */
        private void setPsigndata(com.google.protobuf.ByteString value) {
            if (value == null) {
                throw new NullPointerException();
            }

            psigndata_ = value;
        }
        /**
         * <pre>
         *如果有图片签到则为png图片数据(二进制转hex编码)
         * </pre>
         *
         * <code>bytes psigndata = 5;</code>
         */
        private void clearPsigndata() {

            psigndata_ = getDefaultInstance().getPsigndata();
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (nameId_ != 0) {
                output.writeFixed32(1, nameId_);
            }
            if (utcseconds_ != 0L) {
                output.writeFixed64(2, utcseconds_);
            }
            if (signinType_ != 0) {
                output.writeFixed32(3, signinType_);
            }
            if (!password_.isEmpty()) {
                output.writeBytes(4, password_);
            }
            if (!psigndata_.isEmpty()) {
                output.writeBytes(5, psigndata_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (nameId_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(1, nameId_);
            }
            if (utcseconds_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed64Size(2, utcseconds_);
            }
            if (signinType_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(3, signinType_);
            }
            if (!password_.isEmpty()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(4, password_);
            }
            if (!psigndata_.isEmpty()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(5, psigndata_);
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSignInDetailInfo parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSignInDetailInfo parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSignInDetailInfo parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSignInDetailInfo parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSignInDetailInfo parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSignInDetailInfo parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSignInDetailInfo parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSignInDetailInfo parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSignInDetailInfo parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSignInDetailInfo parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSignInDetailInfo parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSignInDetailInfo parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSignInDetailInfo prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *会议签到
         * </pre>
         *
         * Protobuf type {@code pbui_Item_MeetSignInDetailInfo}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSignInDetailInfo, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Item_MeetSignInDetailInfo)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSignInDetailInfoOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSignInDetailInfo.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <pre>
             *人员ID
             * </pre>
             *
             * <code>fixed32 nameId = 1;</code>
             */
            public int getNameId() {
                return instance.getNameId();
            }
            /**
             * <pre>
             *人员ID
             * </pre>
             *
             * <code>fixed32 nameId = 1;</code>
             */
            public Builder setNameId(int value) {
                copyOnWrite();
                instance.setNameId(value);
                return this;
            }
            /**
             * <pre>
             *人员ID
             * </pre>
             *
             * <code>fixed32 nameId = 1;</code>
             */
            public Builder clearNameId() {
                copyOnWrite();
                instance.clearNameId();
                return this;
            }

            /**
             * <pre>
             *日期 时间 单位:秒
             * </pre>
             *
             * <code>fixed64 utcseconds = 2;</code>
             */
            public long getUtcseconds() {
                return instance.getUtcseconds();
            }
            /**
             * <pre>
             *日期 时间 单位:秒
             * </pre>
             *
             * <code>fixed64 utcseconds = 2;</code>
             */
            public Builder setUtcseconds(long value) {
                copyOnWrite();
                instance.setUtcseconds(value);
                return this;
            }
            /**
             * <pre>
             *日期 时间 单位:秒
             * </pre>
             *
             * <code>fixed64 utcseconds = 2;</code>
             */
            public Builder clearUtcseconds() {
                copyOnWrite();
                instance.clearUtcseconds();
                return this;
            }

            /**
             * <pre>
             *签到方式 参见Pb_MeetSignType
             * </pre>
             *
             * <code>fixed32 signin_type = 3;</code>
             */
            public int getSigninType() {
                return instance.getSigninType();
            }
            /**
             * <pre>
             *签到方式 参见Pb_MeetSignType
             * </pre>
             *
             * <code>fixed32 signin_type = 3;</code>
             */
            public Builder setSigninType(int value) {
                copyOnWrite();
                instance.setSigninType(value);
                return this;
            }
            /**
             * <pre>
             *签到方式 参见Pb_MeetSignType
             * </pre>
             *
             * <code>fixed32 signin_type = 3;</code>
             */
            public Builder clearSigninType() {
                copyOnWrite();
                instance.clearSigninType();
                return this;
            }

            /**
             * <pre>
             *签到密码
             * </pre>
             *
             * <code>bytes password = 4;</code>
             */
            public com.google.protobuf.ByteString getPassword() {
                return instance.getPassword();
            }
            /**
             * <pre>
             *签到密码
             * </pre>
             *
             * <code>bytes password = 4;</code>
             */
            public Builder setPassword(com.google.protobuf.ByteString value) {
                copyOnWrite();
                instance.setPassword(value);
                return this;
            }
            /**
             * <pre>
             *签到密码
             * </pre>
             *
             * <code>bytes password = 4;</code>
             */
            public Builder clearPassword() {
                copyOnWrite();
                instance.clearPassword();
                return this;
            }

            /**
             * <pre>
             *如果有图片签到则为png图片数据(二进制转hex编码)
             * </pre>
             *
             * <code>bytes psigndata = 5;</code>
             */
            public com.google.protobuf.ByteString getPsigndata() {
                return instance.getPsigndata();
            }
            /**
             * <pre>
             *如果有图片签到则为png图片数据(二进制转hex编码)
             * </pre>
             *
             * <code>bytes psigndata = 5;</code>
             */
            public Builder setPsigndata(com.google.protobuf.ByteString value) {
                copyOnWrite();
                instance.setPsigndata(value);
                return this;
            }
            /**
             * <pre>
             *如果有图片签到则为png图片数据(二进制转hex编码)
             * </pre>
             *
             * <code>bytes psigndata = 5;</code>
             */
            public Builder clearPsigndata() {
                copyOnWrite();
                instance.clearPsigndata();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Item_MeetSignInDetailInfo)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSignInDetailInfo();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSignInDetailInfo other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSignInDetailInfo) arg1;
                    nameId_ = visitor.visitInt(nameId_ != 0, nameId_,
                            other.nameId_ != 0, other.nameId_);
                    utcseconds_ = visitor.visitLong(utcseconds_ != 0L, utcseconds_,
                            other.utcseconds_ != 0L, other.utcseconds_);
                    signinType_ = visitor.visitInt(signinType_ != 0, signinType_,
                            other.signinType_ != 0, other.signinType_);
                    password_ = visitor.visitByteString(password_ != com.google.protobuf.ByteString.EMPTY, password_,
                            other.password_ != com.google.protobuf.ByteString.EMPTY, other.password_);
                    psigndata_ = visitor.visitByteString(psigndata_ != com.google.protobuf.ByteString.EMPTY, psigndata_,
                            other.psigndata_ != com.google.protobuf.ByteString.EMPTY, other.psigndata_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 13: {

                                    nameId_ = input.readFixed32();
                                    break;
                                }
                                case 17: {

                                    utcseconds_ = input.readFixed64();
                                    break;
                                }
                                case 29: {

                                    signinType_ = input.readFixed32();
                                    break;
                                }
                                case 34: {

                                    password_ = input.readBytes();
                                    break;
                                }
                                case 42: {

                                    psigndata_ = input.readBytes();
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSignInDetailInfo.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Item_MeetSignInDetailInfo)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSignInDetailInfo DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Item_MeetSignInDetailInfo();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSignInDetailInfo getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Item_MeetSignInDetailInfo> PARSER;

        public static com.google.protobuf.Parser<pbui_Item_MeetSignInDetailInfo> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Type_MeetSignInDetailInfoOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Type_MeetSignInDetailInfo)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <code>repeated .pbui_Item_MeetSignInDetailInfo item = 1;</code>
         */
        java.util.List<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSignInDetailInfo>
        getItemList();
        /**
         * <code>repeated .pbui_Item_MeetSignInDetailInfo item = 1;</code>
         */
        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSignInDetailInfo getItem(int index);
        /**
         * <code>repeated .pbui_Item_MeetSignInDetailInfo item = 1;</code>
         */
        int getItemCount();
    }
    /**
     * <pre>
     *type:Pb_TYPE_MEET_INTERFACE_MEETSIGN
     *method: query
     * </pre>
     *
     * Protobuf type {@code pbui_Type_MeetSignInDetailInfo}
     */
    public  static final class pbui_Type_MeetSignInDetailInfo extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Type_MeetSignInDetailInfo, pbui_Type_MeetSignInDetailInfo.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Type_MeetSignInDetailInfo)
            pbui_Type_MeetSignInDetailInfoOrBuilder {
        private pbui_Type_MeetSignInDetailInfo() {
            item_ = emptyProtobufList();
        }
        public static final int ITEM_FIELD_NUMBER = 1;
        private com.google.protobuf.Internal.ProtobufList<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSignInDetailInfo> item_;
        /**
         * <code>repeated .pbui_Item_MeetSignInDetailInfo item = 1;</code>
         */
        public java.util.List<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSignInDetailInfo> getItemList() {
            return item_;
        }
        /**
         * <code>repeated .pbui_Item_MeetSignInDetailInfo item = 1;</code>
         */
        public java.util.List<? extends com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSignInDetailInfoOrBuilder>
        getItemOrBuilderList() {
            return item_;
        }
        /**
         * <code>repeated .pbui_Item_MeetSignInDetailInfo item = 1;</code>
         */
        public int getItemCount() {
            return item_.size();
        }
        /**
         * <code>repeated .pbui_Item_MeetSignInDetailInfo item = 1;</code>
         */
        public com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSignInDetailInfo getItem(int index) {
            return item_.get(index);
        }
        /**
         * <code>repeated .pbui_Item_MeetSignInDetailInfo item = 1;</code>
         */
        public com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSignInDetailInfoOrBuilder getItemOrBuilder(
                int index) {
            return item_.get(index);
        }
        private void ensureItemIsMutable() {
            if (!item_.isModifiable()) {
                item_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(item_);
            }
        }

        /**
         * <code>repeated .pbui_Item_MeetSignInDetailInfo item = 1;</code>
         */
        private void setItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSignInDetailInfo value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensureItemIsMutable();
            item_.set(index, value);
        }
        /**
         * <code>repeated .pbui_Item_MeetSignInDetailInfo item = 1;</code>
         */
        private void setItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSignInDetailInfo.Builder builderForValue) {
            ensureItemIsMutable();
            item_.set(index, builderForValue.build());
        }
        /**
         * <code>repeated .pbui_Item_MeetSignInDetailInfo item = 1;</code>
         */
        private void addItem(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSignInDetailInfo value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensureItemIsMutable();
            item_.add(value);
        }
        /**
         * <code>repeated .pbui_Item_MeetSignInDetailInfo item = 1;</code>
         */
        private void addItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSignInDetailInfo value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensureItemIsMutable();
            item_.add(index, value);
        }
        /**
         * <code>repeated .pbui_Item_MeetSignInDetailInfo item = 1;</code>
         */
        private void addItem(
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSignInDetailInfo.Builder builderForValue) {
            ensureItemIsMutable();
            item_.add(builderForValue.build());
        }
        /**
         * <code>repeated .pbui_Item_MeetSignInDetailInfo item = 1;</code>
         */
        private void addItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSignInDetailInfo.Builder builderForValue) {
            ensureItemIsMutable();
            item_.add(index, builderForValue.build());
        }
        /**
         * <code>repeated .pbui_Item_MeetSignInDetailInfo item = 1;</code>
         */
        private void addAllItem(
                java.lang.Iterable<? extends com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSignInDetailInfo> values) {
            ensureItemIsMutable();
            com.google.protobuf.AbstractMessageLite.addAll(
                    values, item_);
        }
        /**
         * <code>repeated .pbui_Item_MeetSignInDetailInfo item = 1;</code>
         */
        private void clearItem() {
            item_ = emptyProtobufList();
        }
        /**
         * <code>repeated .pbui_Item_MeetSignInDetailInfo item = 1;</code>
         */
        private void removeItem(int index) {
            ensureItemIsMutable();
            item_.remove(index);
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            for (int i = 0; i < item_.size(); i++) {
                output.writeMessage(1, item_.get(i));
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            for (int i = 0; i < item_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, item_.get(i));
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSignInDetailInfo parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSignInDetailInfo parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSignInDetailInfo parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSignInDetailInfo parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSignInDetailInfo parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSignInDetailInfo parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSignInDetailInfo parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSignInDetailInfo parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSignInDetailInfo parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSignInDetailInfo parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSignInDetailInfo parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSignInDetailInfo parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSignInDetailInfo prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *type:Pb_TYPE_MEET_INTERFACE_MEETSIGN
         *method: query
         * </pre>
         *
         * Protobuf type {@code pbui_Type_MeetSignInDetailInfo}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSignInDetailInfo, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Type_MeetSignInDetailInfo)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSignInDetailInfoOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSignInDetailInfo.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <code>repeated .pbui_Item_MeetSignInDetailInfo item = 1;</code>
             */
            public java.util.List<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSignInDetailInfo> getItemList() {
                return java.util.Collections.unmodifiableList(
                        instance.getItemList());
            }
            /**
             * <code>repeated .pbui_Item_MeetSignInDetailInfo item = 1;</code>
             */
            public int getItemCount() {
                return instance.getItemCount();
            }/**
             * <code>repeated .pbui_Item_MeetSignInDetailInfo item = 1;</code>
             */
            public com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSignInDetailInfo getItem(int index) {
                return instance.getItem(index);
            }
            /**
             * <code>repeated .pbui_Item_MeetSignInDetailInfo item = 1;</code>
             */
            public Builder setItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSignInDetailInfo value) {
                copyOnWrite();
                instance.setItem(index, value);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetSignInDetailInfo item = 1;</code>
             */
            public Builder setItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSignInDetailInfo.Builder builderForValue) {
                copyOnWrite();
                instance.setItem(index, builderForValue);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetSignInDetailInfo item = 1;</code>
             */
            public Builder addItem(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSignInDetailInfo value) {
                copyOnWrite();
                instance.addItem(value);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetSignInDetailInfo item = 1;</code>
             */
            public Builder addItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSignInDetailInfo value) {
                copyOnWrite();
                instance.addItem(index, value);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetSignInDetailInfo item = 1;</code>
             */
            public Builder addItem(
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSignInDetailInfo.Builder builderForValue) {
                copyOnWrite();
                instance.addItem(builderForValue);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetSignInDetailInfo item = 1;</code>
             */
            public Builder addItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSignInDetailInfo.Builder builderForValue) {
                copyOnWrite();
                instance.addItem(index, builderForValue);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetSignInDetailInfo item = 1;</code>
             */
            public Builder addAllItem(
                    java.lang.Iterable<? extends com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSignInDetailInfo> values) {
                copyOnWrite();
                instance.addAllItem(values);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetSignInDetailInfo item = 1;</code>
             */
            public Builder clearItem() {
                copyOnWrite();
                instance.clearItem();
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetSignInDetailInfo item = 1;</code>
             */
            public Builder removeItem(int index) {
                copyOnWrite();
                instance.removeItem(index);
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Type_MeetSignInDetailInfo)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSignInDetailInfo();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    item_.makeImmutable();
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSignInDetailInfo other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSignInDetailInfo) arg1;
                    item_= visitor.visitList(item_, other.item_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 10: {
                                    if (!item_.isModifiable()) {
                                        item_ =
                                                com.google.protobuf.GeneratedMessageLite.mutableCopy(item_);
                                    }
                                    item_.add(
                                            input.readMessage(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetSignInDetailInfo.parser(), extensionRegistry));
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSignInDetailInfo.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Type_MeetSignInDetailInfo)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSignInDetailInfo DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Type_MeetSignInDetailInfo();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetSignInDetailInfo getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Type_MeetSignInDetailInfo> PARSER;

        public static com.google.protobuf.Parser<pbui_Type_MeetSignInDetailInfo> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Type_DoMeetSignInoOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Type_DoMeetSignIno)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <pre>
         *签到方式 参见Pb_MeetSignType
         * </pre>
         *
         * <code>fixed32 signin_type = 1;</code>
         */
        int getSigninType();

        /**
         * <pre>
         *签到密码
         * </pre>
         *
         * <code>bytes password = 2;</code>
         */
        com.google.protobuf.ByteString getPassword();

        /**
         * <pre>
         *如果有图片签到则为png图片数据(二进制转hex编码)
         * </pre>
         *
         * <code>bytes psigndata = 3;</code>
         */
        com.google.protobuf.ByteString getPsigndata();
    }
    /**
     * <pre>
     *发送会议签到
     *type:Pb_TYPE_MEET_INTERFACE_MEETSIGN
     *method: add
     * </pre>
     *
     * Protobuf type {@code pbui_Type_DoMeetSignIno}
     */
    public  static final class pbui_Type_DoMeetSignIno extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Type_DoMeetSignIno, pbui_Type_DoMeetSignIno.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Type_DoMeetSignIno)
            pbui_Type_DoMeetSignInoOrBuilder {
        private pbui_Type_DoMeetSignIno() {
            password_ = com.google.protobuf.ByteString.EMPTY;
            psigndata_ = com.google.protobuf.ByteString.EMPTY;
        }
        public static final int SIGNIN_TYPE_FIELD_NUMBER = 1;
        private int signinType_;
        /**
         * <pre>
         *签到方式 参见Pb_MeetSignType
         * </pre>
         *
         * <code>fixed32 signin_type = 1;</code>
         */
        public int getSigninType() {
            return signinType_;
        }
        /**
         * <pre>
         *签到方式 参见Pb_MeetSignType
         * </pre>
         *
         * <code>fixed32 signin_type = 1;</code>
         */
        private void setSigninType(int value) {

            signinType_ = value;
        }
        /**
         * <pre>
         *签到方式 参见Pb_MeetSignType
         * </pre>
         *
         * <code>fixed32 signin_type = 1;</code>
         */
        private void clearSigninType() {

            signinType_ = 0;
        }

        public static final int PASSWORD_FIELD_NUMBER = 2;
        private com.google.protobuf.ByteString password_;
        /**
         * <pre>
         *签到密码
         * </pre>
         *
         * <code>bytes password = 2;</code>
         */
        public com.google.protobuf.ByteString getPassword() {
            return password_;
        }
        /**
         * <pre>
         *签到密码
         * </pre>
         *
         * <code>bytes password = 2;</code>
         */
        private void setPassword(com.google.protobuf.ByteString value) {
            if (value == null) {
                throw new NullPointerException();
            }

            password_ = value;
        }
        /**
         * <pre>
         *签到密码
         * </pre>
         *
         * <code>bytes password = 2;</code>
         */
        private void clearPassword() {

            password_ = getDefaultInstance().getPassword();
        }

        public static final int PSIGNDATA_FIELD_NUMBER = 3;
        private com.google.protobuf.ByteString psigndata_;
        /**
         * <pre>
         *如果有图片签到则为png图片数据(二进制转hex编码)
         * </pre>
         *
         * <code>bytes psigndata = 3;</code>
         */
        public com.google.protobuf.ByteString getPsigndata() {
            return psigndata_;
        }
        /**
         * <pre>
         *如果有图片签到则为png图片数据(二进制转hex编码)
         * </pre>
         *
         * <code>bytes psigndata = 3;</code>
         */
        private void setPsigndata(com.google.protobuf.ByteString value) {
            if (value == null) {
                throw new NullPointerException();
            }

            psigndata_ = value;
        }
        /**
         * <pre>
         *如果有图片签到则为png图片数据(二进制转hex编码)
         * </pre>
         *
         * <code>bytes psigndata = 3;</code>
         */
        private void clearPsigndata() {

            psigndata_ = getDefaultInstance().getPsigndata();
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (signinType_ != 0) {
                output.writeFixed32(1, signinType_);
            }
            if (!password_.isEmpty()) {
                output.writeBytes(2, password_);
            }
            if (!psigndata_.isEmpty()) {
                output.writeBytes(3, psigndata_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (signinType_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(1, signinType_);
            }
            if (!password_.isEmpty()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(2, password_);
            }
            if (!psigndata_.isEmpty()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(3, psigndata_);
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoMeetSignIno parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoMeetSignIno parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoMeetSignIno parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoMeetSignIno parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoMeetSignIno parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoMeetSignIno parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoMeetSignIno parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoMeetSignIno parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoMeetSignIno parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoMeetSignIno parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoMeetSignIno parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoMeetSignIno parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoMeetSignIno prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *发送会议签到
         *type:Pb_TYPE_MEET_INTERFACE_MEETSIGN
         *method: add
         * </pre>
         *
         * Protobuf type {@code pbui_Type_DoMeetSignIno}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoMeetSignIno, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Type_DoMeetSignIno)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoMeetSignInoOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoMeetSignIno.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <pre>
             *签到方式 参见Pb_MeetSignType
             * </pre>
             *
             * <code>fixed32 signin_type = 1;</code>
             */
            public int getSigninType() {
                return instance.getSigninType();
            }
            /**
             * <pre>
             *签到方式 参见Pb_MeetSignType
             * </pre>
             *
             * <code>fixed32 signin_type = 1;</code>
             */
            public Builder setSigninType(int value) {
                copyOnWrite();
                instance.setSigninType(value);
                return this;
            }
            /**
             * <pre>
             *签到方式 参见Pb_MeetSignType
             * </pre>
             *
             * <code>fixed32 signin_type = 1;</code>
             */
            public Builder clearSigninType() {
                copyOnWrite();
                instance.clearSigninType();
                return this;
            }

            /**
             * <pre>
             *签到密码
             * </pre>
             *
             * <code>bytes password = 2;</code>
             */
            public com.google.protobuf.ByteString getPassword() {
                return instance.getPassword();
            }
            /**
             * <pre>
             *签到密码
             * </pre>
             *
             * <code>bytes password = 2;</code>
             */
            public Builder setPassword(com.google.protobuf.ByteString value) {
                copyOnWrite();
                instance.setPassword(value);
                return this;
            }
            /**
             * <pre>
             *签到密码
             * </pre>
             *
             * <code>bytes password = 2;</code>
             */
            public Builder clearPassword() {
                copyOnWrite();
                instance.clearPassword();
                return this;
            }

            /**
             * <pre>
             *如果有图片签到则为png图片数据(二进制转hex编码)
             * </pre>
             *
             * <code>bytes psigndata = 3;</code>
             */
            public com.google.protobuf.ByteString getPsigndata() {
                return instance.getPsigndata();
            }
            /**
             * <pre>
             *如果有图片签到则为png图片数据(二进制转hex编码)
             * </pre>
             *
             * <code>bytes psigndata = 3;</code>
             */
            public Builder setPsigndata(com.google.protobuf.ByteString value) {
                copyOnWrite();
                instance.setPsigndata(value);
                return this;
            }
            /**
             * <pre>
             *如果有图片签到则为png图片数据(二进制转hex编码)
             * </pre>
             *
             * <code>bytes psigndata = 3;</code>
             */
            public Builder clearPsigndata() {
                copyOnWrite();
                instance.clearPsigndata();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Type_DoMeetSignIno)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoMeetSignIno();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoMeetSignIno other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoMeetSignIno) arg1;
                    signinType_ = visitor.visitInt(signinType_ != 0, signinType_,
                            other.signinType_ != 0, other.signinType_);
                    password_ = visitor.visitByteString(password_ != com.google.protobuf.ByteString.EMPTY, password_,
                            other.password_ != com.google.protobuf.ByteString.EMPTY, other.password_);
                    psigndata_ = visitor.visitByteString(psigndata_ != com.google.protobuf.ByteString.EMPTY, psigndata_,
                            other.psigndata_ != com.google.protobuf.ByteString.EMPTY, other.psigndata_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 13: {

                                    signinType_ = input.readFixed32();
                                    break;
                                }
                                case 18: {

                                    password_ = input.readBytes();
                                    break;
                                }
                                case 26: {

                                    psigndata_ = input.readBytes();
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoMeetSignIno.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Type_DoMeetSignIno)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoMeetSignIno DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Type_DoMeetSignIno();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoMeetSignIno getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Type_DoMeetSignIno> PARSER;

        public static com.google.protobuf.Parser<pbui_Type_DoMeetSignIno> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Type_MeetWhiteBoardControlOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Type_MeetWhiteBoardControl)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <pre>
         *指定操作标志 参见Pb_MeetPostilOperType
         * </pre>
         *
         * <code>fixed32 operflag = 1;</code>
         */
        int getOperflag();

        /**
         * <pre>
         *白板操作描述
         * </pre>
         *
         * <code>bytes medianame = 2;</code>
         */
        com.google.protobuf.ByteString getMedianame();

        /**
         * <pre>
         *当前该命令的人员ID
         * </pre>
         *
         * <code>fixed32 opermemberid = 3;</code>
         */
        int getOpermemberid();

        /**
         * <pre>
         *发起人的人员ID 白板标识使用
         * </pre>
         *
         * <code>fixed32 srcmemid = 4;</code>
         */
        int getSrcmemid();

        /**
         * <pre>
         *发起人的白板标识 取微秒级的时间作标识 白板标识使用
         * </pre>
         *
         * <code>fixed64 srcwbid = 5;</code>
         */
        long getSrcwbid();

        /**
         * <pre>
         *参会人员
         * </pre>
         *
         * <code>repeated fixed32 userid = 6;</code>
         */
        java.util.List<java.lang.Integer> getUseridList();
        /**
         * <pre>
         *参会人员
         * </pre>
         *
         * <code>repeated fixed32 userid = 6;</code>
         */
        int getUseridCount();
        /**
         * <pre>
         *参会人员
         * </pre>
         *
         * <code>repeated fixed32 userid = 6;</code>
         */
        int getUserid(int index);
    }
    /**
     * <pre>
     *执行一个白板操作 用于会议交流 指定需要执行操作的标志
     *call
     *type:Pb_TYPE_MEET_INTERFACE_WHITEBOARD
     *method: control
     * </pre>
     *
     * Protobuf type {@code pbui_Type_MeetWhiteBoardControl}
     */
    public  static final class pbui_Type_MeetWhiteBoardControl extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Type_MeetWhiteBoardControl, pbui_Type_MeetWhiteBoardControl.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Type_MeetWhiteBoardControl)
            pbui_Type_MeetWhiteBoardControlOrBuilder {
        private pbui_Type_MeetWhiteBoardControl() {
            medianame_ = com.google.protobuf.ByteString.EMPTY;
            userid_ = emptyIntList();
        }
        private int bitField0_;
        public static final int OPERFLAG_FIELD_NUMBER = 1;
        private int operflag_;
        /**
         * <pre>
         *指定操作标志 参见Pb_MeetPostilOperType
         * </pre>
         *
         * <code>fixed32 operflag = 1;</code>
         */
        public int getOperflag() {
            return operflag_;
        }
        /**
         * <pre>
         *指定操作标志 参见Pb_MeetPostilOperType
         * </pre>
         *
         * <code>fixed32 operflag = 1;</code>
         */
        private void setOperflag(int value) {

            operflag_ = value;
        }
        /**
         * <pre>
         *指定操作标志 参见Pb_MeetPostilOperType
         * </pre>
         *
         * <code>fixed32 operflag = 1;</code>
         */
        private void clearOperflag() {

            operflag_ = 0;
        }

        public static final int MEDIANAME_FIELD_NUMBER = 2;
        private com.google.protobuf.ByteString medianame_;
        /**
         * <pre>
         *白板操作描述
         * </pre>
         *
         * <code>bytes medianame = 2;</code>
         */
        public com.google.protobuf.ByteString getMedianame() {
            return medianame_;
        }
        /**
         * <pre>
         *白板操作描述
         * </pre>
         *
         * <code>bytes medianame = 2;</code>
         */
        private void setMedianame(com.google.protobuf.ByteString value) {
            if (value == null) {
                throw new NullPointerException();
            }

            medianame_ = value;
        }
        /**
         * <pre>
         *白板操作描述
         * </pre>
         *
         * <code>bytes medianame = 2;</code>
         */
        private void clearMedianame() {

            medianame_ = getDefaultInstance().getMedianame();
        }

        public static final int OPERMEMBERID_FIELD_NUMBER = 3;
        private int opermemberid_;
        /**
         * <pre>
         *当前该命令的人员ID
         * </pre>
         *
         * <code>fixed32 opermemberid = 3;</code>
         */
        public int getOpermemberid() {
            return opermemberid_;
        }
        /**
         * <pre>
         *当前该命令的人员ID
         * </pre>
         *
         * <code>fixed32 opermemberid = 3;</code>
         */
        private void setOpermemberid(int value) {

            opermemberid_ = value;
        }
        /**
         * <pre>
         *当前该命令的人员ID
         * </pre>
         *
         * <code>fixed32 opermemberid = 3;</code>
         */
        private void clearOpermemberid() {

            opermemberid_ = 0;
        }

        public static final int SRCMEMID_FIELD_NUMBER = 4;
        private int srcmemid_;
        /**
         * <pre>
         *发起人的人员ID 白板标识使用
         * </pre>
         *
         * <code>fixed32 srcmemid = 4;</code>
         */
        public int getSrcmemid() {
            return srcmemid_;
        }
        /**
         * <pre>
         *发起人的人员ID 白板标识使用
         * </pre>
         *
         * <code>fixed32 srcmemid = 4;</code>
         */
        private void setSrcmemid(int value) {

            srcmemid_ = value;
        }
        /**
         * <pre>
         *发起人的人员ID 白板标识使用
         * </pre>
         *
         * <code>fixed32 srcmemid = 4;</code>
         */
        private void clearSrcmemid() {

            srcmemid_ = 0;
        }

        public static final int SRCWBID_FIELD_NUMBER = 5;
        private long srcwbid_;
        /**
         * <pre>
         *发起人的白板标识 取微秒级的时间作标识 白板标识使用
         * </pre>
         *
         * <code>fixed64 srcwbid = 5;</code>
         */
        public long getSrcwbid() {
            return srcwbid_;
        }
        /**
         * <pre>
         *发起人的白板标识 取微秒级的时间作标识 白板标识使用
         * </pre>
         *
         * <code>fixed64 srcwbid = 5;</code>
         */
        private void setSrcwbid(long value) {

            srcwbid_ = value;
        }
        /**
         * <pre>
         *发起人的白板标识 取微秒级的时间作标识 白板标识使用
         * </pre>
         *
         * <code>fixed64 srcwbid = 5;</code>
         */
        private void clearSrcwbid() {

            srcwbid_ = 0L;
        }

        public static final int USERID_FIELD_NUMBER = 6;
        private com.google.protobuf.Internal.IntList userid_;
        /**
         * <pre>
         *参会人员
         * </pre>
         *
         * <code>repeated fixed32 userid = 6;</code>
         */
        public java.util.List<java.lang.Integer>
        getUseridList() {
            return userid_;
        }
        /**
         * <pre>
         *参会人员
         * </pre>
         *
         * <code>repeated fixed32 userid = 6;</code>
         */
        public int getUseridCount() {
            return userid_.size();
        }
        /**
         * <pre>
         *参会人员
         * </pre>
         *
         * <code>repeated fixed32 userid = 6;</code>
         */
        public int getUserid(int index) {
            return userid_.getInt(index);
        }
        private void ensureUseridIsMutable() {
            if (!userid_.isModifiable()) {
                userid_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(userid_);
            }
        }
        /**
         * <pre>
         *参会人员
         * </pre>
         *
         * <code>repeated fixed32 userid = 6;</code>
         */
        private void setUserid(
                int index, int value) {
            ensureUseridIsMutable();
            userid_.setInt(index, value);
        }
        /**
         * <pre>
         *参会人员
         * </pre>
         *
         * <code>repeated fixed32 userid = 6;</code>
         */
        private void addUserid(int value) {
            ensureUseridIsMutable();
            userid_.addInt(value);
        }
        /**
         * <pre>
         *参会人员
         * </pre>
         *
         * <code>repeated fixed32 userid = 6;</code>
         */
        private void addAllUserid(
                java.lang.Iterable<? extends java.lang.Integer> values) {
            ensureUseridIsMutable();
            com.google.protobuf.AbstractMessageLite.addAll(
                    values, userid_);
        }
        /**
         * <pre>
         *参会人员
         * </pre>
         *
         * <code>repeated fixed32 userid = 6;</code>
         */
        private void clearUserid() {
            userid_ = emptyIntList();
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (operflag_ != 0) {
                output.writeFixed32(1, operflag_);
            }
            if (!medianame_.isEmpty()) {
                output.writeBytes(2, medianame_);
            }
            if (opermemberid_ != 0) {
                output.writeFixed32(3, opermemberid_);
            }
            if (srcmemid_ != 0) {
                output.writeFixed32(4, srcmemid_);
            }
            if (srcwbid_ != 0L) {
                output.writeFixed64(5, srcwbid_);
            }
            for (int i = 0; i < userid_.size(); i++) {
                output.writeFixed32(6, userid_.getInt(i));
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (operflag_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(1, operflag_);
            }
            if (!medianame_.isEmpty()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(2, medianame_);
            }
            if (opermemberid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(3, opermemberid_);
            }
            if (srcmemid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(4, srcmemid_);
            }
            if (srcwbid_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed64Size(5, srcwbid_);
            }
            {
                int dataSize = 0;
                dataSize = 4 * getUseridList().size();
                size += dataSize;
                size += 1 * getUseridList().size();
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardControl parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardControl parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardControl parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardControl parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardControl parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardControl parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardControl parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardControl parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardControl parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardControl parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardControl parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardControl parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardControl prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *执行一个白板操作 用于会议交流 指定需要执行操作的标志
         *call
         *type:Pb_TYPE_MEET_INTERFACE_WHITEBOARD
         *method: control
         * </pre>
         *
         * Protobuf type {@code pbui_Type_MeetWhiteBoardControl}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardControl, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Type_MeetWhiteBoardControl)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardControlOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardControl.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <pre>
             *指定操作标志 参见Pb_MeetPostilOperType
             * </pre>
             *
             * <code>fixed32 operflag = 1;</code>
             */
            public int getOperflag() {
                return instance.getOperflag();
            }
            /**
             * <pre>
             *指定操作标志 参见Pb_MeetPostilOperType
             * </pre>
             *
             * <code>fixed32 operflag = 1;</code>
             */
            public Builder setOperflag(int value) {
                copyOnWrite();
                instance.setOperflag(value);
                return this;
            }
            /**
             * <pre>
             *指定操作标志 参见Pb_MeetPostilOperType
             * </pre>
             *
             * <code>fixed32 operflag = 1;</code>
             */
            public Builder clearOperflag() {
                copyOnWrite();
                instance.clearOperflag();
                return this;
            }

            /**
             * <pre>
             *白板操作描述
             * </pre>
             *
             * <code>bytes medianame = 2;</code>
             */
            public com.google.protobuf.ByteString getMedianame() {
                return instance.getMedianame();
            }
            /**
             * <pre>
             *白板操作描述
             * </pre>
             *
             * <code>bytes medianame = 2;</code>
             */
            public Builder setMedianame(com.google.protobuf.ByteString value) {
                copyOnWrite();
                instance.setMedianame(value);
                return this;
            }
            /**
             * <pre>
             *白板操作描述
             * </pre>
             *
             * <code>bytes medianame = 2;</code>
             */
            public Builder clearMedianame() {
                copyOnWrite();
                instance.clearMedianame();
                return this;
            }

            /**
             * <pre>
             *当前该命令的人员ID
             * </pre>
             *
             * <code>fixed32 opermemberid = 3;</code>
             */
            public int getOpermemberid() {
                return instance.getOpermemberid();
            }
            /**
             * <pre>
             *当前该命令的人员ID
             * </pre>
             *
             * <code>fixed32 opermemberid = 3;</code>
             */
            public Builder setOpermemberid(int value) {
                copyOnWrite();
                instance.setOpermemberid(value);
                return this;
            }
            /**
             * <pre>
             *当前该命令的人员ID
             * </pre>
             *
             * <code>fixed32 opermemberid = 3;</code>
             */
            public Builder clearOpermemberid() {
                copyOnWrite();
                instance.clearOpermemberid();
                return this;
            }

            /**
             * <pre>
             *发起人的人员ID 白板标识使用
             * </pre>
             *
             * <code>fixed32 srcmemid = 4;</code>
             */
            public int getSrcmemid() {
                return instance.getSrcmemid();
            }
            /**
             * <pre>
             *发起人的人员ID 白板标识使用
             * </pre>
             *
             * <code>fixed32 srcmemid = 4;</code>
             */
            public Builder setSrcmemid(int value) {
                copyOnWrite();
                instance.setSrcmemid(value);
                return this;
            }
            /**
             * <pre>
             *发起人的人员ID 白板标识使用
             * </pre>
             *
             * <code>fixed32 srcmemid = 4;</code>
             */
            public Builder clearSrcmemid() {
                copyOnWrite();
                instance.clearSrcmemid();
                return this;
            }

            /**
             * <pre>
             *发起人的白板标识 取微秒级的时间作标识 白板标识使用
             * </pre>
             *
             * <code>fixed64 srcwbid = 5;</code>
             */
            public long getSrcwbid() {
                return instance.getSrcwbid();
            }
            /**
             * <pre>
             *发起人的白板标识 取微秒级的时间作标识 白板标识使用
             * </pre>
             *
             * <code>fixed64 srcwbid = 5;</code>
             */
            public Builder setSrcwbid(long value) {
                copyOnWrite();
                instance.setSrcwbid(value);
                return this;
            }
            /**
             * <pre>
             *发起人的白板标识 取微秒级的时间作标识 白板标识使用
             * </pre>
             *
             * <code>fixed64 srcwbid = 5;</code>
             */
            public Builder clearSrcwbid() {
                copyOnWrite();
                instance.clearSrcwbid();
                return this;
            }

            /**
             * <pre>
             *参会人员
             * </pre>
             *
             * <code>repeated fixed32 userid = 6;</code>
             */
            public java.util.List<java.lang.Integer>
            getUseridList() {
                return java.util.Collections.unmodifiableList(
                        instance.getUseridList());
            }
            /**
             * <pre>
             *参会人员
             * </pre>
             *
             * <code>repeated fixed32 userid = 6;</code>
             */
            public int getUseridCount() {
                return instance.getUseridCount();
            }
            /**
             * <pre>
             *参会人员
             * </pre>
             *
             * <code>repeated fixed32 userid = 6;</code>
             */
            public int getUserid(int index) {
                return instance.getUserid(index);
            }
            /**
             * <pre>
             *参会人员
             * </pre>
             *
             * <code>repeated fixed32 userid = 6;</code>
             */
            public Builder setUserid(
                    int index, int value) {
                copyOnWrite();
                instance.setUserid(index, value);
                return this;
            }
            /**
             * <pre>
             *参会人员
             * </pre>
             *
             * <code>repeated fixed32 userid = 6;</code>
             */
            public Builder addUserid(int value) {
                copyOnWrite();
                instance.addUserid(value);
                return this;
            }
            /**
             * <pre>
             *参会人员
             * </pre>
             *
             * <code>repeated fixed32 userid = 6;</code>
             */
            public Builder addAllUserid(
                    java.lang.Iterable<? extends java.lang.Integer> values) {
                copyOnWrite();
                instance.addAllUserid(values);
                return this;
            }
            /**
             * <pre>
             *参会人员
             * </pre>
             *
             * <code>repeated fixed32 userid = 6;</code>
             */
            public Builder clearUserid() {
                copyOnWrite();
                instance.clearUserid();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Type_MeetWhiteBoardControl)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardControl();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    userid_.makeImmutable();
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardControl other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardControl) arg1;
                    operflag_ = visitor.visitInt(operflag_ != 0, operflag_,
                            other.operflag_ != 0, other.operflag_);
                    medianame_ = visitor.visitByteString(medianame_ != com.google.protobuf.ByteString.EMPTY, medianame_,
                            other.medianame_ != com.google.protobuf.ByteString.EMPTY, other.medianame_);
                    opermemberid_ = visitor.visitInt(opermemberid_ != 0, opermemberid_,
                            other.opermemberid_ != 0, other.opermemberid_);
                    srcmemid_ = visitor.visitInt(srcmemid_ != 0, srcmemid_,
                            other.srcmemid_ != 0, other.srcmemid_);
                    srcwbid_ = visitor.visitLong(srcwbid_ != 0L, srcwbid_,
                            other.srcwbid_ != 0L, other.srcwbid_);
                    userid_= visitor.visitIntList(userid_, other.userid_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                        bitField0_ |= other.bitField0_;
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 13: {

                                    operflag_ = input.readFixed32();
                                    break;
                                }
                                case 18: {

                                    medianame_ = input.readBytes();
                                    break;
                                }
                                case 29: {

                                    opermemberid_ = input.readFixed32();
                                    break;
                                }
                                case 37: {

                                    srcmemid_ = input.readFixed32();
                                    break;
                                }
                                case 41: {

                                    srcwbid_ = input.readFixed64();
                                    break;
                                }
                                case 53: {
                                    if (!userid_.isModifiable()) {
                                        userid_ =
                                                com.google.protobuf.GeneratedMessageLite.mutableCopy(userid_);
                                    }
                                    userid_.addInt(input.readFixed32());
                                    break;
                                }
                                case 50: {
                                    int length = input.readRawVarint32();
                                    int limit = input.pushLimit(length);
                                    if (!userid_.isModifiable() && input.getBytesUntilLimit() > 0) {
                                        final int currentSize = userid_.size();
                                        userid_ = userid_.mutableCopyWithCapacity(
                                                currentSize + (length/4));
                                    }
                                    while (input.getBytesUntilLimit() > 0) {
                                        userid_.addInt(input.readFixed32());
                                    }
                                    input.popLimit(limit);
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardControl.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Type_MeetWhiteBoardControl)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardControl DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Type_MeetWhiteBoardControl();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardControl getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Type_MeetWhiteBoardControl> PARSER;

        public static com.google.protobuf.Parser<pbui_Type_MeetWhiteBoardControl> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Type_MeetStartWhiteBoardOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Type_MeetStartWhiteBoard)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <pre>
         *指定操作标志 参见Pb_MeetPostilOperType
         * </pre>
         *
         * <code>fixed32 operflag = 1;</code>
         */
        int getOperflag();

        /**
         * <pre>
         *白板操作描述
         * </pre>
         *
         * <code>bytes medianame = 2;</code>
         */
        com.google.protobuf.ByteString getMedianame();

        /**
         * <pre>
         *当前该命令的人员ID
         * </pre>
         *
         * <code>fixed32 opermemberid = 3;</code>
         */
        int getOpermemberid();

        /**
         * <pre>
         *发起人的人员ID 白板标识使用
         * </pre>
         *
         * <code>fixed32 srcmemid = 4;</code>
         */
        int getSrcmemid();

        /**
         * <pre>
         *发起人的白板标识 取微秒级的时间作标识 白板标识使用
         * </pre>
         *
         * <code>fixed64 srcwbid = 5;</code>
         */
        long getSrcwbid();
    }
    /**
     * <pre>
     *收到白板打开操作
     *callback
     *type:Pb_TYPE_MEET_INTERFACE_WHITEBOARD
     *method: ask
     * </pre>
     *
     * Protobuf type {@code pbui_Type_MeetStartWhiteBoard}
     */
    public  static final class pbui_Type_MeetStartWhiteBoard extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Type_MeetStartWhiteBoard, pbui_Type_MeetStartWhiteBoard.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Type_MeetStartWhiteBoard)
            pbui_Type_MeetStartWhiteBoardOrBuilder {
        private pbui_Type_MeetStartWhiteBoard() {
            medianame_ = com.google.protobuf.ByteString.EMPTY;
        }
        public static final int OPERFLAG_FIELD_NUMBER = 1;
        private int operflag_;
        /**
         * <pre>
         *指定操作标志 参见Pb_MeetPostilOperType
         * </pre>
         *
         * <code>fixed32 operflag = 1;</code>
         */
        public int getOperflag() {
            return operflag_;
        }
        /**
         * <pre>
         *指定操作标志 参见Pb_MeetPostilOperType
         * </pre>
         *
         * <code>fixed32 operflag = 1;</code>
         */
        private void setOperflag(int value) {

            operflag_ = value;
        }
        /**
         * <pre>
         *指定操作标志 参见Pb_MeetPostilOperType
         * </pre>
         *
         * <code>fixed32 operflag = 1;</code>
         */
        private void clearOperflag() {

            operflag_ = 0;
        }

        public static final int MEDIANAME_FIELD_NUMBER = 2;
        private com.google.protobuf.ByteString medianame_;
        /**
         * <pre>
         *白板操作描述
         * </pre>
         *
         * <code>bytes medianame = 2;</code>
         */
        public com.google.protobuf.ByteString getMedianame() {
            return medianame_;
        }
        /**
         * <pre>
         *白板操作描述
         * </pre>
         *
         * <code>bytes medianame = 2;</code>
         */
        private void setMedianame(com.google.protobuf.ByteString value) {
            if (value == null) {
                throw new NullPointerException();
            }

            medianame_ = value;
        }
        /**
         * <pre>
         *白板操作描述
         * </pre>
         *
         * <code>bytes medianame = 2;</code>
         */
        private void clearMedianame() {

            medianame_ = getDefaultInstance().getMedianame();
        }

        public static final int OPERMEMBERID_FIELD_NUMBER = 3;
        private int opermemberid_;
        /**
         * <pre>
         *当前该命令的人员ID
         * </pre>
         *
         * <code>fixed32 opermemberid = 3;</code>
         */
        public int getOpermemberid() {
            return opermemberid_;
        }
        /**
         * <pre>
         *当前该命令的人员ID
         * </pre>
         *
         * <code>fixed32 opermemberid = 3;</code>
         */
        private void setOpermemberid(int value) {

            opermemberid_ = value;
        }
        /**
         * <pre>
         *当前该命令的人员ID
         * </pre>
         *
         * <code>fixed32 opermemberid = 3;</code>
         */
        private void clearOpermemberid() {

            opermemberid_ = 0;
        }

        public static final int SRCMEMID_FIELD_NUMBER = 4;
        private int srcmemid_;
        /**
         * <pre>
         *发起人的人员ID 白板标识使用
         * </pre>
         *
         * <code>fixed32 srcmemid = 4;</code>
         */
        public int getSrcmemid() {
            return srcmemid_;
        }
        /**
         * <pre>
         *发起人的人员ID 白板标识使用
         * </pre>
         *
         * <code>fixed32 srcmemid = 4;</code>
         */
        private void setSrcmemid(int value) {

            srcmemid_ = value;
        }
        /**
         * <pre>
         *发起人的人员ID 白板标识使用
         * </pre>
         *
         * <code>fixed32 srcmemid = 4;</code>
         */
        private void clearSrcmemid() {

            srcmemid_ = 0;
        }

        public static final int SRCWBID_FIELD_NUMBER = 5;
        private long srcwbid_;
        /**
         * <pre>
         *发起人的白板标识 取微秒级的时间作标识 白板标识使用
         * </pre>
         *
         * <code>fixed64 srcwbid = 5;</code>
         */
        public long getSrcwbid() {
            return srcwbid_;
        }
        /**
         * <pre>
         *发起人的白板标识 取微秒级的时间作标识 白板标识使用
         * </pre>
         *
         * <code>fixed64 srcwbid = 5;</code>
         */
        private void setSrcwbid(long value) {

            srcwbid_ = value;
        }
        /**
         * <pre>
         *发起人的白板标识 取微秒级的时间作标识 白板标识使用
         * </pre>
         *
         * <code>fixed64 srcwbid = 5;</code>
         */
        private void clearSrcwbid() {

            srcwbid_ = 0L;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (operflag_ != 0) {
                output.writeFixed32(1, operflag_);
            }
            if (!medianame_.isEmpty()) {
                output.writeBytes(2, medianame_);
            }
            if (opermemberid_ != 0) {
                output.writeFixed32(3, opermemberid_);
            }
            if (srcmemid_ != 0) {
                output.writeFixed32(4, srcmemid_);
            }
            if (srcwbid_ != 0L) {
                output.writeFixed64(5, srcwbid_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (operflag_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(1, operflag_);
            }
            if (!medianame_.isEmpty()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(2, medianame_);
            }
            if (opermemberid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(3, opermemberid_);
            }
            if (srcmemid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(4, srcmemid_);
            }
            if (srcwbid_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed64Size(5, srcwbid_);
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStartWhiteBoard parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStartWhiteBoard parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStartWhiteBoard parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStartWhiteBoard parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStartWhiteBoard parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStartWhiteBoard parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStartWhiteBoard parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStartWhiteBoard parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStartWhiteBoard parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStartWhiteBoard parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStartWhiteBoard parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStartWhiteBoard parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStartWhiteBoard prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *收到白板打开操作
         *callback
         *type:Pb_TYPE_MEET_INTERFACE_WHITEBOARD
         *method: ask
         * </pre>
         *
         * Protobuf type {@code pbui_Type_MeetStartWhiteBoard}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStartWhiteBoard, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Type_MeetStartWhiteBoard)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStartWhiteBoardOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStartWhiteBoard.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <pre>
             *指定操作标志 参见Pb_MeetPostilOperType
             * </pre>
             *
             * <code>fixed32 operflag = 1;</code>
             */
            public int getOperflag() {
                return instance.getOperflag();
            }
            /**
             * <pre>
             *指定操作标志 参见Pb_MeetPostilOperType
             * </pre>
             *
             * <code>fixed32 operflag = 1;</code>
             */
            public Builder setOperflag(int value) {
                copyOnWrite();
                instance.setOperflag(value);
                return this;
            }
            /**
             * <pre>
             *指定操作标志 参见Pb_MeetPostilOperType
             * </pre>
             *
             * <code>fixed32 operflag = 1;</code>
             */
            public Builder clearOperflag() {
                copyOnWrite();
                instance.clearOperflag();
                return this;
            }

            /**
             * <pre>
             *白板操作描述
             * </pre>
             *
             * <code>bytes medianame = 2;</code>
             */
            public com.google.protobuf.ByteString getMedianame() {
                return instance.getMedianame();
            }
            /**
             * <pre>
             *白板操作描述
             * </pre>
             *
             * <code>bytes medianame = 2;</code>
             */
            public Builder setMedianame(com.google.protobuf.ByteString value) {
                copyOnWrite();
                instance.setMedianame(value);
                return this;
            }
            /**
             * <pre>
             *白板操作描述
             * </pre>
             *
             * <code>bytes medianame = 2;</code>
             */
            public Builder clearMedianame() {
                copyOnWrite();
                instance.clearMedianame();
                return this;
            }

            /**
             * <pre>
             *当前该命令的人员ID
             * </pre>
             *
             * <code>fixed32 opermemberid = 3;</code>
             */
            public int getOpermemberid() {
                return instance.getOpermemberid();
            }
            /**
             * <pre>
             *当前该命令的人员ID
             * </pre>
             *
             * <code>fixed32 opermemberid = 3;</code>
             */
            public Builder setOpermemberid(int value) {
                copyOnWrite();
                instance.setOpermemberid(value);
                return this;
            }
            /**
             * <pre>
             *当前该命令的人员ID
             * </pre>
             *
             * <code>fixed32 opermemberid = 3;</code>
             */
            public Builder clearOpermemberid() {
                copyOnWrite();
                instance.clearOpermemberid();
                return this;
            }

            /**
             * <pre>
             *发起人的人员ID 白板标识使用
             * </pre>
             *
             * <code>fixed32 srcmemid = 4;</code>
             */
            public int getSrcmemid() {
                return instance.getSrcmemid();
            }
            /**
             * <pre>
             *发起人的人员ID 白板标识使用
             * </pre>
             *
             * <code>fixed32 srcmemid = 4;</code>
             */
            public Builder setSrcmemid(int value) {
                copyOnWrite();
                instance.setSrcmemid(value);
                return this;
            }
            /**
             * <pre>
             *发起人的人员ID 白板标识使用
             * </pre>
             *
             * <code>fixed32 srcmemid = 4;</code>
             */
            public Builder clearSrcmemid() {
                copyOnWrite();
                instance.clearSrcmemid();
                return this;
            }

            /**
             * <pre>
             *发起人的白板标识 取微秒级的时间作标识 白板标识使用
             * </pre>
             *
             * <code>fixed64 srcwbid = 5;</code>
             */
            public long getSrcwbid() {
                return instance.getSrcwbid();
            }
            /**
             * <pre>
             *发起人的白板标识 取微秒级的时间作标识 白板标识使用
             * </pre>
             *
             * <code>fixed64 srcwbid = 5;</code>
             */
            public Builder setSrcwbid(long value) {
                copyOnWrite();
                instance.setSrcwbid(value);
                return this;
            }
            /**
             * <pre>
             *发起人的白板标识 取微秒级的时间作标识 白板标识使用
             * </pre>
             *
             * <code>fixed64 srcwbid = 5;</code>
             */
            public Builder clearSrcwbid() {
                copyOnWrite();
                instance.clearSrcwbid();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Type_MeetStartWhiteBoard)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStartWhiteBoard();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStartWhiteBoard other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStartWhiteBoard) arg1;
                    operflag_ = visitor.visitInt(operflag_ != 0, operflag_,
                            other.operflag_ != 0, other.operflag_);
                    medianame_ = visitor.visitByteString(medianame_ != com.google.protobuf.ByteString.EMPTY, medianame_,
                            other.medianame_ != com.google.protobuf.ByteString.EMPTY, other.medianame_);
                    opermemberid_ = visitor.visitInt(opermemberid_ != 0, opermemberid_,
                            other.opermemberid_ != 0, other.opermemberid_);
                    srcmemid_ = visitor.visitInt(srcmemid_ != 0, srcmemid_,
                            other.srcmemid_ != 0, other.srcmemid_);
                    srcwbid_ = visitor.visitLong(srcwbid_ != 0L, srcwbid_,
                            other.srcwbid_ != 0L, other.srcwbid_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 13: {

                                    operflag_ = input.readFixed32();
                                    break;
                                }
                                case 18: {

                                    medianame_ = input.readBytes();
                                    break;
                                }
                                case 29: {

                                    opermemberid_ = input.readFixed32();
                                    break;
                                }
                                case 37: {

                                    srcmemid_ = input.readFixed32();
                                    break;
                                }
                                case 41: {

                                    srcwbid_ = input.readFixed64();
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStartWhiteBoard.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Type_MeetStartWhiteBoard)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStartWhiteBoard DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Type_MeetStartWhiteBoard();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStartWhiteBoard getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Type_MeetStartWhiteBoard> PARSER;

        public static com.google.protobuf.Parser<pbui_Type_MeetStartWhiteBoard> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Type_MeetWhiteBoardOperOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Type_MeetWhiteBoardOper)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <pre>
         *当前该命令的人员ID
         * </pre>
         *
         * <code>fixed32 opermemberid = 1;</code>
         */
        int getOpermemberid();

        /**
         * <pre>
         *发起人的人员ID 白板标识使用
         * </pre>
         *
         * <code>fixed32 srcmemid = 2;</code>
         */
        int getSrcmemid();

        /**
         * <pre>
         *发起人的白板标识 取微秒级的时间作标识 白板标识使用
         * </pre>
         *
         * <code>fixed64 srcwbid = 3;</code>
         */
        long getSrcwbid();
    }
    /**
     * <pre>
     *被邀请人拒绝加入你发起的白板(callback/call)
     *被邀请人退出了你发起的白板(callback)
     *被邀请人加入了你发起的白板(callback/call)
     *type:Pb_TYPE_MEET_INTERFACE_WHITEBOARD
     *method: reject&#92;exit&#92;enter
     * </pre>
     *
     * Protobuf type {@code pbui_Type_MeetWhiteBoardOper}
     */
    public  static final class pbui_Type_MeetWhiteBoardOper extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Type_MeetWhiteBoardOper, pbui_Type_MeetWhiteBoardOper.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Type_MeetWhiteBoardOper)
            pbui_Type_MeetWhiteBoardOperOrBuilder {
        private pbui_Type_MeetWhiteBoardOper() {
        }
        public static final int OPERMEMBERID_FIELD_NUMBER = 1;
        private int opermemberid_;
        /**
         * <pre>
         *当前该命令的人员ID
         * </pre>
         *
         * <code>fixed32 opermemberid = 1;</code>
         */
        public int getOpermemberid() {
            return opermemberid_;
        }
        /**
         * <pre>
         *当前该命令的人员ID
         * </pre>
         *
         * <code>fixed32 opermemberid = 1;</code>
         */
        private void setOpermemberid(int value) {

            opermemberid_ = value;
        }
        /**
         * <pre>
         *当前该命令的人员ID
         * </pre>
         *
         * <code>fixed32 opermemberid = 1;</code>
         */
        private void clearOpermemberid() {

            opermemberid_ = 0;
        }

        public static final int SRCMEMID_FIELD_NUMBER = 2;
        private int srcmemid_;
        /**
         * <pre>
         *发起人的人员ID 白板标识使用
         * </pre>
         *
         * <code>fixed32 srcmemid = 2;</code>
         */
        public int getSrcmemid() {
            return srcmemid_;
        }
        /**
         * <pre>
         *发起人的人员ID 白板标识使用
         * </pre>
         *
         * <code>fixed32 srcmemid = 2;</code>
         */
        private void setSrcmemid(int value) {

            srcmemid_ = value;
        }
        /**
         * <pre>
         *发起人的人员ID 白板标识使用
         * </pre>
         *
         * <code>fixed32 srcmemid = 2;</code>
         */
        private void clearSrcmemid() {

            srcmemid_ = 0;
        }

        public static final int SRCWBID_FIELD_NUMBER = 3;
        private long srcwbid_;
        /**
         * <pre>
         *发起人的白板标识 取微秒级的时间作标识 白板标识使用
         * </pre>
         *
         * <code>fixed64 srcwbid = 3;</code>
         */
        public long getSrcwbid() {
            return srcwbid_;
        }
        /**
         * <pre>
         *发起人的白板标识 取微秒级的时间作标识 白板标识使用
         * </pre>
         *
         * <code>fixed64 srcwbid = 3;</code>
         */
        private void setSrcwbid(long value) {

            srcwbid_ = value;
        }
        /**
         * <pre>
         *发起人的白板标识 取微秒级的时间作标识 白板标识使用
         * </pre>
         *
         * <code>fixed64 srcwbid = 3;</code>
         */
        private void clearSrcwbid() {

            srcwbid_ = 0L;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (opermemberid_ != 0) {
                output.writeFixed32(1, opermemberid_);
            }
            if (srcmemid_ != 0) {
                output.writeFixed32(2, srcmemid_);
            }
            if (srcwbid_ != 0L) {
                output.writeFixed64(3, srcwbid_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (opermemberid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(1, opermemberid_);
            }
            if (srcmemid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(2, srcmemid_);
            }
            if (srcwbid_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed64Size(3, srcwbid_);
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardOper parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardOper parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardOper parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardOper parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardOper parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardOper parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardOper parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardOper parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardOper parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardOper parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardOper parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardOper parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardOper prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *被邀请人拒绝加入你发起的白板(callback/call)
         *被邀请人退出了你发起的白板(callback)
         *被邀请人加入了你发起的白板(callback/call)
         *type:Pb_TYPE_MEET_INTERFACE_WHITEBOARD
         *method: reject&#92;exit&#92;enter
         * </pre>
         *
         * Protobuf type {@code pbui_Type_MeetWhiteBoardOper}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardOper, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Type_MeetWhiteBoardOper)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardOperOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardOper.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <pre>
             *当前该命令的人员ID
             * </pre>
             *
             * <code>fixed32 opermemberid = 1;</code>
             */
            public int getOpermemberid() {
                return instance.getOpermemberid();
            }
            /**
             * <pre>
             *当前该命令的人员ID
             * </pre>
             *
             * <code>fixed32 opermemberid = 1;</code>
             */
            public Builder setOpermemberid(int value) {
                copyOnWrite();
                instance.setOpermemberid(value);
                return this;
            }
            /**
             * <pre>
             *当前该命令的人员ID
             * </pre>
             *
             * <code>fixed32 opermemberid = 1;</code>
             */
            public Builder clearOpermemberid() {
                copyOnWrite();
                instance.clearOpermemberid();
                return this;
            }

            /**
             * <pre>
             *发起人的人员ID 白板标识使用
             * </pre>
             *
             * <code>fixed32 srcmemid = 2;</code>
             */
            public int getSrcmemid() {
                return instance.getSrcmemid();
            }
            /**
             * <pre>
             *发起人的人员ID 白板标识使用
             * </pre>
             *
             * <code>fixed32 srcmemid = 2;</code>
             */
            public Builder setSrcmemid(int value) {
                copyOnWrite();
                instance.setSrcmemid(value);
                return this;
            }
            /**
             * <pre>
             *发起人的人员ID 白板标识使用
             * </pre>
             *
             * <code>fixed32 srcmemid = 2;</code>
             */
            public Builder clearSrcmemid() {
                copyOnWrite();
                instance.clearSrcmemid();
                return this;
            }

            /**
             * <pre>
             *发起人的白板标识 取微秒级的时间作标识 白板标识使用
             * </pre>
             *
             * <code>fixed64 srcwbid = 3;</code>
             */
            public long getSrcwbid() {
                return instance.getSrcwbid();
            }
            /**
             * <pre>
             *发起人的白板标识 取微秒级的时间作标识 白板标识使用
             * </pre>
             *
             * <code>fixed64 srcwbid = 3;</code>
             */
            public Builder setSrcwbid(long value) {
                copyOnWrite();
                instance.setSrcwbid(value);
                return this;
            }
            /**
             * <pre>
             *发起人的白板标识 取微秒级的时间作标识 白板标识使用
             * </pre>
             *
             * <code>fixed64 srcwbid = 3;</code>
             */
            public Builder clearSrcwbid() {
                copyOnWrite();
                instance.clearSrcwbid();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Type_MeetWhiteBoardOper)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardOper();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardOper other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardOper) arg1;
                    opermemberid_ = visitor.visitInt(opermemberid_ != 0, opermemberid_,
                            other.opermemberid_ != 0, other.opermemberid_);
                    srcmemid_ = visitor.visitInt(srcmemid_ != 0, srcmemid_,
                            other.srcmemid_ != 0, other.srcmemid_);
                    srcwbid_ = visitor.visitLong(srcwbid_ != 0L, srcwbid_,
                            other.srcwbid_ != 0L, other.srcwbid_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 13: {

                                    opermemberid_ = input.readFixed32();
                                    break;
                                }
                                case 21: {

                                    srcmemid_ = input.readFixed32();
                                    break;
                                }
                                case 25: {

                                    srcwbid_ = input.readFixed64();
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardOper.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Type_MeetWhiteBoardOper)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardOper DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Type_MeetWhiteBoardOper();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardOper getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Type_MeetWhiteBoardOper> PARSER;

        public static com.google.protobuf.Parser<pbui_Type_MeetWhiteBoardOper> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Type_MeetClearWhiteBoardOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Type_MeetClearWhiteBoard)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <pre>
         *操作ID 终端计算产生 为0表示清除所有等于opermemberid的白板操作
         * </pre>
         *
         * <code>fixed32 operid = 1;</code>
         */
        int getOperid();

        /**
         * <pre>
         *当前该命令的人员ID 为0表示清除所有等于opermemberid的白板操作
         * </pre>
         *
         * <code>fixed32 opermemberid = 2;</code>
         */
        int getOpermemberid();

        /**
         * <pre>
         *发起人的人员ID 白板标识使用
         * </pre>
         *
         * <code>fixed32 srcmemid = 3;</code>
         */
        int getSrcmemid();

        /**
         * <pre>
         *发起人的白板标识 取微秒级的时间作标识 白板标识使用
         * </pre>
         *
         * <code>fixed64 srcwbid = 4;</code>
         */
        long getSrcwbid();

        /**
         * <pre>
         *时间戳  微秒
         * </pre>
         *
         * <code>fixed64 utcstamp = 5;</code>
         */
        long getUtcstamp();

        /**
         * <pre>
         *图形类型 为0表示清除所有等于figuretype的白板操作
         * </pre>
         *
         * <code>fixed32 figuretype = 6;</code>
         */
        int getFiguretype();
    }
    /**
     * <pre>
     *白板删除和清空记录通知
     *callback
     *type:Pb_TYPE_MEET_INTERFACE_WHITEBOARD
     *method: clear, del
     * </pre>
     *
     * Protobuf type {@code pbui_Type_MeetClearWhiteBoard}
     */
    public  static final class pbui_Type_MeetClearWhiteBoard extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Type_MeetClearWhiteBoard, pbui_Type_MeetClearWhiteBoard.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Type_MeetClearWhiteBoard)
            pbui_Type_MeetClearWhiteBoardOrBuilder {
        private pbui_Type_MeetClearWhiteBoard() {
        }
        public static final int OPERID_FIELD_NUMBER = 1;
        private int operid_;
        /**
         * <pre>
         *操作ID 终端计算产生 为0表示清除所有等于opermemberid的白板操作
         * </pre>
         *
         * <code>fixed32 operid = 1;</code>
         */
        public int getOperid() {
            return operid_;
        }
        /**
         * <pre>
         *操作ID 终端计算产生 为0表示清除所有等于opermemberid的白板操作
         * </pre>
         *
         * <code>fixed32 operid = 1;</code>
         */
        private void setOperid(int value) {

            operid_ = value;
        }
        /**
         * <pre>
         *操作ID 终端计算产生 为0表示清除所有等于opermemberid的白板操作
         * </pre>
         *
         * <code>fixed32 operid = 1;</code>
         */
        private void clearOperid() {

            operid_ = 0;
        }

        public static final int OPERMEMBERID_FIELD_NUMBER = 2;
        private int opermemberid_;
        /**
         * <pre>
         *当前该命令的人员ID 为0表示清除所有等于opermemberid的白板操作
         * </pre>
         *
         * <code>fixed32 opermemberid = 2;</code>
         */
        public int getOpermemberid() {
            return opermemberid_;
        }
        /**
         * <pre>
         *当前该命令的人员ID 为0表示清除所有等于opermemberid的白板操作
         * </pre>
         *
         * <code>fixed32 opermemberid = 2;</code>
         */
        private void setOpermemberid(int value) {

            opermemberid_ = value;
        }
        /**
         * <pre>
         *当前该命令的人员ID 为0表示清除所有等于opermemberid的白板操作
         * </pre>
         *
         * <code>fixed32 opermemberid = 2;</code>
         */
        private void clearOpermemberid() {

            opermemberid_ = 0;
        }

        public static final int SRCMEMID_FIELD_NUMBER = 3;
        private int srcmemid_;
        /**
         * <pre>
         *发起人的人员ID 白板标识使用
         * </pre>
         *
         * <code>fixed32 srcmemid = 3;</code>
         */
        public int getSrcmemid() {
            return srcmemid_;
        }
        /**
         * <pre>
         *发起人的人员ID 白板标识使用
         * </pre>
         *
         * <code>fixed32 srcmemid = 3;</code>
         */
        private void setSrcmemid(int value) {

            srcmemid_ = value;
        }
        /**
         * <pre>
         *发起人的人员ID 白板标识使用
         * </pre>
         *
         * <code>fixed32 srcmemid = 3;</code>
         */
        private void clearSrcmemid() {

            srcmemid_ = 0;
        }

        public static final int SRCWBID_FIELD_NUMBER = 4;
        private long srcwbid_;
        /**
         * <pre>
         *发起人的白板标识 取微秒级的时间作标识 白板标识使用
         * </pre>
         *
         * <code>fixed64 srcwbid = 4;</code>
         */
        public long getSrcwbid() {
            return srcwbid_;
        }
        /**
         * <pre>
         *发起人的白板标识 取微秒级的时间作标识 白板标识使用
         * </pre>
         *
         * <code>fixed64 srcwbid = 4;</code>
         */
        private void setSrcwbid(long value) {

            srcwbid_ = value;
        }
        /**
         * <pre>
         *发起人的白板标识 取微秒级的时间作标识 白板标识使用
         * </pre>
         *
         * <code>fixed64 srcwbid = 4;</code>
         */
        private void clearSrcwbid() {

            srcwbid_ = 0L;
        }

        public static final int UTCSTAMP_FIELD_NUMBER = 5;
        private long utcstamp_;
        /**
         * <pre>
         *时间戳  微秒
         * </pre>
         *
         * <code>fixed64 utcstamp = 5;</code>
         */
        public long getUtcstamp() {
            return utcstamp_;
        }
        /**
         * <pre>
         *时间戳  微秒
         * </pre>
         *
         * <code>fixed64 utcstamp = 5;</code>
         */
        private void setUtcstamp(long value) {

            utcstamp_ = value;
        }
        /**
         * <pre>
         *时间戳  微秒
         * </pre>
         *
         * <code>fixed64 utcstamp = 5;</code>
         */
        private void clearUtcstamp() {

            utcstamp_ = 0L;
        }

        public static final int FIGURETYPE_FIELD_NUMBER = 6;
        private int figuretype_;
        /**
         * <pre>
         *图形类型 为0表示清除所有等于figuretype的白板操作
         * </pre>
         *
         * <code>fixed32 figuretype = 6;</code>
         */
        public int getFiguretype() {
            return figuretype_;
        }
        /**
         * <pre>
         *图形类型 为0表示清除所有等于figuretype的白板操作
         * </pre>
         *
         * <code>fixed32 figuretype = 6;</code>
         */
        private void setFiguretype(int value) {

            figuretype_ = value;
        }
        /**
         * <pre>
         *图形类型 为0表示清除所有等于figuretype的白板操作
         * </pre>
         *
         * <code>fixed32 figuretype = 6;</code>
         */
        private void clearFiguretype() {

            figuretype_ = 0;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (operid_ != 0) {
                output.writeFixed32(1, operid_);
            }
            if (opermemberid_ != 0) {
                output.writeFixed32(2, opermemberid_);
            }
            if (srcmemid_ != 0) {
                output.writeFixed32(3, srcmemid_);
            }
            if (srcwbid_ != 0L) {
                output.writeFixed64(4, srcwbid_);
            }
            if (utcstamp_ != 0L) {
                output.writeFixed64(5, utcstamp_);
            }
            if (figuretype_ != 0) {
                output.writeFixed32(6, figuretype_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (operid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(1, operid_);
            }
            if (opermemberid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(2, opermemberid_);
            }
            if (srcmemid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(3, srcmemid_);
            }
            if (srcwbid_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed64Size(4, srcwbid_);
            }
            if (utcstamp_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed64Size(5, utcstamp_);
            }
            if (figuretype_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(6, figuretype_);
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetClearWhiteBoard parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetClearWhiteBoard parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetClearWhiteBoard parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetClearWhiteBoard parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetClearWhiteBoard parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetClearWhiteBoard parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetClearWhiteBoard parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetClearWhiteBoard parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetClearWhiteBoard parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetClearWhiteBoard parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetClearWhiteBoard parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetClearWhiteBoard parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetClearWhiteBoard prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *白板删除和清空记录通知
         *callback
         *type:Pb_TYPE_MEET_INTERFACE_WHITEBOARD
         *method: clear, del
         * </pre>
         *
         * Protobuf type {@code pbui_Type_MeetClearWhiteBoard}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetClearWhiteBoard, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Type_MeetClearWhiteBoard)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetClearWhiteBoardOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetClearWhiteBoard.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <pre>
             *操作ID 终端计算产生 为0表示清除所有等于opermemberid的白板操作
             * </pre>
             *
             * <code>fixed32 operid = 1;</code>
             */
            public int getOperid() {
                return instance.getOperid();
            }
            /**
             * <pre>
             *操作ID 终端计算产生 为0表示清除所有等于opermemberid的白板操作
             * </pre>
             *
             * <code>fixed32 operid = 1;</code>
             */
            public Builder setOperid(int value) {
                copyOnWrite();
                instance.setOperid(value);
                return this;
            }
            /**
             * <pre>
             *操作ID 终端计算产生 为0表示清除所有等于opermemberid的白板操作
             * </pre>
             *
             * <code>fixed32 operid = 1;</code>
             */
            public Builder clearOperid() {
                copyOnWrite();
                instance.clearOperid();
                return this;
            }

            /**
             * <pre>
             *当前该命令的人员ID 为0表示清除所有等于opermemberid的白板操作
             * </pre>
             *
             * <code>fixed32 opermemberid = 2;</code>
             */
            public int getOpermemberid() {
                return instance.getOpermemberid();
            }
            /**
             * <pre>
             *当前该命令的人员ID 为0表示清除所有等于opermemberid的白板操作
             * </pre>
             *
             * <code>fixed32 opermemberid = 2;</code>
             */
            public Builder setOpermemberid(int value) {
                copyOnWrite();
                instance.setOpermemberid(value);
                return this;
            }
            /**
             * <pre>
             *当前该命令的人员ID 为0表示清除所有等于opermemberid的白板操作
             * </pre>
             *
             * <code>fixed32 opermemberid = 2;</code>
             */
            public Builder clearOpermemberid() {
                copyOnWrite();
                instance.clearOpermemberid();
                return this;
            }

            /**
             * <pre>
             *发起人的人员ID 白板标识使用
             * </pre>
             *
             * <code>fixed32 srcmemid = 3;</code>
             */
            public int getSrcmemid() {
                return instance.getSrcmemid();
            }
            /**
             * <pre>
             *发起人的人员ID 白板标识使用
             * </pre>
             *
             * <code>fixed32 srcmemid = 3;</code>
             */
            public Builder setSrcmemid(int value) {
                copyOnWrite();
                instance.setSrcmemid(value);
                return this;
            }
            /**
             * <pre>
             *发起人的人员ID 白板标识使用
             * </pre>
             *
             * <code>fixed32 srcmemid = 3;</code>
             */
            public Builder clearSrcmemid() {
                copyOnWrite();
                instance.clearSrcmemid();
                return this;
            }

            /**
             * <pre>
             *发起人的白板标识 取微秒级的时间作标识 白板标识使用
             * </pre>
             *
             * <code>fixed64 srcwbid = 4;</code>
             */
            public long getSrcwbid() {
                return instance.getSrcwbid();
            }
            /**
             * <pre>
             *发起人的白板标识 取微秒级的时间作标识 白板标识使用
             * </pre>
             *
             * <code>fixed64 srcwbid = 4;</code>
             */
            public Builder setSrcwbid(long value) {
                copyOnWrite();
                instance.setSrcwbid(value);
                return this;
            }
            /**
             * <pre>
             *发起人的白板标识 取微秒级的时间作标识 白板标识使用
             * </pre>
             *
             * <code>fixed64 srcwbid = 4;</code>
             */
            public Builder clearSrcwbid() {
                copyOnWrite();
                instance.clearSrcwbid();
                return this;
            }

            /**
             * <pre>
             *时间戳  微秒
             * </pre>
             *
             * <code>fixed64 utcstamp = 5;</code>
             */
            public long getUtcstamp() {
                return instance.getUtcstamp();
            }
            /**
             * <pre>
             *时间戳  微秒
             * </pre>
             *
             * <code>fixed64 utcstamp = 5;</code>
             */
            public Builder setUtcstamp(long value) {
                copyOnWrite();
                instance.setUtcstamp(value);
                return this;
            }
            /**
             * <pre>
             *时间戳  微秒
             * </pre>
             *
             * <code>fixed64 utcstamp = 5;</code>
             */
            public Builder clearUtcstamp() {
                copyOnWrite();
                instance.clearUtcstamp();
                return this;
            }

            /**
             * <pre>
             *图形类型 为0表示清除所有等于figuretype的白板操作
             * </pre>
             *
             * <code>fixed32 figuretype = 6;</code>
             */
            public int getFiguretype() {
                return instance.getFiguretype();
            }
            /**
             * <pre>
             *图形类型 为0表示清除所有等于figuretype的白板操作
             * </pre>
             *
             * <code>fixed32 figuretype = 6;</code>
             */
            public Builder setFiguretype(int value) {
                copyOnWrite();
                instance.setFiguretype(value);
                return this;
            }
            /**
             * <pre>
             *图形类型 为0表示清除所有等于figuretype的白板操作
             * </pre>
             *
             * <code>fixed32 figuretype = 6;</code>
             */
            public Builder clearFiguretype() {
                copyOnWrite();
                instance.clearFiguretype();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Type_MeetClearWhiteBoard)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetClearWhiteBoard();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetClearWhiteBoard other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetClearWhiteBoard) arg1;
                    operid_ = visitor.visitInt(operid_ != 0, operid_,
                            other.operid_ != 0, other.operid_);
                    opermemberid_ = visitor.visitInt(opermemberid_ != 0, opermemberid_,
                            other.opermemberid_ != 0, other.opermemberid_);
                    srcmemid_ = visitor.visitInt(srcmemid_ != 0, srcmemid_,
                            other.srcmemid_ != 0, other.srcmemid_);
                    srcwbid_ = visitor.visitLong(srcwbid_ != 0L, srcwbid_,
                            other.srcwbid_ != 0L, other.srcwbid_);
                    utcstamp_ = visitor.visitLong(utcstamp_ != 0L, utcstamp_,
                            other.utcstamp_ != 0L, other.utcstamp_);
                    figuretype_ = visitor.visitInt(figuretype_ != 0, figuretype_,
                            other.figuretype_ != 0, other.figuretype_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 13: {

                                    operid_ = input.readFixed32();
                                    break;
                                }
                                case 21: {

                                    opermemberid_ = input.readFixed32();
                                    break;
                                }
                                case 29: {

                                    srcmemid_ = input.readFixed32();
                                    break;
                                }
                                case 33: {

                                    srcwbid_ = input.readFixed64();
                                    break;
                                }
                                case 41: {

                                    utcstamp_ = input.readFixed64();
                                    break;
                                }
                                case 53: {

                                    figuretype_ = input.readFixed32();
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetClearWhiteBoard.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Type_MeetClearWhiteBoard)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetClearWhiteBoard DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Type_MeetClearWhiteBoard();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetClearWhiteBoard getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Type_MeetClearWhiteBoard> PARSER;

        public static com.google.protobuf.Parser<pbui_Type_MeetClearWhiteBoard> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Type_MeetDoClearWhiteBoardOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Type_MeetDoClearWhiteBoard)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <pre>
         *需要删除的人员ID 为0表示清除所有等于人员的白板操作
         * </pre>
         *
         * <code>fixed32 memberid = 1;</code>
         */
        int getMemberid();

        /**
         * <pre>
         *操作ID 终端计算产生 为0表示清除所有等于opermemberid的白板操作
         * </pre>
         *
         * <code>fixed32 operid = 2;</code>
         */
        int getOperid();

        /**
         * <pre>
         *当前该命令的人员ID
         * </pre>
         *
         * <code>fixed32 opermemberid = 3;</code>
         */
        int getOpermemberid();

        /**
         * <pre>
         *发起人的人员ID 白板标识使用
         * </pre>
         *
         * <code>fixed32 srcmemid = 4;</code>
         */
        int getSrcmemid();

        /**
         * <pre>
         *发起人的白板标识 取微秒级的时间作标识 白板标识使用
         * </pre>
         *
         * <code>fixed32 srcwbid = 5;</code>
         */
        int getSrcwbid();

        /**
         * <pre>
         *时间戳 微秒
         * </pre>
         *
         * <code>fixed64 utcstamp = 6;</code>
         */
        long getUtcstamp();

        /**
         * <pre>
         *图形类型 为0表示清除所有类型的白板操作
         * </pre>
         *
         * <code>fixed32 figuretype = 7;</code>
         */
        int getFiguretype();
    }
    /**
     * <pre>
     *白板删除和清空记录操作
     *(call)
     *type:Pb_TYPE_MEET_INTERFACE_WHITEBOARD
     *method: delall, del
     * </pre>
     *
     * Protobuf type {@code pbui_Type_MeetDoClearWhiteBoard}
     */
    public  static final class pbui_Type_MeetDoClearWhiteBoard extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Type_MeetDoClearWhiteBoard, pbui_Type_MeetDoClearWhiteBoard.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Type_MeetDoClearWhiteBoard)
            pbui_Type_MeetDoClearWhiteBoardOrBuilder {
        private pbui_Type_MeetDoClearWhiteBoard() {
        }
        public static final int MEMBERID_FIELD_NUMBER = 1;
        private int memberid_;
        /**
         * <pre>
         *需要删除的人员ID 为0表示清除所有等于人员的白板操作
         * </pre>
         *
         * <code>fixed32 memberid = 1;</code>
         */
        public int getMemberid() {
            return memberid_;
        }
        /**
         * <pre>
         *需要删除的人员ID 为0表示清除所有等于人员的白板操作
         * </pre>
         *
         * <code>fixed32 memberid = 1;</code>
         */
        private void setMemberid(int value) {

            memberid_ = value;
        }
        /**
         * <pre>
         *需要删除的人员ID 为0表示清除所有等于人员的白板操作
         * </pre>
         *
         * <code>fixed32 memberid = 1;</code>
         */
        private void clearMemberid() {

            memberid_ = 0;
        }

        public static final int OPERID_FIELD_NUMBER = 2;
        private int operid_;
        /**
         * <pre>
         *操作ID 终端计算产生 为0表示清除所有等于opermemberid的白板操作
         * </pre>
         *
         * <code>fixed32 operid = 2;</code>
         */
        public int getOperid() {
            return operid_;
        }
        /**
         * <pre>
         *操作ID 终端计算产生 为0表示清除所有等于opermemberid的白板操作
         * </pre>
         *
         * <code>fixed32 operid = 2;</code>
         */
        private void setOperid(int value) {

            operid_ = value;
        }
        /**
         * <pre>
         *操作ID 终端计算产生 为0表示清除所有等于opermemberid的白板操作
         * </pre>
         *
         * <code>fixed32 operid = 2;</code>
         */
        private void clearOperid() {

            operid_ = 0;
        }

        public static final int OPERMEMBERID_FIELD_NUMBER = 3;
        private int opermemberid_;
        /**
         * <pre>
         *当前该命令的人员ID
         * </pre>
         *
         * <code>fixed32 opermemberid = 3;</code>
         */
        public int getOpermemberid() {
            return opermemberid_;
        }
        /**
         * <pre>
         *当前该命令的人员ID
         * </pre>
         *
         * <code>fixed32 opermemberid = 3;</code>
         */
        private void setOpermemberid(int value) {

            opermemberid_ = value;
        }
        /**
         * <pre>
         *当前该命令的人员ID
         * </pre>
         *
         * <code>fixed32 opermemberid = 3;</code>
         */
        private void clearOpermemberid() {

            opermemberid_ = 0;
        }

        public static final int SRCMEMID_FIELD_NUMBER = 4;
        private int srcmemid_;
        /**
         * <pre>
         *发起人的人员ID 白板标识使用
         * </pre>
         *
         * <code>fixed32 srcmemid = 4;</code>
         */
        public int getSrcmemid() {
            return srcmemid_;
        }
        /**
         * <pre>
         *发起人的人员ID 白板标识使用
         * </pre>
         *
         * <code>fixed32 srcmemid = 4;</code>
         */
        private void setSrcmemid(int value) {

            srcmemid_ = value;
        }
        /**
         * <pre>
         *发起人的人员ID 白板标识使用
         * </pre>
         *
         * <code>fixed32 srcmemid = 4;</code>
         */
        private void clearSrcmemid() {

            srcmemid_ = 0;
        }

        public static final int SRCWBID_FIELD_NUMBER = 5;
        private int srcwbid_;
        /**
         * <pre>
         *发起人的白板标识 取微秒级的时间作标识 白板标识使用
         * </pre>
         *
         * <code>fixed32 srcwbid = 5;</code>
         */
        public int getSrcwbid() {
            return srcwbid_;
        }
        /**
         * <pre>
         *发起人的白板标识 取微秒级的时间作标识 白板标识使用
         * </pre>
         *
         * <code>fixed32 srcwbid = 5;</code>
         */
        private void setSrcwbid(int value) {

            srcwbid_ = value;
        }
        /**
         * <pre>
         *发起人的白板标识 取微秒级的时间作标识 白板标识使用
         * </pre>
         *
         * <code>fixed32 srcwbid = 5;</code>
         */
        private void clearSrcwbid() {

            srcwbid_ = 0;
        }

        public static final int UTCSTAMP_FIELD_NUMBER = 6;
        private long utcstamp_;
        /**
         * <pre>
         *时间戳 微秒
         * </pre>
         *
         * <code>fixed64 utcstamp = 6;</code>
         */
        public long getUtcstamp() {
            return utcstamp_;
        }
        /**
         * <pre>
         *时间戳 微秒
         * </pre>
         *
         * <code>fixed64 utcstamp = 6;</code>
         */
        private void setUtcstamp(long value) {

            utcstamp_ = value;
        }
        /**
         * <pre>
         *时间戳 微秒
         * </pre>
         *
         * <code>fixed64 utcstamp = 6;</code>
         */
        private void clearUtcstamp() {

            utcstamp_ = 0L;
        }

        public static final int FIGURETYPE_FIELD_NUMBER = 7;
        private int figuretype_;
        /**
         * <pre>
         *图形类型 为0表示清除所有类型的白板操作
         * </pre>
         *
         * <code>fixed32 figuretype = 7;</code>
         */
        public int getFiguretype() {
            return figuretype_;
        }
        /**
         * <pre>
         *图形类型 为0表示清除所有类型的白板操作
         * </pre>
         *
         * <code>fixed32 figuretype = 7;</code>
         */
        private void setFiguretype(int value) {

            figuretype_ = value;
        }
        /**
         * <pre>
         *图形类型 为0表示清除所有类型的白板操作
         * </pre>
         *
         * <code>fixed32 figuretype = 7;</code>
         */
        private void clearFiguretype() {

            figuretype_ = 0;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (memberid_ != 0) {
                output.writeFixed32(1, memberid_);
            }
            if (operid_ != 0) {
                output.writeFixed32(2, operid_);
            }
            if (opermemberid_ != 0) {
                output.writeFixed32(3, opermemberid_);
            }
            if (srcmemid_ != 0) {
                output.writeFixed32(4, srcmemid_);
            }
            if (srcwbid_ != 0) {
                output.writeFixed32(5, srcwbid_);
            }
            if (utcstamp_ != 0L) {
                output.writeFixed64(6, utcstamp_);
            }
            if (figuretype_ != 0) {
                output.writeFixed32(7, figuretype_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (memberid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(1, memberid_);
            }
            if (operid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(2, operid_);
            }
            if (opermemberid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(3, opermemberid_);
            }
            if (srcmemid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(4, srcmemid_);
            }
            if (srcwbid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(5, srcwbid_);
            }
            if (utcstamp_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed64Size(6, utcstamp_);
            }
            if (figuretype_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(7, figuretype_);
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoClearWhiteBoard parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoClearWhiteBoard parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoClearWhiteBoard parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoClearWhiteBoard parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoClearWhiteBoard parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoClearWhiteBoard parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoClearWhiteBoard parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoClearWhiteBoard parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoClearWhiteBoard parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoClearWhiteBoard parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoClearWhiteBoard parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoClearWhiteBoard parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoClearWhiteBoard prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *白板删除和清空记录操作
         *(call)
         *type:Pb_TYPE_MEET_INTERFACE_WHITEBOARD
         *method: delall, del
         * </pre>
         *
         * Protobuf type {@code pbui_Type_MeetDoClearWhiteBoard}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoClearWhiteBoard, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Type_MeetDoClearWhiteBoard)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoClearWhiteBoardOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoClearWhiteBoard.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <pre>
             *需要删除的人员ID 为0表示清除所有等于人员的白板操作
             * </pre>
             *
             * <code>fixed32 memberid = 1;</code>
             */
            public int getMemberid() {
                return instance.getMemberid();
            }
            /**
             * <pre>
             *需要删除的人员ID 为0表示清除所有等于人员的白板操作
             * </pre>
             *
             * <code>fixed32 memberid = 1;</code>
             */
            public Builder setMemberid(int value) {
                copyOnWrite();
                instance.setMemberid(value);
                return this;
            }
            /**
             * <pre>
             *需要删除的人员ID 为0表示清除所有等于人员的白板操作
             * </pre>
             *
             * <code>fixed32 memberid = 1;</code>
             */
            public Builder clearMemberid() {
                copyOnWrite();
                instance.clearMemberid();
                return this;
            }

            /**
             * <pre>
             *操作ID 终端计算产生 为0表示清除所有等于opermemberid的白板操作
             * </pre>
             *
             * <code>fixed32 operid = 2;</code>
             */
            public int getOperid() {
                return instance.getOperid();
            }
            /**
             * <pre>
             *操作ID 终端计算产生 为0表示清除所有等于opermemberid的白板操作
             * </pre>
             *
             * <code>fixed32 operid = 2;</code>
             */
            public Builder setOperid(int value) {
                copyOnWrite();
                instance.setOperid(value);
                return this;
            }
            /**
             * <pre>
             *操作ID 终端计算产生 为0表示清除所有等于opermemberid的白板操作
             * </pre>
             *
             * <code>fixed32 operid = 2;</code>
             */
            public Builder clearOperid() {
                copyOnWrite();
                instance.clearOperid();
                return this;
            }

            /**
             * <pre>
             *当前该命令的人员ID
             * </pre>
             *
             * <code>fixed32 opermemberid = 3;</code>
             */
            public int getOpermemberid() {
                return instance.getOpermemberid();
            }
            /**
             * <pre>
             *当前该命令的人员ID
             * </pre>
             *
             * <code>fixed32 opermemberid = 3;</code>
             */
            public Builder setOpermemberid(int value) {
                copyOnWrite();
                instance.setOpermemberid(value);
                return this;
            }
            /**
             * <pre>
             *当前该命令的人员ID
             * </pre>
             *
             * <code>fixed32 opermemberid = 3;</code>
             */
            public Builder clearOpermemberid() {
                copyOnWrite();
                instance.clearOpermemberid();
                return this;
            }

            /**
             * <pre>
             *发起人的人员ID 白板标识使用
             * </pre>
             *
             * <code>fixed32 srcmemid = 4;</code>
             */
            public int getSrcmemid() {
                return instance.getSrcmemid();
            }
            /**
             * <pre>
             *发起人的人员ID 白板标识使用
             * </pre>
             *
             * <code>fixed32 srcmemid = 4;</code>
             */
            public Builder setSrcmemid(int value) {
                copyOnWrite();
                instance.setSrcmemid(value);
                return this;
            }
            /**
             * <pre>
             *发起人的人员ID 白板标识使用
             * </pre>
             *
             * <code>fixed32 srcmemid = 4;</code>
             */
            public Builder clearSrcmemid() {
                copyOnWrite();
                instance.clearSrcmemid();
                return this;
            }

            /**
             * <pre>
             *发起人的白板标识 取微秒级的时间作标识 白板标识使用
             * </pre>
             *
             * <code>fixed32 srcwbid = 5;</code>
             */
            public int getSrcwbid() {
                return instance.getSrcwbid();
            }
            /**
             * <pre>
             *发起人的白板标识 取微秒级的时间作标识 白板标识使用
             * </pre>
             *
             * <code>fixed32 srcwbid = 5;</code>
             */
            public Builder setSrcwbid(int value) {
                copyOnWrite();
                instance.setSrcwbid(value);
                return this;
            }
            /**
             * <pre>
             *发起人的白板标识 取微秒级的时间作标识 白板标识使用
             * </pre>
             *
             * <code>fixed32 srcwbid = 5;</code>
             */
            public Builder clearSrcwbid() {
                copyOnWrite();
                instance.clearSrcwbid();
                return this;
            }

            /**
             * <pre>
             *时间戳 微秒
             * </pre>
             *
             * <code>fixed64 utcstamp = 6;</code>
             */
            public long getUtcstamp() {
                return instance.getUtcstamp();
            }
            /**
             * <pre>
             *时间戳 微秒
             * </pre>
             *
             * <code>fixed64 utcstamp = 6;</code>
             */
            public Builder setUtcstamp(long value) {
                copyOnWrite();
                instance.setUtcstamp(value);
                return this;
            }
            /**
             * <pre>
             *时间戳 微秒
             * </pre>
             *
             * <code>fixed64 utcstamp = 6;</code>
             */
            public Builder clearUtcstamp() {
                copyOnWrite();
                instance.clearUtcstamp();
                return this;
            }

            /**
             * <pre>
             *图形类型 为0表示清除所有类型的白板操作
             * </pre>
             *
             * <code>fixed32 figuretype = 7;</code>
             */
            public int getFiguretype() {
                return instance.getFiguretype();
            }
            /**
             * <pre>
             *图形类型 为0表示清除所有类型的白板操作
             * </pre>
             *
             * <code>fixed32 figuretype = 7;</code>
             */
            public Builder setFiguretype(int value) {
                copyOnWrite();
                instance.setFiguretype(value);
                return this;
            }
            /**
             * <pre>
             *图形类型 为0表示清除所有类型的白板操作
             * </pre>
             *
             * <code>fixed32 figuretype = 7;</code>
             */
            public Builder clearFiguretype() {
                copyOnWrite();
                instance.clearFiguretype();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Type_MeetDoClearWhiteBoard)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoClearWhiteBoard();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoClearWhiteBoard other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoClearWhiteBoard) arg1;
                    memberid_ = visitor.visitInt(memberid_ != 0, memberid_,
                            other.memberid_ != 0, other.memberid_);
                    operid_ = visitor.visitInt(operid_ != 0, operid_,
                            other.operid_ != 0, other.operid_);
                    opermemberid_ = visitor.visitInt(opermemberid_ != 0, opermemberid_,
                            other.opermemberid_ != 0, other.opermemberid_);
                    srcmemid_ = visitor.visitInt(srcmemid_ != 0, srcmemid_,
                            other.srcmemid_ != 0, other.srcmemid_);
                    srcwbid_ = visitor.visitInt(srcwbid_ != 0, srcwbid_,
                            other.srcwbid_ != 0, other.srcwbid_);
                    utcstamp_ = visitor.visitLong(utcstamp_ != 0L, utcstamp_,
                            other.utcstamp_ != 0L, other.utcstamp_);
                    figuretype_ = visitor.visitInt(figuretype_ != 0, figuretype_,
                            other.figuretype_ != 0, other.figuretype_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 13: {

                                    memberid_ = input.readFixed32();
                                    break;
                                }
                                case 21: {

                                    operid_ = input.readFixed32();
                                    break;
                                }
                                case 29: {

                                    opermemberid_ = input.readFixed32();
                                    break;
                                }
                                case 37: {

                                    srcmemid_ = input.readFixed32();
                                    break;
                                }
                                case 45: {

                                    srcwbid_ = input.readFixed32();
                                    break;
                                }
                                case 49: {

                                    utcstamp_ = input.readFixed64();
                                    break;
                                }
                                case 61: {

                                    figuretype_ = input.readFixed32();
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoClearWhiteBoard.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Type_MeetDoClearWhiteBoard)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoClearWhiteBoard DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Type_MeetDoClearWhiteBoard();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoClearWhiteBoard getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Type_MeetDoClearWhiteBoard> PARSER;

        public static com.google.protobuf.Parser<pbui_Type_MeetDoClearWhiteBoard> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Type_MeetWhiteBoardQueryOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Type_MeetWhiteBoardQuery)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <pre>
         *发起人的人员ID 白板标识使用
         * </pre>
         *
         * <code>fixed32 srcmemid = 1;</code>
         */
        int getSrcmemid();

        /**
         * <pre>
         *发起人的白板标识 取微秒级的时间作标识 白板标识使用
         * </pre>
         *
         * <code>fixed64 srcwbid = 2;</code>
         */
        long getSrcwbid();

        /**
         * <pre>
         *图形类型 必须指定一种类型,因为不同类型结构不同,不好解析,所以要按类型查询
         * </pre>
         *
         * <code>fixed32 figuretype = 3;</code>
         */
        int getFiguretype();
    }
    /**
     * <pre>
     *白板项普通查询
     *(call)
     *type:Pb_TYPE_MEET_INTERFACE_WHITEBOARD
     *method: query
     * </pre>
     *
     * Protobuf type {@code pbui_Type_MeetWhiteBoardQuery}
     */
    public  static final class pbui_Type_MeetWhiteBoardQuery extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Type_MeetWhiteBoardQuery, pbui_Type_MeetWhiteBoardQuery.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Type_MeetWhiteBoardQuery)
            pbui_Type_MeetWhiteBoardQueryOrBuilder {
        private pbui_Type_MeetWhiteBoardQuery() {
        }
        public static final int SRCMEMID_FIELD_NUMBER = 1;
        private int srcmemid_;
        /**
         * <pre>
         *发起人的人员ID 白板标识使用
         * </pre>
         *
         * <code>fixed32 srcmemid = 1;</code>
         */
        public int getSrcmemid() {
            return srcmemid_;
        }
        /**
         * <pre>
         *发起人的人员ID 白板标识使用
         * </pre>
         *
         * <code>fixed32 srcmemid = 1;</code>
         */
        private void setSrcmemid(int value) {

            srcmemid_ = value;
        }
        /**
         * <pre>
         *发起人的人员ID 白板标识使用
         * </pre>
         *
         * <code>fixed32 srcmemid = 1;</code>
         */
        private void clearSrcmemid() {

            srcmemid_ = 0;
        }

        public static final int SRCWBID_FIELD_NUMBER = 2;
        private long srcwbid_;
        /**
         * <pre>
         *发起人的白板标识 取微秒级的时间作标识 白板标识使用
         * </pre>
         *
         * <code>fixed64 srcwbid = 2;</code>
         */
        public long getSrcwbid() {
            return srcwbid_;
        }
        /**
         * <pre>
         *发起人的白板标识 取微秒级的时间作标识 白板标识使用
         * </pre>
         *
         * <code>fixed64 srcwbid = 2;</code>
         */
        private void setSrcwbid(long value) {

            srcwbid_ = value;
        }
        /**
         * <pre>
         *发起人的白板标识 取微秒级的时间作标识 白板标识使用
         * </pre>
         *
         * <code>fixed64 srcwbid = 2;</code>
         */
        private void clearSrcwbid() {

            srcwbid_ = 0L;
        }

        public static final int FIGURETYPE_FIELD_NUMBER = 3;
        private int figuretype_;
        /**
         * <pre>
         *图形类型 必须指定一种类型,因为不同类型结构不同,不好解析,所以要按类型查询
         * </pre>
         *
         * <code>fixed32 figuretype = 3;</code>
         */
        public int getFiguretype() {
            return figuretype_;
        }
        /**
         * <pre>
         *图形类型 必须指定一种类型,因为不同类型结构不同,不好解析,所以要按类型查询
         * </pre>
         *
         * <code>fixed32 figuretype = 3;</code>
         */
        private void setFiguretype(int value) {

            figuretype_ = value;
        }
        /**
         * <pre>
         *图形类型 必须指定一种类型,因为不同类型结构不同,不好解析,所以要按类型查询
         * </pre>
         *
         * <code>fixed32 figuretype = 3;</code>
         */
        private void clearFiguretype() {

            figuretype_ = 0;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (srcmemid_ != 0) {
                output.writeFixed32(1, srcmemid_);
            }
            if (srcwbid_ != 0L) {
                output.writeFixed64(2, srcwbid_);
            }
            if (figuretype_ != 0) {
                output.writeFixed32(3, figuretype_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (srcmemid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(1, srcmemid_);
            }
            if (srcwbid_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed64Size(2, srcwbid_);
            }
            if (figuretype_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(3, figuretype_);
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardQuery parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardQuery parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardQuery parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardQuery parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardQuery parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardQuery parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardQuery parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardQuery parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardQuery parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardQuery parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardQuery parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardQuery parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardQuery prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *白板项普通查询
         *(call)
         *type:Pb_TYPE_MEET_INTERFACE_WHITEBOARD
         *method: query
         * </pre>
         *
         * Protobuf type {@code pbui_Type_MeetWhiteBoardQuery}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardQuery, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Type_MeetWhiteBoardQuery)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardQueryOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardQuery.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <pre>
             *发起人的人员ID 白板标识使用
             * </pre>
             *
             * <code>fixed32 srcmemid = 1;</code>
             */
            public int getSrcmemid() {
                return instance.getSrcmemid();
            }
            /**
             * <pre>
             *发起人的人员ID 白板标识使用
             * </pre>
             *
             * <code>fixed32 srcmemid = 1;</code>
             */
            public Builder setSrcmemid(int value) {
                copyOnWrite();
                instance.setSrcmemid(value);
                return this;
            }
            /**
             * <pre>
             *发起人的人员ID 白板标识使用
             * </pre>
             *
             * <code>fixed32 srcmemid = 1;</code>
             */
            public Builder clearSrcmemid() {
                copyOnWrite();
                instance.clearSrcmemid();
                return this;
            }

            /**
             * <pre>
             *发起人的白板标识 取微秒级的时间作标识 白板标识使用
             * </pre>
             *
             * <code>fixed64 srcwbid = 2;</code>
             */
            public long getSrcwbid() {
                return instance.getSrcwbid();
            }
            /**
             * <pre>
             *发起人的白板标识 取微秒级的时间作标识 白板标识使用
             * </pre>
             *
             * <code>fixed64 srcwbid = 2;</code>
             */
            public Builder setSrcwbid(long value) {
                copyOnWrite();
                instance.setSrcwbid(value);
                return this;
            }
            /**
             * <pre>
             *发起人的白板标识 取微秒级的时间作标识 白板标识使用
             * </pre>
             *
             * <code>fixed64 srcwbid = 2;</code>
             */
            public Builder clearSrcwbid() {
                copyOnWrite();
                instance.clearSrcwbid();
                return this;
            }

            /**
             * <pre>
             *图形类型 必须指定一种类型,因为不同类型结构不同,不好解析,所以要按类型查询
             * </pre>
             *
             * <code>fixed32 figuretype = 3;</code>
             */
            public int getFiguretype() {
                return instance.getFiguretype();
            }
            /**
             * <pre>
             *图形类型 必须指定一种类型,因为不同类型结构不同,不好解析,所以要按类型查询
             * </pre>
             *
             * <code>fixed32 figuretype = 3;</code>
             */
            public Builder setFiguretype(int value) {
                copyOnWrite();
                instance.setFiguretype(value);
                return this;
            }
            /**
             * <pre>
             *图形类型 必须指定一种类型,因为不同类型结构不同,不好解析,所以要按类型查询
             * </pre>
             *
             * <code>fixed32 figuretype = 3;</code>
             */
            public Builder clearFiguretype() {
                copyOnWrite();
                instance.clearFiguretype();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Type_MeetWhiteBoardQuery)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardQuery();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardQuery other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardQuery) arg1;
                    srcmemid_ = visitor.visitInt(srcmemid_ != 0, srcmemid_,
                            other.srcmemid_ != 0, other.srcmemid_);
                    srcwbid_ = visitor.visitLong(srcwbid_ != 0L, srcwbid_,
                            other.srcwbid_ != 0L, other.srcwbid_);
                    figuretype_ = visitor.visitInt(figuretype_ != 0, figuretype_,
                            other.figuretype_ != 0, other.figuretype_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 13: {

                                    srcmemid_ = input.readFixed32();
                                    break;
                                }
                                case 17: {

                                    srcwbid_ = input.readFixed64();
                                    break;
                                }
                                case 29: {

                                    figuretype_ = input.readFixed32();
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardQuery.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Type_MeetWhiteBoardQuery)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardQuery DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Type_MeetWhiteBoardQuery();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardQuery getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Type_MeetWhiteBoardQuery> PARSER;

        public static com.google.protobuf.Parser<pbui_Type_MeetWhiteBoardQuery> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Type_MeetWhiteBoardComplexQueryOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Type_MeetWhiteBoardComplexQuery)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <pre>
         *发起人的人员ID 白板标识使用
         * </pre>
         *
         * <code>fixed32 srcmemid = 1;</code>
         */
        int getSrcmemid();

        /**
         * <pre>
         *发起人的白板标识 取微秒级的时间作标识 白板标识使用
         * </pre>
         *
         * <code>fixed64 srcwbid = 2;</code>
         */
        long getSrcwbid();

        /**
         * <pre>
         *图形类型 必须指定一种类型,因为不同类型结构不同,不好解析,所以要按类型查询
         * </pre>
         *
         * <code>fixed32 figuretype = 3;</code>
         */
        int getFiguretype();

        /**
         * <pre>
         *人员ID
         * </pre>
         *
         * <code>fixed32 opermemberid = 4;</code>
         */
        int getOpermemberid();
    }
    /**
     * <pre>
     *白板项高级查询
     *(call)
     *type:Pb_TYPE_MEET_INTERFACE_WHITEBOARD
     *method: complexquery
     * </pre>
     *
     * Protobuf type {@code pbui_Type_MeetWhiteBoardComplexQuery}
     */
    public  static final class pbui_Type_MeetWhiteBoardComplexQuery extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Type_MeetWhiteBoardComplexQuery, pbui_Type_MeetWhiteBoardComplexQuery.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Type_MeetWhiteBoardComplexQuery)
            pbui_Type_MeetWhiteBoardComplexQueryOrBuilder {
        private pbui_Type_MeetWhiteBoardComplexQuery() {
        }
        public static final int SRCMEMID_FIELD_NUMBER = 1;
        private int srcmemid_;
        /**
         * <pre>
         *发起人的人员ID 白板标识使用
         * </pre>
         *
         * <code>fixed32 srcmemid = 1;</code>
         */
        public int getSrcmemid() {
            return srcmemid_;
        }
        /**
         * <pre>
         *发起人的人员ID 白板标识使用
         * </pre>
         *
         * <code>fixed32 srcmemid = 1;</code>
         */
        private void setSrcmemid(int value) {

            srcmemid_ = value;
        }
        /**
         * <pre>
         *发起人的人员ID 白板标识使用
         * </pre>
         *
         * <code>fixed32 srcmemid = 1;</code>
         */
        private void clearSrcmemid() {

            srcmemid_ = 0;
        }

        public static final int SRCWBID_FIELD_NUMBER = 2;
        private long srcwbid_;
        /**
         * <pre>
         *发起人的白板标识 取微秒级的时间作标识 白板标识使用
         * </pre>
         *
         * <code>fixed64 srcwbid = 2;</code>
         */
        public long getSrcwbid() {
            return srcwbid_;
        }
        /**
         * <pre>
         *发起人的白板标识 取微秒级的时间作标识 白板标识使用
         * </pre>
         *
         * <code>fixed64 srcwbid = 2;</code>
         */
        private void setSrcwbid(long value) {

            srcwbid_ = value;
        }
        /**
         * <pre>
         *发起人的白板标识 取微秒级的时间作标识 白板标识使用
         * </pre>
         *
         * <code>fixed64 srcwbid = 2;</code>
         */
        private void clearSrcwbid() {

            srcwbid_ = 0L;
        }

        public static final int FIGURETYPE_FIELD_NUMBER = 3;
        private int figuretype_;
        /**
         * <pre>
         *图形类型 必须指定一种类型,因为不同类型结构不同,不好解析,所以要按类型查询
         * </pre>
         *
         * <code>fixed32 figuretype = 3;</code>
         */
        public int getFiguretype() {
            return figuretype_;
        }
        /**
         * <pre>
         *图形类型 必须指定一种类型,因为不同类型结构不同,不好解析,所以要按类型查询
         * </pre>
         *
         * <code>fixed32 figuretype = 3;</code>
         */
        private void setFiguretype(int value) {

            figuretype_ = value;
        }
        /**
         * <pre>
         *图形类型 必须指定一种类型,因为不同类型结构不同,不好解析,所以要按类型查询
         * </pre>
         *
         * <code>fixed32 figuretype = 3;</code>
         */
        private void clearFiguretype() {

            figuretype_ = 0;
        }

        public static final int OPERMEMBERID_FIELD_NUMBER = 4;
        private int opermemberid_;
        /**
         * <pre>
         *人员ID
         * </pre>
         *
         * <code>fixed32 opermemberid = 4;</code>
         */
        public int getOpermemberid() {
            return opermemberid_;
        }
        /**
         * <pre>
         *人员ID
         * </pre>
         *
         * <code>fixed32 opermemberid = 4;</code>
         */
        private void setOpermemberid(int value) {

            opermemberid_ = value;
        }
        /**
         * <pre>
         *人员ID
         * </pre>
         *
         * <code>fixed32 opermemberid = 4;</code>
         */
        private void clearOpermemberid() {

            opermemberid_ = 0;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (srcmemid_ != 0) {
                output.writeFixed32(1, srcmemid_);
            }
            if (srcwbid_ != 0L) {
                output.writeFixed64(2, srcwbid_);
            }
            if (figuretype_ != 0) {
                output.writeFixed32(3, figuretype_);
            }
            if (opermemberid_ != 0) {
                output.writeFixed32(4, opermemberid_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (srcmemid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(1, srcmemid_);
            }
            if (srcwbid_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed64Size(2, srcwbid_);
            }
            if (figuretype_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(3, figuretype_);
            }
            if (opermemberid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(4, opermemberid_);
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardComplexQuery parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardComplexQuery parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardComplexQuery parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardComplexQuery parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardComplexQuery parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardComplexQuery parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardComplexQuery parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardComplexQuery parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardComplexQuery parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardComplexQuery parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardComplexQuery parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardComplexQuery parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardComplexQuery prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *白板项高级查询
         *(call)
         *type:Pb_TYPE_MEET_INTERFACE_WHITEBOARD
         *method: complexquery
         * </pre>
         *
         * Protobuf type {@code pbui_Type_MeetWhiteBoardComplexQuery}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardComplexQuery, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Type_MeetWhiteBoardComplexQuery)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardComplexQueryOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardComplexQuery.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <pre>
             *发起人的人员ID 白板标识使用
             * </pre>
             *
             * <code>fixed32 srcmemid = 1;</code>
             */
            public int getSrcmemid() {
                return instance.getSrcmemid();
            }
            /**
             * <pre>
             *发起人的人员ID 白板标识使用
             * </pre>
             *
             * <code>fixed32 srcmemid = 1;</code>
             */
            public Builder setSrcmemid(int value) {
                copyOnWrite();
                instance.setSrcmemid(value);
                return this;
            }
            /**
             * <pre>
             *发起人的人员ID 白板标识使用
             * </pre>
             *
             * <code>fixed32 srcmemid = 1;</code>
             */
            public Builder clearSrcmemid() {
                copyOnWrite();
                instance.clearSrcmemid();
                return this;
            }

            /**
             * <pre>
             *发起人的白板标识 取微秒级的时间作标识 白板标识使用
             * </pre>
             *
             * <code>fixed64 srcwbid = 2;</code>
             */
            public long getSrcwbid() {
                return instance.getSrcwbid();
            }
            /**
             * <pre>
             *发起人的白板标识 取微秒级的时间作标识 白板标识使用
             * </pre>
             *
             * <code>fixed64 srcwbid = 2;</code>
             */
            public Builder setSrcwbid(long value) {
                copyOnWrite();
                instance.setSrcwbid(value);
                return this;
            }
            /**
             * <pre>
             *发起人的白板标识 取微秒级的时间作标识 白板标识使用
             * </pre>
             *
             * <code>fixed64 srcwbid = 2;</code>
             */
            public Builder clearSrcwbid() {
                copyOnWrite();
                instance.clearSrcwbid();
                return this;
            }

            /**
             * <pre>
             *图形类型 必须指定一种类型,因为不同类型结构不同,不好解析,所以要按类型查询
             * </pre>
             *
             * <code>fixed32 figuretype = 3;</code>
             */
            public int getFiguretype() {
                return instance.getFiguretype();
            }
            /**
             * <pre>
             *图形类型 必须指定一种类型,因为不同类型结构不同,不好解析,所以要按类型查询
             * </pre>
             *
             * <code>fixed32 figuretype = 3;</code>
             */
            public Builder setFiguretype(int value) {
                copyOnWrite();
                instance.setFiguretype(value);
                return this;
            }
            /**
             * <pre>
             *图形类型 必须指定一种类型,因为不同类型结构不同,不好解析,所以要按类型查询
             * </pre>
             *
             * <code>fixed32 figuretype = 3;</code>
             */
            public Builder clearFiguretype() {
                copyOnWrite();
                instance.clearFiguretype();
                return this;
            }

            /**
             * <pre>
             *人员ID
             * </pre>
             *
             * <code>fixed32 opermemberid = 4;</code>
             */
            public int getOpermemberid() {
                return instance.getOpermemberid();
            }
            /**
             * <pre>
             *人员ID
             * </pre>
             *
             * <code>fixed32 opermemberid = 4;</code>
             */
            public Builder setOpermemberid(int value) {
                copyOnWrite();
                instance.setOpermemberid(value);
                return this;
            }
            /**
             * <pre>
             *人员ID
             * </pre>
             *
             * <code>fixed32 opermemberid = 4;</code>
             */
            public Builder clearOpermemberid() {
                copyOnWrite();
                instance.clearOpermemberid();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Type_MeetWhiteBoardComplexQuery)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardComplexQuery();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardComplexQuery other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardComplexQuery) arg1;
                    srcmemid_ = visitor.visitInt(srcmemid_ != 0, srcmemid_,
                            other.srcmemid_ != 0, other.srcmemid_);
                    srcwbid_ = visitor.visitLong(srcwbid_ != 0L, srcwbid_,
                            other.srcwbid_ != 0L, other.srcwbid_);
                    figuretype_ = visitor.visitInt(figuretype_ != 0, figuretype_,
                            other.figuretype_ != 0, other.figuretype_);
                    opermemberid_ = visitor.visitInt(opermemberid_ != 0, opermemberid_,
                            other.opermemberid_ != 0, other.opermemberid_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 13: {

                                    srcmemid_ = input.readFixed32();
                                    break;
                                }
                                case 17: {

                                    srcwbid_ = input.readFixed64();
                                    break;
                                }
                                case 29: {

                                    figuretype_ = input.readFixed32();
                                    break;
                                }
                                case 37: {

                                    opermemberid_ = input.readFixed32();
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardComplexQuery.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Type_MeetWhiteBoardComplexQuery)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardComplexQuery DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Type_MeetWhiteBoardComplexQuery();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardComplexQuery getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Type_MeetWhiteBoardComplexQuery> PARSER;

        public static com.google.protobuf.Parser<pbui_Type_MeetWhiteBoardComplexQuery> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Type_MeetWhiteBoardInkItemOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Type_MeetWhiteBoardInkItem)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <pre>
         *操作ID 终端计算产生 为0表示清除所有等于opermemberid的白板操作
         * </pre>
         *
         * <code>fixed32 operid = 1;</code>
         */
        int getOperid();

        /**
         * <pre>
         *当前该命令的人员ID 为0表示清除所有等于opermemberid的白板操作
         * </pre>
         *
         * <code>fixed32 opermemberid = 2;</code>
         */
        int getOpermemberid();

        /**
         * <pre>
         *发起人的人员ID 白板标识使用
         * </pre>
         *
         * <code>fixed32 srcmemid = 3;</code>
         */
        int getSrcmemid();

        /**
         * <pre>
         *发起人的白板标识 取微秒级的时间作标识 白板标识使用
         * </pre>
         *
         * <code>fixed64 srcwbid = 4;</code>
         */
        long getSrcwbid();

        /**
         * <pre>
         *时间戳  微秒
         * </pre>
         *
         * <code>fixed64 utcstamp = 5;</code>
         */
        long getUtcstamp();

        /**
         * <pre>
         *图形类型 为0表示清除所有等于figuretype的白板操作
         * </pre>
         *
         * <code>fixed32 figuretype = 6;</code>
         */
        int getFiguretype();

        /**
         * <pre>
         *线条宽度
         * </pre>
         *
         * <code>fixed32 linesize = 7;</code>
         */
        int getLinesize();

        /**
         * <pre>
         *线条颜色
         * </pre>
         *
         * <code>fixed32 Argb = 8;</code>
         */
        int getArgb();

        /**
         * <pre>
         *ink point Num, float[2 * ptnum](x,y依次排列)
         * </pre>
         *
         * <code>repeated float pinklist = 9;</code>
         */
        java.util.List<java.lang.Float> getPinklistList();
        /**
         * <pre>
         *ink point Num, float[2 * ptnum](x,y依次排列)
         * </pre>
         *
         * <code>repeated float pinklist = 9;</code>
         */
        int getPinklistCount();
        /**
         * <pre>
         *ink point Num, float[2 * ptnum](x,y依次排列)
         * </pre>
         *
         * <code>repeated float pinklist = 9;</code>
         */
        float getPinklist(int index);
    }
    /**
     * <pre>
     *添加墨迹
     *ink
     *type:Pb_TYPE_MEET_INTERFACE_WHITEBOARD
     *callback&#92;call
     *method: add
     * </pre>
     *
     * Protobuf type {@code pbui_Type_MeetWhiteBoardInkItem}
     */
    public  static final class pbui_Type_MeetWhiteBoardInkItem extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Type_MeetWhiteBoardInkItem, pbui_Type_MeetWhiteBoardInkItem.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Type_MeetWhiteBoardInkItem)
            pbui_Type_MeetWhiteBoardInkItemOrBuilder {
        private pbui_Type_MeetWhiteBoardInkItem() {
            pinklist_ = emptyFloatList();
        }
        private int bitField0_;
        public static final int OPERID_FIELD_NUMBER = 1;
        private int operid_;
        /**
         * <pre>
         *操作ID 终端计算产生 为0表示清除所有等于opermemberid的白板操作
         * </pre>
         *
         * <code>fixed32 operid = 1;</code>
         */
        public int getOperid() {
            return operid_;
        }
        /**
         * <pre>
         *操作ID 终端计算产生 为0表示清除所有等于opermemberid的白板操作
         * </pre>
         *
         * <code>fixed32 operid = 1;</code>
         */
        private void setOperid(int value) {

            operid_ = value;
        }
        /**
         * <pre>
         *操作ID 终端计算产生 为0表示清除所有等于opermemberid的白板操作
         * </pre>
         *
         * <code>fixed32 operid = 1;</code>
         */
        private void clearOperid() {

            operid_ = 0;
        }

        public static final int OPERMEMBERID_FIELD_NUMBER = 2;
        private int opermemberid_;
        /**
         * <pre>
         *当前该命令的人员ID 为0表示清除所有等于opermemberid的白板操作
         * </pre>
         *
         * <code>fixed32 opermemberid = 2;</code>
         */
        public int getOpermemberid() {
            return opermemberid_;
        }
        /**
         * <pre>
         *当前该命令的人员ID 为0表示清除所有等于opermemberid的白板操作
         * </pre>
         *
         * <code>fixed32 opermemberid = 2;</code>
         */
        private void setOpermemberid(int value) {

            opermemberid_ = value;
        }
        /**
         * <pre>
         *当前该命令的人员ID 为0表示清除所有等于opermemberid的白板操作
         * </pre>
         *
         * <code>fixed32 opermemberid = 2;</code>
         */
        private void clearOpermemberid() {

            opermemberid_ = 0;
        }

        public static final int SRCMEMID_FIELD_NUMBER = 3;
        private int srcmemid_;
        /**
         * <pre>
         *发起人的人员ID 白板标识使用
         * </pre>
         *
         * <code>fixed32 srcmemid = 3;</code>
         */
        public int getSrcmemid() {
            return srcmemid_;
        }
        /**
         * <pre>
         *发起人的人员ID 白板标识使用
         * </pre>
         *
         * <code>fixed32 srcmemid = 3;</code>
         */
        private void setSrcmemid(int value) {

            srcmemid_ = value;
        }
        /**
         * <pre>
         *发起人的人员ID 白板标识使用
         * </pre>
         *
         * <code>fixed32 srcmemid = 3;</code>
         */
        private void clearSrcmemid() {

            srcmemid_ = 0;
        }

        public static final int SRCWBID_FIELD_NUMBER = 4;
        private long srcwbid_;
        /**
         * <pre>
         *发起人的白板标识 取微秒级的时间作标识 白板标识使用
         * </pre>
         *
         * <code>fixed64 srcwbid = 4;</code>
         */
        public long getSrcwbid() {
            return srcwbid_;
        }
        /**
         * <pre>
         *发起人的白板标识 取微秒级的时间作标识 白板标识使用
         * </pre>
         *
         * <code>fixed64 srcwbid = 4;</code>
         */
        private void setSrcwbid(long value) {

            srcwbid_ = value;
        }
        /**
         * <pre>
         *发起人的白板标识 取微秒级的时间作标识 白板标识使用
         * </pre>
         *
         * <code>fixed64 srcwbid = 4;</code>
         */
        private void clearSrcwbid() {

            srcwbid_ = 0L;
        }

        public static final int UTCSTAMP_FIELD_NUMBER = 5;
        private long utcstamp_;
        /**
         * <pre>
         *时间戳  微秒
         * </pre>
         *
         * <code>fixed64 utcstamp = 5;</code>
         */
        public long getUtcstamp() {
            return utcstamp_;
        }
        /**
         * <pre>
         *时间戳  微秒
         * </pre>
         *
         * <code>fixed64 utcstamp = 5;</code>
         */
        private void setUtcstamp(long value) {

            utcstamp_ = value;
        }
        /**
         * <pre>
         *时间戳  微秒
         * </pre>
         *
         * <code>fixed64 utcstamp = 5;</code>
         */
        private void clearUtcstamp() {

            utcstamp_ = 0L;
        }

        public static final int FIGURETYPE_FIELD_NUMBER = 6;
        private int figuretype_;
        /**
         * <pre>
         *图形类型 为0表示清除所有等于figuretype的白板操作
         * </pre>
         *
         * <code>fixed32 figuretype = 6;</code>
         */
        public int getFiguretype() {
            return figuretype_;
        }
        /**
         * <pre>
         *图形类型 为0表示清除所有等于figuretype的白板操作
         * </pre>
         *
         * <code>fixed32 figuretype = 6;</code>
         */
        private void setFiguretype(int value) {

            figuretype_ = value;
        }
        /**
         * <pre>
         *图形类型 为0表示清除所有等于figuretype的白板操作
         * </pre>
         *
         * <code>fixed32 figuretype = 6;</code>
         */
        private void clearFiguretype() {

            figuretype_ = 0;
        }

        public static final int LINESIZE_FIELD_NUMBER = 7;
        private int linesize_;
        /**
         * <pre>
         *线条宽度
         * </pre>
         *
         * <code>fixed32 linesize = 7;</code>
         */
        public int getLinesize() {
            return linesize_;
        }
        /**
         * <pre>
         *线条宽度
         * </pre>
         *
         * <code>fixed32 linesize = 7;</code>
         */
        private void setLinesize(int value) {

            linesize_ = value;
        }
        /**
         * <pre>
         *线条宽度
         * </pre>
         *
         * <code>fixed32 linesize = 7;</code>
         */
        private void clearLinesize() {

            linesize_ = 0;
        }

        public static final int ARGB_FIELD_NUMBER = 8;
        private int argb_;
        /**
         * <pre>
         *线条颜色
         * </pre>
         *
         * <code>fixed32 Argb = 8;</code>
         */
        public int getArgb() {
            return argb_;
        }
        /**
         * <pre>
         *线条颜色
         * </pre>
         *
         * <code>fixed32 Argb = 8;</code>
         */
        private void setArgb(int value) {

            argb_ = value;
        }
        /**
         * <pre>
         *线条颜色
         * </pre>
         *
         * <code>fixed32 Argb = 8;</code>
         */
        private void clearArgb() {

            argb_ = 0;
        }

        public static final int PINKLIST_FIELD_NUMBER = 9;
        private com.google.protobuf.Internal.FloatList pinklist_;
        /**
         * <pre>
         *ink point Num, float[2 * ptnum](x,y依次排列)
         * </pre>
         *
         * <code>repeated float pinklist = 9;</code>
         */
        public java.util.List<java.lang.Float>
        getPinklistList() {
            return pinklist_;
        }
        /**
         * <pre>
         *ink point Num, float[2 * ptnum](x,y依次排列)
         * </pre>
         *
         * <code>repeated float pinklist = 9;</code>
         */
        public int getPinklistCount() {
            return pinklist_.size();
        }
        /**
         * <pre>
         *ink point Num, float[2 * ptnum](x,y依次排列)
         * </pre>
         *
         * <code>repeated float pinklist = 9;</code>
         */
        public float getPinklist(int index) {
            return pinklist_.getFloat(index);
        }
        private void ensurePinklistIsMutable() {
            if (!pinklist_.isModifiable()) {
                pinklist_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(pinklist_);
            }
        }
        /**
         * <pre>
         *ink point Num, float[2 * ptnum](x,y依次排列)
         * </pre>
         *
         * <code>repeated float pinklist = 9;</code>
         */
        private void setPinklist(
                int index, float value) {
            ensurePinklistIsMutable();
            pinklist_.setFloat(index, value);
        }
        /**
         * <pre>
         *ink point Num, float[2 * ptnum](x,y依次排列)
         * </pre>
         *
         * <code>repeated float pinklist = 9;</code>
         */
        private void addPinklist(float value) {
            ensurePinklistIsMutable();
            pinklist_.addFloat(value);
        }
        /**
         * <pre>
         *ink point Num, float[2 * ptnum](x,y依次排列)
         * </pre>
         *
         * <code>repeated float pinklist = 9;</code>
         */
        private void addAllPinklist(
                java.lang.Iterable<? extends java.lang.Float> values) {
            ensurePinklistIsMutable();
            com.google.protobuf.AbstractMessageLite.addAll(
                    values, pinklist_);
        }
        /**
         * <pre>
         *ink point Num, float[2 * ptnum](x,y依次排列)
         * </pre>
         *
         * <code>repeated float pinklist = 9;</code>
         */
        private void clearPinklist() {
            pinklist_ = emptyFloatList();
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (operid_ != 0) {
                output.writeFixed32(1, operid_);
            }
            if (opermemberid_ != 0) {
                output.writeFixed32(2, opermemberid_);
            }
            if (srcmemid_ != 0) {
                output.writeFixed32(3, srcmemid_);
            }
            if (srcwbid_ != 0L) {
                output.writeFixed64(4, srcwbid_);
            }
            if (utcstamp_ != 0L) {
                output.writeFixed64(5, utcstamp_);
            }
            if (figuretype_ != 0) {
                output.writeFixed32(6, figuretype_);
            }
            if (linesize_ != 0) {
                output.writeFixed32(7, linesize_);
            }
            if (argb_ != 0) {
                output.writeFixed32(8, argb_);
            }
            for (int i = 0; i < pinklist_.size(); i++) {
                output.writeFloat(9, pinklist_.getFloat(i));
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (operid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(1, operid_);
            }
            if (opermemberid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(2, opermemberid_);
            }
            if (srcmemid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(3, srcmemid_);
            }
            if (srcwbid_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed64Size(4, srcwbid_);
            }
            if (utcstamp_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed64Size(5, utcstamp_);
            }
            if (figuretype_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(6, figuretype_);
            }
            if (linesize_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(7, linesize_);
            }
            if (argb_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(8, argb_);
            }
            {
                int dataSize = 0;
                dataSize = 4 * getPinklistList().size();
                size += dataSize;
                size += 1 * getPinklistList().size();
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardInkItem parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardInkItem parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardInkItem parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardInkItem parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardInkItem parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardInkItem parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardInkItem parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardInkItem parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardInkItem parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardInkItem parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardInkItem parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardInkItem parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardInkItem prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *添加墨迹
         *ink
         *type:Pb_TYPE_MEET_INTERFACE_WHITEBOARD
         *callback&#92;call
         *method: add
         * </pre>
         *
         * Protobuf type {@code pbui_Type_MeetWhiteBoardInkItem}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardInkItem, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Type_MeetWhiteBoardInkItem)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardInkItemOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardInkItem.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <pre>
             *操作ID 终端计算产生 为0表示清除所有等于opermemberid的白板操作
             * </pre>
             *
             * <code>fixed32 operid = 1;</code>
             */
            public int getOperid() {
                return instance.getOperid();
            }
            /**
             * <pre>
             *操作ID 终端计算产生 为0表示清除所有等于opermemberid的白板操作
             * </pre>
             *
             * <code>fixed32 operid = 1;</code>
             */
            public Builder setOperid(int value) {
                copyOnWrite();
                instance.setOperid(value);
                return this;
            }
            /**
             * <pre>
             *操作ID 终端计算产生 为0表示清除所有等于opermemberid的白板操作
             * </pre>
             *
             * <code>fixed32 operid = 1;</code>
             */
            public Builder clearOperid() {
                copyOnWrite();
                instance.clearOperid();
                return this;
            }

            /**
             * <pre>
             *当前该命令的人员ID 为0表示清除所有等于opermemberid的白板操作
             * </pre>
             *
             * <code>fixed32 opermemberid = 2;</code>
             */
            public int getOpermemberid() {
                return instance.getOpermemberid();
            }
            /**
             * <pre>
             *当前该命令的人员ID 为0表示清除所有等于opermemberid的白板操作
             * </pre>
             *
             * <code>fixed32 opermemberid = 2;</code>
             */
            public Builder setOpermemberid(int value) {
                copyOnWrite();
                instance.setOpermemberid(value);
                return this;
            }
            /**
             * <pre>
             *当前该命令的人员ID 为0表示清除所有等于opermemberid的白板操作
             * </pre>
             *
             * <code>fixed32 opermemberid = 2;</code>
             */
            public Builder clearOpermemberid() {
                copyOnWrite();
                instance.clearOpermemberid();
                return this;
            }

            /**
             * <pre>
             *发起人的人员ID 白板标识使用
             * </pre>
             *
             * <code>fixed32 srcmemid = 3;</code>
             */
            public int getSrcmemid() {
                return instance.getSrcmemid();
            }
            /**
             * <pre>
             *发起人的人员ID 白板标识使用
             * </pre>
             *
             * <code>fixed32 srcmemid = 3;</code>
             */
            public Builder setSrcmemid(int value) {
                copyOnWrite();
                instance.setSrcmemid(value);
                return this;
            }
            /**
             * <pre>
             *发起人的人员ID 白板标识使用
             * </pre>
             *
             * <code>fixed32 srcmemid = 3;</code>
             */
            public Builder clearSrcmemid() {
                copyOnWrite();
                instance.clearSrcmemid();
                return this;
            }

            /**
             * <pre>
             *发起人的白板标识 取微秒级的时间作标识 白板标识使用
             * </pre>
             *
             * <code>fixed64 srcwbid = 4;</code>
             */
            public long getSrcwbid() {
                return instance.getSrcwbid();
            }
            /**
             * <pre>
             *发起人的白板标识 取微秒级的时间作标识 白板标识使用
             * </pre>
             *
             * <code>fixed64 srcwbid = 4;</code>
             */
            public Builder setSrcwbid(long value) {
                copyOnWrite();
                instance.setSrcwbid(value);
                return this;
            }
            /**
             * <pre>
             *发起人的白板标识 取微秒级的时间作标识 白板标识使用
             * </pre>
             *
             * <code>fixed64 srcwbid = 4;</code>
             */
            public Builder clearSrcwbid() {
                copyOnWrite();
                instance.clearSrcwbid();
                return this;
            }

            /**
             * <pre>
             *时间戳  微秒
             * </pre>
             *
             * <code>fixed64 utcstamp = 5;</code>
             */
            public long getUtcstamp() {
                return instance.getUtcstamp();
            }
            /**
             * <pre>
             *时间戳  微秒
             * </pre>
             *
             * <code>fixed64 utcstamp = 5;</code>
             */
            public Builder setUtcstamp(long value) {
                copyOnWrite();
                instance.setUtcstamp(value);
                return this;
            }
            /**
             * <pre>
             *时间戳  微秒
             * </pre>
             *
             * <code>fixed64 utcstamp = 5;</code>
             */
            public Builder clearUtcstamp() {
                copyOnWrite();
                instance.clearUtcstamp();
                return this;
            }

            /**
             * <pre>
             *图形类型 为0表示清除所有等于figuretype的白板操作
             * </pre>
             *
             * <code>fixed32 figuretype = 6;</code>
             */
            public int getFiguretype() {
                return instance.getFiguretype();
            }
            /**
             * <pre>
             *图形类型 为0表示清除所有等于figuretype的白板操作
             * </pre>
             *
             * <code>fixed32 figuretype = 6;</code>
             */
            public Builder setFiguretype(int value) {
                copyOnWrite();
                instance.setFiguretype(value);
                return this;
            }
            /**
             * <pre>
             *图形类型 为0表示清除所有等于figuretype的白板操作
             * </pre>
             *
             * <code>fixed32 figuretype = 6;</code>
             */
            public Builder clearFiguretype() {
                copyOnWrite();
                instance.clearFiguretype();
                return this;
            }

            /**
             * <pre>
             *线条宽度
             * </pre>
             *
             * <code>fixed32 linesize = 7;</code>
             */
            public int getLinesize() {
                return instance.getLinesize();
            }
            /**
             * <pre>
             *线条宽度
             * </pre>
             *
             * <code>fixed32 linesize = 7;</code>
             */
            public Builder setLinesize(int value) {
                copyOnWrite();
                instance.setLinesize(value);
                return this;
            }
            /**
             * <pre>
             *线条宽度
             * </pre>
             *
             * <code>fixed32 linesize = 7;</code>
             */
            public Builder clearLinesize() {
                copyOnWrite();
                instance.clearLinesize();
                return this;
            }

            /**
             * <pre>
             *线条颜色
             * </pre>
             *
             * <code>fixed32 Argb = 8;</code>
             */
            public int getArgb() {
                return instance.getArgb();
            }
            /**
             * <pre>
             *线条颜色
             * </pre>
             *
             * <code>fixed32 Argb = 8;</code>
             */
            public Builder setArgb(int value) {
                copyOnWrite();
                instance.setArgb(value);
                return this;
            }
            /**
             * <pre>
             *线条颜色
             * </pre>
             *
             * <code>fixed32 Argb = 8;</code>
             */
            public Builder clearArgb() {
                copyOnWrite();
                instance.clearArgb();
                return this;
            }

            /**
             * <pre>
             *ink point Num, float[2 * ptnum](x,y依次排列)
             * </pre>
             *
             * <code>repeated float pinklist = 9;</code>
             */
            public java.util.List<java.lang.Float>
            getPinklistList() {
                return java.util.Collections.unmodifiableList(
                        instance.getPinklistList());
            }
            /**
             * <pre>
             *ink point Num, float[2 * ptnum](x,y依次排列)
             * </pre>
             *
             * <code>repeated float pinklist = 9;</code>
             */
            public int getPinklistCount() {
                return instance.getPinklistCount();
            }
            /**
             * <pre>
             *ink point Num, float[2 * ptnum](x,y依次排列)
             * </pre>
             *
             * <code>repeated float pinklist = 9;</code>
             */
            public float getPinklist(int index) {
                return instance.getPinklist(index);
            }
            /**
             * <pre>
             *ink point Num, float[2 * ptnum](x,y依次排列)
             * </pre>
             *
             * <code>repeated float pinklist = 9;</code>
             */
            public Builder setPinklist(
                    int index, float value) {
                copyOnWrite();
                instance.setPinklist(index, value);
                return this;
            }
            /**
             * <pre>
             *ink point Num, float[2 * ptnum](x,y依次排列)
             * </pre>
             *
             * <code>repeated float pinklist = 9;</code>
             */
            public Builder addPinklist(float value) {
                copyOnWrite();
                instance.addPinklist(value);
                return this;
            }
            /**
             * <pre>
             *ink point Num, float[2 * ptnum](x,y依次排列)
             * </pre>
             *
             * <code>repeated float pinklist = 9;</code>
             */
            public Builder addAllPinklist(
                    java.lang.Iterable<? extends java.lang.Float> values) {
                copyOnWrite();
                instance.addAllPinklist(values);
                return this;
            }
            /**
             * <pre>
             *ink point Num, float[2 * ptnum](x,y依次排列)
             * </pre>
             *
             * <code>repeated float pinklist = 9;</code>
             */
            public Builder clearPinklist() {
                copyOnWrite();
                instance.clearPinklist();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Type_MeetWhiteBoardInkItem)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardInkItem();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    pinklist_.makeImmutable();
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardInkItem other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardInkItem) arg1;
                    operid_ = visitor.visitInt(operid_ != 0, operid_,
                            other.operid_ != 0, other.operid_);
                    opermemberid_ = visitor.visitInt(opermemberid_ != 0, opermemberid_,
                            other.opermemberid_ != 0, other.opermemberid_);
                    srcmemid_ = visitor.visitInt(srcmemid_ != 0, srcmemid_,
                            other.srcmemid_ != 0, other.srcmemid_);
                    srcwbid_ = visitor.visitLong(srcwbid_ != 0L, srcwbid_,
                            other.srcwbid_ != 0L, other.srcwbid_);
                    utcstamp_ = visitor.visitLong(utcstamp_ != 0L, utcstamp_,
                            other.utcstamp_ != 0L, other.utcstamp_);
                    figuretype_ = visitor.visitInt(figuretype_ != 0, figuretype_,
                            other.figuretype_ != 0, other.figuretype_);
                    linesize_ = visitor.visitInt(linesize_ != 0, linesize_,
                            other.linesize_ != 0, other.linesize_);
                    argb_ = visitor.visitInt(argb_ != 0, argb_,
                            other.argb_ != 0, other.argb_);
                    pinklist_= visitor.visitFloatList(pinklist_, other.pinklist_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                        bitField0_ |= other.bitField0_;
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 13: {

                                    operid_ = input.readFixed32();
                                    break;
                                }
                                case 21: {

                                    opermemberid_ = input.readFixed32();
                                    break;
                                }
                                case 29: {

                                    srcmemid_ = input.readFixed32();
                                    break;
                                }
                                case 33: {

                                    srcwbid_ = input.readFixed64();
                                    break;
                                }
                                case 41: {

                                    utcstamp_ = input.readFixed64();
                                    break;
                                }
                                case 53: {

                                    figuretype_ = input.readFixed32();
                                    break;
                                }
                                case 61: {

                                    linesize_ = input.readFixed32();
                                    break;
                                }
                                case 69: {

                                    argb_ = input.readFixed32();
                                    break;
                                }
                                case 77: {
                                    if (!pinklist_.isModifiable()) {
                                        pinklist_ =
                                                com.google.protobuf.GeneratedMessageLite.mutableCopy(pinklist_);
                                    }
                                    pinklist_.addFloat(input.readFloat());
                                    break;
                                }
                                case 74: {
                                    int length = input.readRawVarint32();
                                    int limit = input.pushLimit(length);
                                    if (!pinklist_.isModifiable() && input.getBytesUntilLimit() > 0) {
                                        final int currentSize = pinklist_.size();
                                        pinklist_ = pinklist_.mutableCopyWithCapacity(
                                                currentSize + (length/4));
                                    }
                                    while (input.getBytesUntilLimit() > 0) {
                                        pinklist_.addFloat(input.readFloat());
                                    }
                                    input.popLimit(limit);
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardInkItem.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Type_MeetWhiteBoardInkItem)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardInkItem DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Type_MeetWhiteBoardInkItem();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWhiteBoardInkItem getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Type_MeetWhiteBoardInkItem> PARSER;

        public static com.google.protobuf.Parser<pbui_Type_MeetWhiteBoardInkItem> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Item_MeetWBInkDetailOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Item_MeetWBInkDetail)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <pre>
         *操作ID 终端计算产生
         * </pre>
         *
         * <code>fixed32 operid = 1;</code>
         */
        int getOperid();

        /**
         * <pre>
         *当前该命令的人员ID
         * </pre>
         *
         * <code>fixed32 opermemberid = 2;</code>
         */
        int getOpermemberid();

        /**
         * <pre>
         *时间戳
         * </pre>
         *
         * <code>fixed64 utcstamp = 3;</code>
         */
        long getUtcstamp();

        /**
         * <pre>
         *线条宽度
         * </pre>
         *
         * <code>fixed32 linesize = 4;</code>
         */
        int getLinesize();

        /**
         * <pre>
         *线条颜色
         * </pre>
         *
         * <code>fixed32 Argb = 5;</code>
         */
        int getArgb();

        /**
         * <pre>
         *ink point Num, float[2 * ptnum](x,y依次排列)
         * </pre>
         *
         * <code>repeated float pinklist = 6;</code>
         */
        java.util.List<java.lang.Float> getPinklistList();
        /**
         * <pre>
         *ink point Num, float[2 * ptnum](x,y依次排列)
         * </pre>
         *
         * <code>repeated float pinklist = 6;</code>
         */
        int getPinklistCount();
        /**
         * <pre>
         *ink point Num, float[2 * ptnum](x,y依次排列)
         * </pre>
         *
         * <code>repeated float pinklist = 6;</code>
         */
        float getPinklist(int index);
    }
    /**
     * <pre>
     *查询Ink白板操作
     *callreturn
     *type:Pb_TYPE_MEET_INTERFACE_WHITEBOARD
     *method: query pagequery
     * </pre>
     *
     * Protobuf type {@code pbui_Item_MeetWBInkDetail}
     */
    public  static final class pbui_Item_MeetWBInkDetail extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Item_MeetWBInkDetail, pbui_Item_MeetWBInkDetail.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Item_MeetWBInkDetail)
            pbui_Item_MeetWBInkDetailOrBuilder {
        private pbui_Item_MeetWBInkDetail() {
            pinklist_ = emptyFloatList();
        }
        private int bitField0_;
        public static final int OPERID_FIELD_NUMBER = 1;
        private int operid_;
        /**
         * <pre>
         *操作ID 终端计算产生
         * </pre>
         *
         * <code>fixed32 operid = 1;</code>
         */
        public int getOperid() {
            return operid_;
        }
        /**
         * <pre>
         *操作ID 终端计算产生
         * </pre>
         *
         * <code>fixed32 operid = 1;</code>
         */
        private void setOperid(int value) {

            operid_ = value;
        }
        /**
         * <pre>
         *操作ID 终端计算产生
         * </pre>
         *
         * <code>fixed32 operid = 1;</code>
         */
        private void clearOperid() {

            operid_ = 0;
        }

        public static final int OPERMEMBERID_FIELD_NUMBER = 2;
        private int opermemberid_;
        /**
         * <pre>
         *当前该命令的人员ID
         * </pre>
         *
         * <code>fixed32 opermemberid = 2;</code>
         */
        public int getOpermemberid() {
            return opermemberid_;
        }
        /**
         * <pre>
         *当前该命令的人员ID
         * </pre>
         *
         * <code>fixed32 opermemberid = 2;</code>
         */
        private void setOpermemberid(int value) {

            opermemberid_ = value;
        }
        /**
         * <pre>
         *当前该命令的人员ID
         * </pre>
         *
         * <code>fixed32 opermemberid = 2;</code>
         */
        private void clearOpermemberid() {

            opermemberid_ = 0;
        }

        public static final int UTCSTAMP_FIELD_NUMBER = 3;
        private long utcstamp_;
        /**
         * <pre>
         *时间戳
         * </pre>
         *
         * <code>fixed64 utcstamp = 3;</code>
         */
        public long getUtcstamp() {
            return utcstamp_;
        }
        /**
         * <pre>
         *时间戳
         * </pre>
         *
         * <code>fixed64 utcstamp = 3;</code>
         */
        private void setUtcstamp(long value) {

            utcstamp_ = value;
        }
        /**
         * <pre>
         *时间戳
         * </pre>
         *
         * <code>fixed64 utcstamp = 3;</code>
         */
        private void clearUtcstamp() {

            utcstamp_ = 0L;
        }

        public static final int LINESIZE_FIELD_NUMBER = 4;
        private int linesize_;
        /**
         * <pre>
         *线条宽度
         * </pre>
         *
         * <code>fixed32 linesize = 4;</code>
         */
        public int getLinesize() {
            return linesize_;
        }
        /**
         * <pre>
         *线条宽度
         * </pre>
         *
         * <code>fixed32 linesize = 4;</code>
         */
        private void setLinesize(int value) {

            linesize_ = value;
        }
        /**
         * <pre>
         *线条宽度
         * </pre>
         *
         * <code>fixed32 linesize = 4;</code>
         */
        private void clearLinesize() {

            linesize_ = 0;
        }

        public static final int ARGB_FIELD_NUMBER = 5;
        private int argb_;
        /**
         * <pre>
         *线条颜色
         * </pre>
         *
         * <code>fixed32 Argb = 5;</code>
         */
        public int getArgb() {
            return argb_;
        }
        /**
         * <pre>
         *线条颜色
         * </pre>
         *
         * <code>fixed32 Argb = 5;</code>
         */
        private void setArgb(int value) {

            argb_ = value;
        }
        /**
         * <pre>
         *线条颜色
         * </pre>
         *
         * <code>fixed32 Argb = 5;</code>
         */
        private void clearArgb() {

            argb_ = 0;
        }

        public static final int PINKLIST_FIELD_NUMBER = 6;
        private com.google.protobuf.Internal.FloatList pinklist_;
        /**
         * <pre>
         *ink point Num, float[2 * ptnum](x,y依次排列)
         * </pre>
         *
         * <code>repeated float pinklist = 6;</code>
         */
        public java.util.List<java.lang.Float>
        getPinklistList() {
            return pinklist_;
        }
        /**
         * <pre>
         *ink point Num, float[2 * ptnum](x,y依次排列)
         * </pre>
         *
         * <code>repeated float pinklist = 6;</code>
         */
        public int getPinklistCount() {
            return pinklist_.size();
        }
        /**
         * <pre>
         *ink point Num, float[2 * ptnum](x,y依次排列)
         * </pre>
         *
         * <code>repeated float pinklist = 6;</code>
         */
        public float getPinklist(int index) {
            return pinklist_.getFloat(index);
        }
        private void ensurePinklistIsMutable() {
            if (!pinklist_.isModifiable()) {
                pinklist_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(pinklist_);
            }
        }
        /**
         * <pre>
         *ink point Num, float[2 * ptnum](x,y依次排列)
         * </pre>
         *
         * <code>repeated float pinklist = 6;</code>
         */
        private void setPinklist(
                int index, float value) {
            ensurePinklistIsMutable();
            pinklist_.setFloat(index, value);
        }
        /**
         * <pre>
         *ink point Num, float[2 * ptnum](x,y依次排列)
         * </pre>
         *
         * <code>repeated float pinklist = 6;</code>
         */
        private void addPinklist(float value) {
            ensurePinklistIsMutable();
            pinklist_.addFloat(value);
        }
        /**
         * <pre>
         *ink point Num, float[2 * ptnum](x,y依次排列)
         * </pre>
         *
         * <code>repeated float pinklist = 6;</code>
         */
        private void addAllPinklist(
                java.lang.Iterable<? extends java.lang.Float> values) {
            ensurePinklistIsMutable();
            com.google.protobuf.AbstractMessageLite.addAll(
                    values, pinklist_);
        }
        /**
         * <pre>
         *ink point Num, float[2 * ptnum](x,y依次排列)
         * </pre>
         *
         * <code>repeated float pinklist = 6;</code>
         */
        private void clearPinklist() {
            pinklist_ = emptyFloatList();
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (operid_ != 0) {
                output.writeFixed32(1, operid_);
            }
            if (opermemberid_ != 0) {
                output.writeFixed32(2, opermemberid_);
            }
            if (utcstamp_ != 0L) {
                output.writeFixed64(3, utcstamp_);
            }
            if (linesize_ != 0) {
                output.writeFixed32(4, linesize_);
            }
            if (argb_ != 0) {
                output.writeFixed32(5, argb_);
            }
            for (int i = 0; i < pinklist_.size(); i++) {
                output.writeFloat(6, pinklist_.getFloat(i));
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (operid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(1, operid_);
            }
            if (opermemberid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(2, opermemberid_);
            }
            if (utcstamp_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed64Size(3, utcstamp_);
            }
            if (linesize_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(4, linesize_);
            }
            if (argb_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(5, argb_);
            }
            {
                int dataSize = 0;
                dataSize = 4 * getPinklistList().size();
                size += dataSize;
                size += 1 * getPinklistList().size();
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBInkDetail parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBInkDetail parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBInkDetail parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBInkDetail parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBInkDetail parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBInkDetail parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBInkDetail parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBInkDetail parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBInkDetail parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBInkDetail parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBInkDetail parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBInkDetail parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBInkDetail prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *查询Ink白板操作
         *callreturn
         *type:Pb_TYPE_MEET_INTERFACE_WHITEBOARD
         *method: query pagequery
         * </pre>
         *
         * Protobuf type {@code pbui_Item_MeetWBInkDetail}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBInkDetail, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Item_MeetWBInkDetail)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBInkDetailOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBInkDetail.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <pre>
             *操作ID 终端计算产生
             * </pre>
             *
             * <code>fixed32 operid = 1;</code>
             */
            public int getOperid() {
                return instance.getOperid();
            }
            /**
             * <pre>
             *操作ID 终端计算产生
             * </pre>
             *
             * <code>fixed32 operid = 1;</code>
             */
            public Builder setOperid(int value) {
                copyOnWrite();
                instance.setOperid(value);
                return this;
            }
            /**
             * <pre>
             *操作ID 终端计算产生
             * </pre>
             *
             * <code>fixed32 operid = 1;</code>
             */
            public Builder clearOperid() {
                copyOnWrite();
                instance.clearOperid();
                return this;
            }

            /**
             * <pre>
             *当前该命令的人员ID
             * </pre>
             *
             * <code>fixed32 opermemberid = 2;</code>
             */
            public int getOpermemberid() {
                return instance.getOpermemberid();
            }
            /**
             * <pre>
             *当前该命令的人员ID
             * </pre>
             *
             * <code>fixed32 opermemberid = 2;</code>
             */
            public Builder setOpermemberid(int value) {
                copyOnWrite();
                instance.setOpermemberid(value);
                return this;
            }
            /**
             * <pre>
             *当前该命令的人员ID
             * </pre>
             *
             * <code>fixed32 opermemberid = 2;</code>
             */
            public Builder clearOpermemberid() {
                copyOnWrite();
                instance.clearOpermemberid();
                return this;
            }

            /**
             * <pre>
             *时间戳
             * </pre>
             *
             * <code>fixed64 utcstamp = 3;</code>
             */
            public long getUtcstamp() {
                return instance.getUtcstamp();
            }
            /**
             * <pre>
             *时间戳
             * </pre>
             *
             * <code>fixed64 utcstamp = 3;</code>
             */
            public Builder setUtcstamp(long value) {
                copyOnWrite();
                instance.setUtcstamp(value);
                return this;
            }
            /**
             * <pre>
             *时间戳
             * </pre>
             *
             * <code>fixed64 utcstamp = 3;</code>
             */
            public Builder clearUtcstamp() {
                copyOnWrite();
                instance.clearUtcstamp();
                return this;
            }

            /**
             * <pre>
             *线条宽度
             * </pre>
             *
             * <code>fixed32 linesize = 4;</code>
             */
            public int getLinesize() {
                return instance.getLinesize();
            }
            /**
             * <pre>
             *线条宽度
             * </pre>
             *
             * <code>fixed32 linesize = 4;</code>
             */
            public Builder setLinesize(int value) {
                copyOnWrite();
                instance.setLinesize(value);
                return this;
            }
            /**
             * <pre>
             *线条宽度
             * </pre>
             *
             * <code>fixed32 linesize = 4;</code>
             */
            public Builder clearLinesize() {
                copyOnWrite();
                instance.clearLinesize();
                return this;
            }

            /**
             * <pre>
             *线条颜色
             * </pre>
             *
             * <code>fixed32 Argb = 5;</code>
             */
            public int getArgb() {
                return instance.getArgb();
            }
            /**
             * <pre>
             *线条颜色
             * </pre>
             *
             * <code>fixed32 Argb = 5;</code>
             */
            public Builder setArgb(int value) {
                copyOnWrite();
                instance.setArgb(value);
                return this;
            }
            /**
             * <pre>
             *线条颜色
             * </pre>
             *
             * <code>fixed32 Argb = 5;</code>
             */
            public Builder clearArgb() {
                copyOnWrite();
                instance.clearArgb();
                return this;
            }

            /**
             * <pre>
             *ink point Num, float[2 * ptnum](x,y依次排列)
             * </pre>
             *
             * <code>repeated float pinklist = 6;</code>
             */
            public java.util.List<java.lang.Float>
            getPinklistList() {
                return java.util.Collections.unmodifiableList(
                        instance.getPinklistList());
            }
            /**
             * <pre>
             *ink point Num, float[2 * ptnum](x,y依次排列)
             * </pre>
             *
             * <code>repeated float pinklist = 6;</code>
             */
            public int getPinklistCount() {
                return instance.getPinklistCount();
            }
            /**
             * <pre>
             *ink point Num, float[2 * ptnum](x,y依次排列)
             * </pre>
             *
             * <code>repeated float pinklist = 6;</code>
             */
            public float getPinklist(int index) {
                return instance.getPinklist(index);
            }
            /**
             * <pre>
             *ink point Num, float[2 * ptnum](x,y依次排列)
             * </pre>
             *
             * <code>repeated float pinklist = 6;</code>
             */
            public Builder setPinklist(
                    int index, float value) {
                copyOnWrite();
                instance.setPinklist(index, value);
                return this;
            }
            /**
             * <pre>
             *ink point Num, float[2 * ptnum](x,y依次排列)
             * </pre>
             *
             * <code>repeated float pinklist = 6;</code>
             */
            public Builder addPinklist(float value) {
                copyOnWrite();
                instance.addPinklist(value);
                return this;
            }
            /**
             * <pre>
             *ink point Num, float[2 * ptnum](x,y依次排列)
             * </pre>
             *
             * <code>repeated float pinklist = 6;</code>
             */
            public Builder addAllPinklist(
                    java.lang.Iterable<? extends java.lang.Float> values) {
                copyOnWrite();
                instance.addAllPinklist(values);
                return this;
            }
            /**
             * <pre>
             *ink point Num, float[2 * ptnum](x,y依次排列)
             * </pre>
             *
             * <code>repeated float pinklist = 6;</code>
             */
            public Builder clearPinklist() {
                copyOnWrite();
                instance.clearPinklist();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Item_MeetWBInkDetail)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBInkDetail();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    pinklist_.makeImmutable();
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBInkDetail other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBInkDetail) arg1;
                    operid_ = visitor.visitInt(operid_ != 0, operid_,
                            other.operid_ != 0, other.operid_);
                    opermemberid_ = visitor.visitInt(opermemberid_ != 0, opermemberid_,
                            other.opermemberid_ != 0, other.opermemberid_);
                    utcstamp_ = visitor.visitLong(utcstamp_ != 0L, utcstamp_,
                            other.utcstamp_ != 0L, other.utcstamp_);
                    linesize_ = visitor.visitInt(linesize_ != 0, linesize_,
                            other.linesize_ != 0, other.linesize_);
                    argb_ = visitor.visitInt(argb_ != 0, argb_,
                            other.argb_ != 0, other.argb_);
                    pinklist_= visitor.visitFloatList(pinklist_, other.pinklist_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                        bitField0_ |= other.bitField0_;
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 13: {

                                    operid_ = input.readFixed32();
                                    break;
                                }
                                case 21: {

                                    opermemberid_ = input.readFixed32();
                                    break;
                                }
                                case 25: {

                                    utcstamp_ = input.readFixed64();
                                    break;
                                }
                                case 37: {

                                    linesize_ = input.readFixed32();
                                    break;
                                }
                                case 45: {

                                    argb_ = input.readFixed32();
                                    break;
                                }
                                case 53: {
                                    if (!pinklist_.isModifiable()) {
                                        pinklist_ =
                                                com.google.protobuf.GeneratedMessageLite.mutableCopy(pinklist_);
                                    }
                                    pinklist_.addFloat(input.readFloat());
                                    break;
                                }
                                case 50: {
                                    int length = input.readRawVarint32();
                                    int limit = input.pushLimit(length);
                                    if (!pinklist_.isModifiable() && input.getBytesUntilLimit() > 0) {
                                        final int currentSize = pinklist_.size();
                                        pinklist_ = pinklist_.mutableCopyWithCapacity(
                                                currentSize + (length/4));
                                    }
                                    while (input.getBytesUntilLimit() > 0) {
                                        pinklist_.addFloat(input.readFloat());
                                    }
                                    input.popLimit(limit);
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBInkDetail.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Item_MeetWBInkDetail)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBInkDetail DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Item_MeetWBInkDetail();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBInkDetail getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Item_MeetWBInkDetail> PARSER;

        public static com.google.protobuf.Parser<pbui_Item_MeetWBInkDetail> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Type_MeetWBInkDetailOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Type_MeetWBInkDetail)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <code>repeated .pbui_Item_MeetWBInkDetail item = 1;</code>
         */
        java.util.List<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBInkDetail>
        getItemList();
        /**
         * <code>repeated .pbui_Item_MeetWBInkDetail item = 1;</code>
         */
        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBInkDetail getItem(int index);
        /**
         * <code>repeated .pbui_Item_MeetWBInkDetail item = 1;</code>
         */
        int getItemCount();
    }
    /**
     * Protobuf type {@code pbui_Type_MeetWBInkDetail}
     */
    public  static final class pbui_Type_MeetWBInkDetail extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Type_MeetWBInkDetail, pbui_Type_MeetWBInkDetail.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Type_MeetWBInkDetail)
            pbui_Type_MeetWBInkDetailOrBuilder {
        private pbui_Type_MeetWBInkDetail() {
            item_ = emptyProtobufList();
        }
        public static final int ITEM_FIELD_NUMBER = 1;
        private com.google.protobuf.Internal.ProtobufList<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBInkDetail> item_;
        /**
         * <code>repeated .pbui_Item_MeetWBInkDetail item = 1;</code>
         */
        public java.util.List<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBInkDetail> getItemList() {
            return item_;
        }
        /**
         * <code>repeated .pbui_Item_MeetWBInkDetail item = 1;</code>
         */
        public java.util.List<? extends com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBInkDetailOrBuilder>
        getItemOrBuilderList() {
            return item_;
        }
        /**
         * <code>repeated .pbui_Item_MeetWBInkDetail item = 1;</code>
         */
        public int getItemCount() {
            return item_.size();
        }
        /**
         * <code>repeated .pbui_Item_MeetWBInkDetail item = 1;</code>
         */
        public com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBInkDetail getItem(int index) {
            return item_.get(index);
        }
        /**
         * <code>repeated .pbui_Item_MeetWBInkDetail item = 1;</code>
         */
        public com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBInkDetailOrBuilder getItemOrBuilder(
                int index) {
            return item_.get(index);
        }
        private void ensureItemIsMutable() {
            if (!item_.isModifiable()) {
                item_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(item_);
            }
        }

        /**
         * <code>repeated .pbui_Item_MeetWBInkDetail item = 1;</code>
         */
        private void setItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBInkDetail value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensureItemIsMutable();
            item_.set(index, value);
        }
        /**
         * <code>repeated .pbui_Item_MeetWBInkDetail item = 1;</code>
         */
        private void setItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBInkDetail.Builder builderForValue) {
            ensureItemIsMutable();
            item_.set(index, builderForValue.build());
        }
        /**
         * <code>repeated .pbui_Item_MeetWBInkDetail item = 1;</code>
         */
        private void addItem(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBInkDetail value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensureItemIsMutable();
            item_.add(value);
        }
        /**
         * <code>repeated .pbui_Item_MeetWBInkDetail item = 1;</code>
         */
        private void addItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBInkDetail value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensureItemIsMutable();
            item_.add(index, value);
        }
        /**
         * <code>repeated .pbui_Item_MeetWBInkDetail item = 1;</code>
         */
        private void addItem(
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBInkDetail.Builder builderForValue) {
            ensureItemIsMutable();
            item_.add(builderForValue.build());
        }
        /**
         * <code>repeated .pbui_Item_MeetWBInkDetail item = 1;</code>
         */
        private void addItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBInkDetail.Builder builderForValue) {
            ensureItemIsMutable();
            item_.add(index, builderForValue.build());
        }
        /**
         * <code>repeated .pbui_Item_MeetWBInkDetail item = 1;</code>
         */
        private void addAllItem(
                java.lang.Iterable<? extends com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBInkDetail> values) {
            ensureItemIsMutable();
            com.google.protobuf.AbstractMessageLite.addAll(
                    values, item_);
        }
        /**
         * <code>repeated .pbui_Item_MeetWBInkDetail item = 1;</code>
         */
        private void clearItem() {
            item_ = emptyProtobufList();
        }
        /**
         * <code>repeated .pbui_Item_MeetWBInkDetail item = 1;</code>
         */
        private void removeItem(int index) {
            ensureItemIsMutable();
            item_.remove(index);
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            for (int i = 0; i < item_.size(); i++) {
                output.writeMessage(1, item_.get(i));
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            for (int i = 0; i < item_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, item_.get(i));
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBInkDetail parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBInkDetail parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBInkDetail parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBInkDetail parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBInkDetail parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBInkDetail parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBInkDetail parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBInkDetail parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBInkDetail parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBInkDetail parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBInkDetail parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBInkDetail parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBInkDetail prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * Protobuf type {@code pbui_Type_MeetWBInkDetail}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBInkDetail, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Type_MeetWBInkDetail)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBInkDetailOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBInkDetail.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <code>repeated .pbui_Item_MeetWBInkDetail item = 1;</code>
             */
            public java.util.List<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBInkDetail> getItemList() {
                return java.util.Collections.unmodifiableList(
                        instance.getItemList());
            }
            /**
             * <code>repeated .pbui_Item_MeetWBInkDetail item = 1;</code>
             */
            public int getItemCount() {
                return instance.getItemCount();
            }/**
             * <code>repeated .pbui_Item_MeetWBInkDetail item = 1;</code>
             */
            public com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBInkDetail getItem(int index) {
                return instance.getItem(index);
            }
            /**
             * <code>repeated .pbui_Item_MeetWBInkDetail item = 1;</code>
             */
            public Builder setItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBInkDetail value) {
                copyOnWrite();
                instance.setItem(index, value);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetWBInkDetail item = 1;</code>
             */
            public Builder setItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBInkDetail.Builder builderForValue) {
                copyOnWrite();
                instance.setItem(index, builderForValue);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetWBInkDetail item = 1;</code>
             */
            public Builder addItem(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBInkDetail value) {
                copyOnWrite();
                instance.addItem(value);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetWBInkDetail item = 1;</code>
             */
            public Builder addItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBInkDetail value) {
                copyOnWrite();
                instance.addItem(index, value);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetWBInkDetail item = 1;</code>
             */
            public Builder addItem(
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBInkDetail.Builder builderForValue) {
                copyOnWrite();
                instance.addItem(builderForValue);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetWBInkDetail item = 1;</code>
             */
            public Builder addItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBInkDetail.Builder builderForValue) {
                copyOnWrite();
                instance.addItem(index, builderForValue);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetWBInkDetail item = 1;</code>
             */
            public Builder addAllItem(
                    java.lang.Iterable<? extends com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBInkDetail> values) {
                copyOnWrite();
                instance.addAllItem(values);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetWBInkDetail item = 1;</code>
             */
            public Builder clearItem() {
                copyOnWrite();
                instance.clearItem();
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetWBInkDetail item = 1;</code>
             */
            public Builder removeItem(int index) {
                copyOnWrite();
                instance.removeItem(index);
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Type_MeetWBInkDetail)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBInkDetail();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    item_.makeImmutable();
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBInkDetail other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBInkDetail) arg1;
                    item_= visitor.visitList(item_, other.item_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 10: {
                                    if (!item_.isModifiable()) {
                                        item_ =
                                                com.google.protobuf.GeneratedMessageLite.mutableCopy(item_);
                                    }
                                    item_.add(
                                            input.readMessage(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBInkDetail.parser(), extensionRegistry));
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBInkDetail.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Type_MeetWBInkDetail)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBInkDetail DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Type_MeetWBInkDetail();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBInkDetail getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Type_MeetWBInkDetail> PARSER;

        public static com.google.protobuf.Parser<pbui_Type_MeetWBInkDetail> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Item_MeetWBRectDetailOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Item_MeetWBRectDetail)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <pre>
         *操作ID 终端计算产生 为0表示清除所有等于opermemberid的白板操作
         * </pre>
         *
         * <code>fixed32 operid = 1;</code>
         */
        int getOperid();

        /**
         * <pre>
         *当前该命令的人员ID 为0表示清除所有等于opermemberid的白板操作
         * </pre>
         *
         * <code>fixed32 opermemberid = 2;</code>
         */
        int getOpermemberid();

        /**
         * <pre>
         *发起人的人员ID 白板标识使用
         * </pre>
         *
         * <code>fixed32 srcmemid = 3;</code>
         */
        int getSrcmemid();

        /**
         * <pre>
         *发起人的白板标识 取微秒级的时间作标识 白板标识使用
         * </pre>
         *
         * <code>fixed64 srcwbid = 4;</code>
         */
        long getSrcwbid();

        /**
         * <pre>
         *时间戳  微秒
         * </pre>
         *
         * <code>fixed64 utcstamp = 5;</code>
         */
        long getUtcstamp();

        /**
         * <pre>
         *图形类型 为0表示清除所有等于figuretype的白板操作
         * </pre>
         *
         * <code>fixed32 figuretype = 6;</code>
         */
        int getFiguretype();

        /**
         * <pre>
         *线条宽度
         * </pre>
         *
         * <code>fixed32 linesize = 7;</code>
         */
        int getLinesize();

        /**
         * <pre>
         *线条颜色
         * </pre>
         *
         * <code>fixed32 Argb = 8;</code>
         */
        int getArgb();

        /**
         * <pre>
         *(lx,ly,rx,ry 左上角,右下角坐标)
         * </pre>
         *
         * <code>repeated float pt = 9;</code>
         */
        java.util.List<java.lang.Float> getPtList();
        /**
         * <pre>
         *(lx,ly,rx,ry 左上角,右下角坐标)
         * </pre>
         *
         * <code>repeated float pt = 9;</code>
         */
        int getPtCount();
        /**
         * <pre>
         *(lx,ly,rx,ry 左上角,右下角坐标)
         * </pre>
         *
         * <code>repeated float pt = 9;</code>
         */
        float getPt(int index);
    }
    /**
     * <pre>
     *添加矩形、直线、圆形
     *type:Pb_TYPE_MEET_INTERFACE_WHITEBOARD
     *rect line elipse
     *callback&#92;call
     *method: add&#92;query pagequery
     * </pre>
     *
     * Protobuf type {@code pbui_Item_MeetWBRectDetail}
     */
    public  static final class pbui_Item_MeetWBRectDetail extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Item_MeetWBRectDetail, pbui_Item_MeetWBRectDetail.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Item_MeetWBRectDetail)
            pbui_Item_MeetWBRectDetailOrBuilder {
        private pbui_Item_MeetWBRectDetail() {
            pt_ = emptyFloatList();
        }
        private int bitField0_;
        public static final int OPERID_FIELD_NUMBER = 1;
        private int operid_;
        /**
         * <pre>
         *操作ID 终端计算产生 为0表示清除所有等于opermemberid的白板操作
         * </pre>
         *
         * <code>fixed32 operid = 1;</code>
         */
        public int getOperid() {
            return operid_;
        }
        /**
         * <pre>
         *操作ID 终端计算产生 为0表示清除所有等于opermemberid的白板操作
         * </pre>
         *
         * <code>fixed32 operid = 1;</code>
         */
        private void setOperid(int value) {

            operid_ = value;
        }
        /**
         * <pre>
         *操作ID 终端计算产生 为0表示清除所有等于opermemberid的白板操作
         * </pre>
         *
         * <code>fixed32 operid = 1;</code>
         */
        private void clearOperid() {

            operid_ = 0;
        }

        public static final int OPERMEMBERID_FIELD_NUMBER = 2;
        private int opermemberid_;
        /**
         * <pre>
         *当前该命令的人员ID 为0表示清除所有等于opermemberid的白板操作
         * </pre>
         *
         * <code>fixed32 opermemberid = 2;</code>
         */
        public int getOpermemberid() {
            return opermemberid_;
        }
        /**
         * <pre>
         *当前该命令的人员ID 为0表示清除所有等于opermemberid的白板操作
         * </pre>
         *
         * <code>fixed32 opermemberid = 2;</code>
         */
        private void setOpermemberid(int value) {

            opermemberid_ = value;
        }
        /**
         * <pre>
         *当前该命令的人员ID 为0表示清除所有等于opermemberid的白板操作
         * </pre>
         *
         * <code>fixed32 opermemberid = 2;</code>
         */
        private void clearOpermemberid() {

            opermemberid_ = 0;
        }

        public static final int SRCMEMID_FIELD_NUMBER = 3;
        private int srcmemid_;
        /**
         * <pre>
         *发起人的人员ID 白板标识使用
         * </pre>
         *
         * <code>fixed32 srcmemid = 3;</code>
         */
        public int getSrcmemid() {
            return srcmemid_;
        }
        /**
         * <pre>
         *发起人的人员ID 白板标识使用
         * </pre>
         *
         * <code>fixed32 srcmemid = 3;</code>
         */
        private void setSrcmemid(int value) {

            srcmemid_ = value;
        }
        /**
         * <pre>
         *发起人的人员ID 白板标识使用
         * </pre>
         *
         * <code>fixed32 srcmemid = 3;</code>
         */
        private void clearSrcmemid() {

            srcmemid_ = 0;
        }

        public static final int SRCWBID_FIELD_NUMBER = 4;
        private long srcwbid_;
        /**
         * <pre>
         *发起人的白板标识 取微秒级的时间作标识 白板标识使用
         * </pre>
         *
         * <code>fixed64 srcwbid = 4;</code>
         */
        public long getSrcwbid() {
            return srcwbid_;
        }
        /**
         * <pre>
         *发起人的白板标识 取微秒级的时间作标识 白板标识使用
         * </pre>
         *
         * <code>fixed64 srcwbid = 4;</code>
         */
        private void setSrcwbid(long value) {

            srcwbid_ = value;
        }
        /**
         * <pre>
         *发起人的白板标识 取微秒级的时间作标识 白板标识使用
         * </pre>
         *
         * <code>fixed64 srcwbid = 4;</code>
         */
        private void clearSrcwbid() {

            srcwbid_ = 0L;
        }

        public static final int UTCSTAMP_FIELD_NUMBER = 5;
        private long utcstamp_;
        /**
         * <pre>
         *时间戳  微秒
         * </pre>
         *
         * <code>fixed64 utcstamp = 5;</code>
         */
        public long getUtcstamp() {
            return utcstamp_;
        }
        /**
         * <pre>
         *时间戳  微秒
         * </pre>
         *
         * <code>fixed64 utcstamp = 5;</code>
         */
        private void setUtcstamp(long value) {

            utcstamp_ = value;
        }
        /**
         * <pre>
         *时间戳  微秒
         * </pre>
         *
         * <code>fixed64 utcstamp = 5;</code>
         */
        private void clearUtcstamp() {

            utcstamp_ = 0L;
        }

        public static final int FIGURETYPE_FIELD_NUMBER = 6;
        private int figuretype_;
        /**
         * <pre>
         *图形类型 为0表示清除所有等于figuretype的白板操作
         * </pre>
         *
         * <code>fixed32 figuretype = 6;</code>
         */
        public int getFiguretype() {
            return figuretype_;
        }
        /**
         * <pre>
         *图形类型 为0表示清除所有等于figuretype的白板操作
         * </pre>
         *
         * <code>fixed32 figuretype = 6;</code>
         */
        private void setFiguretype(int value) {

            figuretype_ = value;
        }
        /**
         * <pre>
         *图形类型 为0表示清除所有等于figuretype的白板操作
         * </pre>
         *
         * <code>fixed32 figuretype = 6;</code>
         */
        private void clearFiguretype() {

            figuretype_ = 0;
        }

        public static final int LINESIZE_FIELD_NUMBER = 7;
        private int linesize_;
        /**
         * <pre>
         *线条宽度
         * </pre>
         *
         * <code>fixed32 linesize = 7;</code>
         */
        public int getLinesize() {
            return linesize_;
        }
        /**
         * <pre>
         *线条宽度
         * </pre>
         *
         * <code>fixed32 linesize = 7;</code>
         */
        private void setLinesize(int value) {

            linesize_ = value;
        }
        /**
         * <pre>
         *线条宽度
         * </pre>
         *
         * <code>fixed32 linesize = 7;</code>
         */
        private void clearLinesize() {

            linesize_ = 0;
        }

        public static final int ARGB_FIELD_NUMBER = 8;
        private int argb_;
        /**
         * <pre>
         *线条颜色
         * </pre>
         *
         * <code>fixed32 Argb = 8;</code>
         */
        public int getArgb() {
            return argb_;
        }
        /**
         * <pre>
         *线条颜色
         * </pre>
         *
         * <code>fixed32 Argb = 8;</code>
         */
        private void setArgb(int value) {

            argb_ = value;
        }
        /**
         * <pre>
         *线条颜色
         * </pre>
         *
         * <code>fixed32 Argb = 8;</code>
         */
        private void clearArgb() {

            argb_ = 0;
        }

        public static final int PT_FIELD_NUMBER = 9;
        private com.google.protobuf.Internal.FloatList pt_;
        /**
         * <pre>
         *(lx,ly,rx,ry 左上角,右下角坐标)
         * </pre>
         *
         * <code>repeated float pt = 9;</code>
         */
        public java.util.List<java.lang.Float>
        getPtList() {
            return pt_;
        }
        /**
         * <pre>
         *(lx,ly,rx,ry 左上角,右下角坐标)
         * </pre>
         *
         * <code>repeated float pt = 9;</code>
         */
        public int getPtCount() {
            return pt_.size();
        }
        /**
         * <pre>
         *(lx,ly,rx,ry 左上角,右下角坐标)
         * </pre>
         *
         * <code>repeated float pt = 9;</code>
         */
        public float getPt(int index) {
            return pt_.getFloat(index);
        }
        private void ensurePtIsMutable() {
            if (!pt_.isModifiable()) {
                pt_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(pt_);
            }
        }
        /**
         * <pre>
         *(lx,ly,rx,ry 左上角,右下角坐标)
         * </pre>
         *
         * <code>repeated float pt = 9;</code>
         */
        private void setPt(
                int index, float value) {
            ensurePtIsMutable();
            pt_.setFloat(index, value);
        }
        /**
         * <pre>
         *(lx,ly,rx,ry 左上角,右下角坐标)
         * </pre>
         *
         * <code>repeated float pt = 9;</code>
         */
        private void addPt(float value) {
            ensurePtIsMutable();
            pt_.addFloat(value);
        }
        /**
         * <pre>
         *(lx,ly,rx,ry 左上角,右下角坐标)
         * </pre>
         *
         * <code>repeated float pt = 9;</code>
         */
        private void addAllPt(
                java.lang.Iterable<? extends java.lang.Float> values) {
            ensurePtIsMutable();
            com.google.protobuf.AbstractMessageLite.addAll(
                    values, pt_);
        }
        /**
         * <pre>
         *(lx,ly,rx,ry 左上角,右下角坐标)
         * </pre>
         *
         * <code>repeated float pt = 9;</code>
         */
        private void clearPt() {
            pt_ = emptyFloatList();
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (operid_ != 0) {
                output.writeFixed32(1, operid_);
            }
            if (opermemberid_ != 0) {
                output.writeFixed32(2, opermemberid_);
            }
            if (srcmemid_ != 0) {
                output.writeFixed32(3, srcmemid_);
            }
            if (srcwbid_ != 0L) {
                output.writeFixed64(4, srcwbid_);
            }
            if (utcstamp_ != 0L) {
                output.writeFixed64(5, utcstamp_);
            }
            if (figuretype_ != 0) {
                output.writeFixed32(6, figuretype_);
            }
            if (linesize_ != 0) {
                output.writeFixed32(7, linesize_);
            }
            if (argb_ != 0) {
                output.writeFixed32(8, argb_);
            }
            for (int i = 0; i < pt_.size(); i++) {
                output.writeFloat(9, pt_.getFloat(i));
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (operid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(1, operid_);
            }
            if (opermemberid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(2, opermemberid_);
            }
            if (srcmemid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(3, srcmemid_);
            }
            if (srcwbid_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed64Size(4, srcwbid_);
            }
            if (utcstamp_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed64Size(5, utcstamp_);
            }
            if (figuretype_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(6, figuretype_);
            }
            if (linesize_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(7, linesize_);
            }
            if (argb_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(8, argb_);
            }
            {
                int dataSize = 0;
                dataSize = 4 * getPtList().size();
                size += dataSize;
                size += 1 * getPtList().size();
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBRectDetail parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBRectDetail parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBRectDetail parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBRectDetail parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBRectDetail parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBRectDetail parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBRectDetail parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBRectDetail parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBRectDetail parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBRectDetail parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBRectDetail parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBRectDetail parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBRectDetail prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *添加矩形、直线、圆形
         *type:Pb_TYPE_MEET_INTERFACE_WHITEBOARD
         *rect line elipse
         *callback&#92;call
         *method: add&#92;query pagequery
         * </pre>
         *
         * Protobuf type {@code pbui_Item_MeetWBRectDetail}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBRectDetail, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Item_MeetWBRectDetail)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBRectDetailOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBRectDetail.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <pre>
             *操作ID 终端计算产生 为0表示清除所有等于opermemberid的白板操作
             * </pre>
             *
             * <code>fixed32 operid = 1;</code>
             */
            public int getOperid() {
                return instance.getOperid();
            }
            /**
             * <pre>
             *操作ID 终端计算产生 为0表示清除所有等于opermemberid的白板操作
             * </pre>
             *
             * <code>fixed32 operid = 1;</code>
             */
            public Builder setOperid(int value) {
                copyOnWrite();
                instance.setOperid(value);
                return this;
            }
            /**
             * <pre>
             *操作ID 终端计算产生 为0表示清除所有等于opermemberid的白板操作
             * </pre>
             *
             * <code>fixed32 operid = 1;</code>
             */
            public Builder clearOperid() {
                copyOnWrite();
                instance.clearOperid();
                return this;
            }

            /**
             * <pre>
             *当前该命令的人员ID 为0表示清除所有等于opermemberid的白板操作
             * </pre>
             *
             * <code>fixed32 opermemberid = 2;</code>
             */
            public int getOpermemberid() {
                return instance.getOpermemberid();
            }
            /**
             * <pre>
             *当前该命令的人员ID 为0表示清除所有等于opermemberid的白板操作
             * </pre>
             *
             * <code>fixed32 opermemberid = 2;</code>
             */
            public Builder setOpermemberid(int value) {
                copyOnWrite();
                instance.setOpermemberid(value);
                return this;
            }
            /**
             * <pre>
             *当前该命令的人员ID 为0表示清除所有等于opermemberid的白板操作
             * </pre>
             *
             * <code>fixed32 opermemberid = 2;</code>
             */
            public Builder clearOpermemberid() {
                copyOnWrite();
                instance.clearOpermemberid();
                return this;
            }

            /**
             * <pre>
             *发起人的人员ID 白板标识使用
             * </pre>
             *
             * <code>fixed32 srcmemid = 3;</code>
             */
            public int getSrcmemid() {
                return instance.getSrcmemid();
            }
            /**
             * <pre>
             *发起人的人员ID 白板标识使用
             * </pre>
             *
             * <code>fixed32 srcmemid = 3;</code>
             */
            public Builder setSrcmemid(int value) {
                copyOnWrite();
                instance.setSrcmemid(value);
                return this;
            }
            /**
             * <pre>
             *发起人的人员ID 白板标识使用
             * </pre>
             *
             * <code>fixed32 srcmemid = 3;</code>
             */
            public Builder clearSrcmemid() {
                copyOnWrite();
                instance.clearSrcmemid();
                return this;
            }

            /**
             * <pre>
             *发起人的白板标识 取微秒级的时间作标识 白板标识使用
             * </pre>
             *
             * <code>fixed64 srcwbid = 4;</code>
             */
            public long getSrcwbid() {
                return instance.getSrcwbid();
            }
            /**
             * <pre>
             *发起人的白板标识 取微秒级的时间作标识 白板标识使用
             * </pre>
             *
             * <code>fixed64 srcwbid = 4;</code>
             */
            public Builder setSrcwbid(long value) {
                copyOnWrite();
                instance.setSrcwbid(value);
                return this;
            }
            /**
             * <pre>
             *发起人的白板标识 取微秒级的时间作标识 白板标识使用
             * </pre>
             *
             * <code>fixed64 srcwbid = 4;</code>
             */
            public Builder clearSrcwbid() {
                copyOnWrite();
                instance.clearSrcwbid();
                return this;
            }

            /**
             * <pre>
             *时间戳  微秒
             * </pre>
             *
             * <code>fixed64 utcstamp = 5;</code>
             */
            public long getUtcstamp() {
                return instance.getUtcstamp();
            }
            /**
             * <pre>
             *时间戳  微秒
             * </pre>
             *
             * <code>fixed64 utcstamp = 5;</code>
             */
            public Builder setUtcstamp(long value) {
                copyOnWrite();
                instance.setUtcstamp(value);
                return this;
            }
            /**
             * <pre>
             *时间戳  微秒
             * </pre>
             *
             * <code>fixed64 utcstamp = 5;</code>
             */
            public Builder clearUtcstamp() {
                copyOnWrite();
                instance.clearUtcstamp();
                return this;
            }

            /**
             * <pre>
             *图形类型 为0表示清除所有等于figuretype的白板操作
             * </pre>
             *
             * <code>fixed32 figuretype = 6;</code>
             */
            public int getFiguretype() {
                return instance.getFiguretype();
            }
            /**
             * <pre>
             *图形类型 为0表示清除所有等于figuretype的白板操作
             * </pre>
             *
             * <code>fixed32 figuretype = 6;</code>
             */
            public Builder setFiguretype(int value) {
                copyOnWrite();
                instance.setFiguretype(value);
                return this;
            }
            /**
             * <pre>
             *图形类型 为0表示清除所有等于figuretype的白板操作
             * </pre>
             *
             * <code>fixed32 figuretype = 6;</code>
             */
            public Builder clearFiguretype() {
                copyOnWrite();
                instance.clearFiguretype();
                return this;
            }

            /**
             * <pre>
             *线条宽度
             * </pre>
             *
             * <code>fixed32 linesize = 7;</code>
             */
            public int getLinesize() {
                return instance.getLinesize();
            }
            /**
             * <pre>
             *线条宽度
             * </pre>
             *
             * <code>fixed32 linesize = 7;</code>
             */
            public Builder setLinesize(int value) {
                copyOnWrite();
                instance.setLinesize(value);
                return this;
            }
            /**
             * <pre>
             *线条宽度
             * </pre>
             *
             * <code>fixed32 linesize = 7;</code>
             */
            public Builder clearLinesize() {
                copyOnWrite();
                instance.clearLinesize();
                return this;
            }

            /**
             * <pre>
             *线条颜色
             * </pre>
             *
             * <code>fixed32 Argb = 8;</code>
             */
            public int getArgb() {
                return instance.getArgb();
            }
            /**
             * <pre>
             *线条颜色
             * </pre>
             *
             * <code>fixed32 Argb = 8;</code>
             */
            public Builder setArgb(int value) {
                copyOnWrite();
                instance.setArgb(value);
                return this;
            }
            /**
             * <pre>
             *线条颜色
             * </pre>
             *
             * <code>fixed32 Argb = 8;</code>
             */
            public Builder clearArgb() {
                copyOnWrite();
                instance.clearArgb();
                return this;
            }

            /**
             * <pre>
             *(lx,ly,rx,ry 左上角,右下角坐标)
             * </pre>
             *
             * <code>repeated float pt = 9;</code>
             */
            public java.util.List<java.lang.Float>
            getPtList() {
                return java.util.Collections.unmodifiableList(
                        instance.getPtList());
            }
            /**
             * <pre>
             *(lx,ly,rx,ry 左上角,右下角坐标)
             * </pre>
             *
             * <code>repeated float pt = 9;</code>
             */
            public int getPtCount() {
                return instance.getPtCount();
            }
            /**
             * <pre>
             *(lx,ly,rx,ry 左上角,右下角坐标)
             * </pre>
             *
             * <code>repeated float pt = 9;</code>
             */
            public float getPt(int index) {
                return instance.getPt(index);
            }
            /**
             * <pre>
             *(lx,ly,rx,ry 左上角,右下角坐标)
             * </pre>
             *
             * <code>repeated float pt = 9;</code>
             */
            public Builder setPt(
                    int index, float value) {
                copyOnWrite();
                instance.setPt(index, value);
                return this;
            }
            /**
             * <pre>
             *(lx,ly,rx,ry 左上角,右下角坐标)
             * </pre>
             *
             * <code>repeated float pt = 9;</code>
             */
            public Builder addPt(float value) {
                copyOnWrite();
                instance.addPt(value);
                return this;
            }
            /**
             * <pre>
             *(lx,ly,rx,ry 左上角,右下角坐标)
             * </pre>
             *
             * <code>repeated float pt = 9;</code>
             */
            public Builder addAllPt(
                    java.lang.Iterable<? extends java.lang.Float> values) {
                copyOnWrite();
                instance.addAllPt(values);
                return this;
            }
            /**
             * <pre>
             *(lx,ly,rx,ry 左上角,右下角坐标)
             * </pre>
             *
             * <code>repeated float pt = 9;</code>
             */
            public Builder clearPt() {
                copyOnWrite();
                instance.clearPt();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Item_MeetWBRectDetail)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBRectDetail();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    pt_.makeImmutable();
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBRectDetail other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBRectDetail) arg1;
                    operid_ = visitor.visitInt(operid_ != 0, operid_,
                            other.operid_ != 0, other.operid_);
                    opermemberid_ = visitor.visitInt(opermemberid_ != 0, opermemberid_,
                            other.opermemberid_ != 0, other.opermemberid_);
                    srcmemid_ = visitor.visitInt(srcmemid_ != 0, srcmemid_,
                            other.srcmemid_ != 0, other.srcmemid_);
                    srcwbid_ = visitor.visitLong(srcwbid_ != 0L, srcwbid_,
                            other.srcwbid_ != 0L, other.srcwbid_);
                    utcstamp_ = visitor.visitLong(utcstamp_ != 0L, utcstamp_,
                            other.utcstamp_ != 0L, other.utcstamp_);
                    figuretype_ = visitor.visitInt(figuretype_ != 0, figuretype_,
                            other.figuretype_ != 0, other.figuretype_);
                    linesize_ = visitor.visitInt(linesize_ != 0, linesize_,
                            other.linesize_ != 0, other.linesize_);
                    argb_ = visitor.visitInt(argb_ != 0, argb_,
                            other.argb_ != 0, other.argb_);
                    pt_= visitor.visitFloatList(pt_, other.pt_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                        bitField0_ |= other.bitField0_;
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 13: {

                                    operid_ = input.readFixed32();
                                    break;
                                }
                                case 21: {

                                    opermemberid_ = input.readFixed32();
                                    break;
                                }
                                case 29: {

                                    srcmemid_ = input.readFixed32();
                                    break;
                                }
                                case 33: {

                                    srcwbid_ = input.readFixed64();
                                    break;
                                }
                                case 41: {

                                    utcstamp_ = input.readFixed64();
                                    break;
                                }
                                case 53: {

                                    figuretype_ = input.readFixed32();
                                    break;
                                }
                                case 61: {

                                    linesize_ = input.readFixed32();
                                    break;
                                }
                                case 69: {

                                    argb_ = input.readFixed32();
                                    break;
                                }
                                case 77: {
                                    if (!pt_.isModifiable()) {
                                        pt_ =
                                                com.google.protobuf.GeneratedMessageLite.mutableCopy(pt_);
                                    }
                                    pt_.addFloat(input.readFloat());
                                    break;
                                }
                                case 74: {
                                    int length = input.readRawVarint32();
                                    int limit = input.pushLimit(length);
                                    if (!pt_.isModifiable() && input.getBytesUntilLimit() > 0) {
                                        final int currentSize = pt_.size();
                                        pt_ = pt_.mutableCopyWithCapacity(
                                                currentSize + (length/4));
                                    }
                                    while (input.getBytesUntilLimit() > 0) {
                                        pt_.addFloat(input.readFloat());
                                    }
                                    input.popLimit(limit);
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBRectDetail.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Item_MeetWBRectDetail)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBRectDetail DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Item_MeetWBRectDetail();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBRectDetail getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Item_MeetWBRectDetail> PARSER;

        public static com.google.protobuf.Parser<pbui_Item_MeetWBRectDetail> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Type_MeetWBRectDetailOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Type_MeetWBRectDetail)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <code>repeated .pbui_Item_MeetWBRectDetail item = 1;</code>
         */
        java.util.List<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBRectDetail>
        getItemList();
        /**
         * <code>repeated .pbui_Item_MeetWBRectDetail item = 1;</code>
         */
        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBRectDetail getItem(int index);
        /**
         * <code>repeated .pbui_Item_MeetWBRectDetail item = 1;</code>
         */
        int getItemCount();
    }
    /**
     * <pre>
     *返回查询的矩形、直线、圆形
     *type:Pb_TYPE_MEET_INTERFACE_WHITEBOARD
     *rect line elipse
     *callback&#92;call
     *method: add&#92;query pagequery
     * </pre>
     *
     * Protobuf type {@code pbui_Type_MeetWBRectDetail}
     */
    public  static final class pbui_Type_MeetWBRectDetail extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Type_MeetWBRectDetail, pbui_Type_MeetWBRectDetail.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Type_MeetWBRectDetail)
            pbui_Type_MeetWBRectDetailOrBuilder {
        private pbui_Type_MeetWBRectDetail() {
            item_ = emptyProtobufList();
        }
        public static final int ITEM_FIELD_NUMBER = 1;
        private com.google.protobuf.Internal.ProtobufList<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBRectDetail> item_;
        /**
         * <code>repeated .pbui_Item_MeetWBRectDetail item = 1;</code>
         */
        public java.util.List<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBRectDetail> getItemList() {
            return item_;
        }
        /**
         * <code>repeated .pbui_Item_MeetWBRectDetail item = 1;</code>
         */
        public java.util.List<? extends com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBRectDetailOrBuilder>
        getItemOrBuilderList() {
            return item_;
        }
        /**
         * <code>repeated .pbui_Item_MeetWBRectDetail item = 1;</code>
         */
        public int getItemCount() {
            return item_.size();
        }
        /**
         * <code>repeated .pbui_Item_MeetWBRectDetail item = 1;</code>
         */
        public com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBRectDetail getItem(int index) {
            return item_.get(index);
        }
        /**
         * <code>repeated .pbui_Item_MeetWBRectDetail item = 1;</code>
         */
        public com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBRectDetailOrBuilder getItemOrBuilder(
                int index) {
            return item_.get(index);
        }
        private void ensureItemIsMutable() {
            if (!item_.isModifiable()) {
                item_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(item_);
            }
        }

        /**
         * <code>repeated .pbui_Item_MeetWBRectDetail item = 1;</code>
         */
        private void setItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBRectDetail value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensureItemIsMutable();
            item_.set(index, value);
        }
        /**
         * <code>repeated .pbui_Item_MeetWBRectDetail item = 1;</code>
         */
        private void setItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBRectDetail.Builder builderForValue) {
            ensureItemIsMutable();
            item_.set(index, builderForValue.build());
        }
        /**
         * <code>repeated .pbui_Item_MeetWBRectDetail item = 1;</code>
         */
        private void addItem(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBRectDetail value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensureItemIsMutable();
            item_.add(value);
        }
        /**
         * <code>repeated .pbui_Item_MeetWBRectDetail item = 1;</code>
         */
        private void addItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBRectDetail value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensureItemIsMutable();
            item_.add(index, value);
        }
        /**
         * <code>repeated .pbui_Item_MeetWBRectDetail item = 1;</code>
         */
        private void addItem(
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBRectDetail.Builder builderForValue) {
            ensureItemIsMutable();
            item_.add(builderForValue.build());
        }
        /**
         * <code>repeated .pbui_Item_MeetWBRectDetail item = 1;</code>
         */
        private void addItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBRectDetail.Builder builderForValue) {
            ensureItemIsMutable();
            item_.add(index, builderForValue.build());
        }
        /**
         * <code>repeated .pbui_Item_MeetWBRectDetail item = 1;</code>
         */
        private void addAllItem(
                java.lang.Iterable<? extends com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBRectDetail> values) {
            ensureItemIsMutable();
            com.google.protobuf.AbstractMessageLite.addAll(
                    values, item_);
        }
        /**
         * <code>repeated .pbui_Item_MeetWBRectDetail item = 1;</code>
         */
        private void clearItem() {
            item_ = emptyProtobufList();
        }
        /**
         * <code>repeated .pbui_Item_MeetWBRectDetail item = 1;</code>
         */
        private void removeItem(int index) {
            ensureItemIsMutable();
            item_.remove(index);
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            for (int i = 0; i < item_.size(); i++) {
                output.writeMessage(1, item_.get(i));
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            for (int i = 0; i < item_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, item_.get(i));
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBRectDetail parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBRectDetail parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBRectDetail parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBRectDetail parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBRectDetail parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBRectDetail parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBRectDetail parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBRectDetail parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBRectDetail parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBRectDetail parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBRectDetail parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBRectDetail parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBRectDetail prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *返回查询的矩形、直线、圆形
         *type:Pb_TYPE_MEET_INTERFACE_WHITEBOARD
         *rect line elipse
         *callback&#92;call
         *method: add&#92;query pagequery
         * </pre>
         *
         * Protobuf type {@code pbui_Type_MeetWBRectDetail}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBRectDetail, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Type_MeetWBRectDetail)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBRectDetailOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBRectDetail.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <code>repeated .pbui_Item_MeetWBRectDetail item = 1;</code>
             */
            public java.util.List<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBRectDetail> getItemList() {
                return java.util.Collections.unmodifiableList(
                        instance.getItemList());
            }
            /**
             * <code>repeated .pbui_Item_MeetWBRectDetail item = 1;</code>
             */
            public int getItemCount() {
                return instance.getItemCount();
            }/**
             * <code>repeated .pbui_Item_MeetWBRectDetail item = 1;</code>
             */
            public com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBRectDetail getItem(int index) {
                return instance.getItem(index);
            }
            /**
             * <code>repeated .pbui_Item_MeetWBRectDetail item = 1;</code>
             */
            public Builder setItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBRectDetail value) {
                copyOnWrite();
                instance.setItem(index, value);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetWBRectDetail item = 1;</code>
             */
            public Builder setItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBRectDetail.Builder builderForValue) {
                copyOnWrite();
                instance.setItem(index, builderForValue);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetWBRectDetail item = 1;</code>
             */
            public Builder addItem(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBRectDetail value) {
                copyOnWrite();
                instance.addItem(value);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetWBRectDetail item = 1;</code>
             */
            public Builder addItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBRectDetail value) {
                copyOnWrite();
                instance.addItem(index, value);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetWBRectDetail item = 1;</code>
             */
            public Builder addItem(
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBRectDetail.Builder builderForValue) {
                copyOnWrite();
                instance.addItem(builderForValue);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetWBRectDetail item = 1;</code>
             */
            public Builder addItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBRectDetail.Builder builderForValue) {
                copyOnWrite();
                instance.addItem(index, builderForValue);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetWBRectDetail item = 1;</code>
             */
            public Builder addAllItem(
                    java.lang.Iterable<? extends com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBRectDetail> values) {
                copyOnWrite();
                instance.addAllItem(values);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetWBRectDetail item = 1;</code>
             */
            public Builder clearItem() {
                copyOnWrite();
                instance.clearItem();
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetWBRectDetail item = 1;</code>
             */
            public Builder removeItem(int index) {
                copyOnWrite();
                instance.removeItem(index);
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Type_MeetWBRectDetail)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBRectDetail();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    item_.makeImmutable();
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBRectDetail other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBRectDetail) arg1;
                    item_= visitor.visitList(item_, other.item_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 10: {
                                    if (!item_.isModifiable()) {
                                        item_ =
                                                com.google.protobuf.GeneratedMessageLite.mutableCopy(item_);
                                    }
                                    item_.add(
                                            input.readMessage(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBRectDetail.parser(), extensionRegistry));
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBRectDetail.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Type_MeetWBRectDetail)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBRectDetail DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Type_MeetWBRectDetail();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBRectDetail getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Type_MeetWBRectDetail> PARSER;

        public static com.google.protobuf.Parser<pbui_Type_MeetWBRectDetail> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Item_MeetWBTextDetailOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Item_MeetWBTextDetail)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <pre>
         *操作ID 终端计算产生 为0表示清除所有等于opermemberid的白板操作
         * </pre>
         *
         * <code>fixed32 operid = 1;</code>
         */
        int getOperid();

        /**
         * <pre>
         *当前该命令的人员ID 为0表示清除所有等于opermemberid的白板操作
         * </pre>
         *
         * <code>fixed32 opermemberid = 2;</code>
         */
        int getOpermemberid();

        /**
         * <pre>
         *发起人的人员ID 白板标识使用
         * </pre>
         *
         * <code>fixed32 srcmemid = 3;</code>
         */
        int getSrcmemid();

        /**
         * <pre>
         *发起人的白板标识 取微秒级的时间作标识 白板标识使用
         * </pre>
         *
         * <code>fixed64 srcwbid = 4;</code>
         */
        long getSrcwbid();

        /**
         * <pre>
         *时间戳  微秒
         * </pre>
         *
         * <code>fixed64 utcstamp = 5;</code>
         */
        long getUtcstamp();

        /**
         * <pre>
         *图形类型 为0表示清除所有等于figuretype的白板操作
         * </pre>
         *
         * <code>fixed32 figuretype = 6;</code>
         */
        int getFiguretype();

        /**
         * <pre>
         *字体大小
         * </pre>
         *
         * <code>fixed32 fontsize = 7;</code>
         */
        int getFontsize();

        /**
         * <pre>
         *字体其它属性
         * </pre>
         *
         * <code>fixed32 fontflag = 8;</code>
         */
        int getFontflag();

        /**
         * <pre>
         *字体颜色
         * </pre>
         *
         * <code>fixed32 Argb = 9;</code>
         */
        int getArgb();

        /**
         * <pre>
         *字体名称
         * </pre>
         *
         * <code>bytes fontname = 10;</code>
         */
        com.google.protobuf.ByteString getFontname();

        /**
         * <pre>
         *(lx,ly,左上角坐标)
         * </pre>
         *
         * <code>float lx = 11;</code>
         */
        float getLx();

        /**
         * <pre>
         *(lx,ly,左上角坐标)
         * </pre>
         *
         * <code>float ly = 12;</code>
         */
        float getLy();

        /**
         * <code>bytes ptext = 13;</code>
         */
        com.google.protobuf.ByteString getPtext();
    }
    /**
     * <pre>
     *添加文本
     *type:Pb_TYPE_MEET_INTERFACE_WHITEBOARD
     *callreturn
     *method: add query pagequery
     * </pre>
     *
     * Protobuf type {@code pbui_Item_MeetWBTextDetail}
     */
    public  static final class pbui_Item_MeetWBTextDetail extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Item_MeetWBTextDetail, pbui_Item_MeetWBTextDetail.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Item_MeetWBTextDetail)
            pbui_Item_MeetWBTextDetailOrBuilder {
        private pbui_Item_MeetWBTextDetail() {
            fontname_ = com.google.protobuf.ByteString.EMPTY;
            ptext_ = com.google.protobuf.ByteString.EMPTY;
        }
        public static final int OPERID_FIELD_NUMBER = 1;
        private int operid_;
        /**
         * <pre>
         *操作ID 终端计算产生 为0表示清除所有等于opermemberid的白板操作
         * </pre>
         *
         * <code>fixed32 operid = 1;</code>
         */
        public int getOperid() {
            return operid_;
        }
        /**
         * <pre>
         *操作ID 终端计算产生 为0表示清除所有等于opermemberid的白板操作
         * </pre>
         *
         * <code>fixed32 operid = 1;</code>
         */
        private void setOperid(int value) {

            operid_ = value;
        }
        /**
         * <pre>
         *操作ID 终端计算产生 为0表示清除所有等于opermemberid的白板操作
         * </pre>
         *
         * <code>fixed32 operid = 1;</code>
         */
        private void clearOperid() {

            operid_ = 0;
        }

        public static final int OPERMEMBERID_FIELD_NUMBER = 2;
        private int opermemberid_;
        /**
         * <pre>
         *当前该命令的人员ID 为0表示清除所有等于opermemberid的白板操作
         * </pre>
         *
         * <code>fixed32 opermemberid = 2;</code>
         */
        public int getOpermemberid() {
            return opermemberid_;
        }
        /**
         * <pre>
         *当前该命令的人员ID 为0表示清除所有等于opermemberid的白板操作
         * </pre>
         *
         * <code>fixed32 opermemberid = 2;</code>
         */
        private void setOpermemberid(int value) {

            opermemberid_ = value;
        }
        /**
         * <pre>
         *当前该命令的人员ID 为0表示清除所有等于opermemberid的白板操作
         * </pre>
         *
         * <code>fixed32 opermemberid = 2;</code>
         */
        private void clearOpermemberid() {

            opermemberid_ = 0;
        }

        public static final int SRCMEMID_FIELD_NUMBER = 3;
        private int srcmemid_;
        /**
         * <pre>
         *发起人的人员ID 白板标识使用
         * </pre>
         *
         * <code>fixed32 srcmemid = 3;</code>
         */
        public int getSrcmemid() {
            return srcmemid_;
        }
        /**
         * <pre>
         *发起人的人员ID 白板标识使用
         * </pre>
         *
         * <code>fixed32 srcmemid = 3;</code>
         */
        private void setSrcmemid(int value) {

            srcmemid_ = value;
        }
        /**
         * <pre>
         *发起人的人员ID 白板标识使用
         * </pre>
         *
         * <code>fixed32 srcmemid = 3;</code>
         */
        private void clearSrcmemid() {

            srcmemid_ = 0;
        }

        public static final int SRCWBID_FIELD_NUMBER = 4;
        private long srcwbid_;
        /**
         * <pre>
         *发起人的白板标识 取微秒级的时间作标识 白板标识使用
         * </pre>
         *
         * <code>fixed64 srcwbid = 4;</code>
         */
        public long getSrcwbid() {
            return srcwbid_;
        }
        /**
         * <pre>
         *发起人的白板标识 取微秒级的时间作标识 白板标识使用
         * </pre>
         *
         * <code>fixed64 srcwbid = 4;</code>
         */
        private void setSrcwbid(long value) {

            srcwbid_ = value;
        }
        /**
         * <pre>
         *发起人的白板标识 取微秒级的时间作标识 白板标识使用
         * </pre>
         *
         * <code>fixed64 srcwbid = 4;</code>
         */
        private void clearSrcwbid() {

            srcwbid_ = 0L;
        }

        public static final int UTCSTAMP_FIELD_NUMBER = 5;
        private long utcstamp_;
        /**
         * <pre>
         *时间戳  微秒
         * </pre>
         *
         * <code>fixed64 utcstamp = 5;</code>
         */
        public long getUtcstamp() {
            return utcstamp_;
        }
        /**
         * <pre>
         *时间戳  微秒
         * </pre>
         *
         * <code>fixed64 utcstamp = 5;</code>
         */
        private void setUtcstamp(long value) {

            utcstamp_ = value;
        }
        /**
         * <pre>
         *时间戳  微秒
         * </pre>
         *
         * <code>fixed64 utcstamp = 5;</code>
         */
        private void clearUtcstamp() {

            utcstamp_ = 0L;
        }

        public static final int FIGURETYPE_FIELD_NUMBER = 6;
        private int figuretype_;
        /**
         * <pre>
         *图形类型 为0表示清除所有等于figuretype的白板操作
         * </pre>
         *
         * <code>fixed32 figuretype = 6;</code>
         */
        public int getFiguretype() {
            return figuretype_;
        }
        /**
         * <pre>
         *图形类型 为0表示清除所有等于figuretype的白板操作
         * </pre>
         *
         * <code>fixed32 figuretype = 6;</code>
         */
        private void setFiguretype(int value) {

            figuretype_ = value;
        }
        /**
         * <pre>
         *图形类型 为0表示清除所有等于figuretype的白板操作
         * </pre>
         *
         * <code>fixed32 figuretype = 6;</code>
         */
        private void clearFiguretype() {

            figuretype_ = 0;
        }

        public static final int FONTSIZE_FIELD_NUMBER = 7;
        private int fontsize_;
        /**
         * <pre>
         *字体大小
         * </pre>
         *
         * <code>fixed32 fontsize = 7;</code>
         */
        public int getFontsize() {
            return fontsize_;
        }
        /**
         * <pre>
         *字体大小
         * </pre>
         *
         * <code>fixed32 fontsize = 7;</code>
         */
        private void setFontsize(int value) {

            fontsize_ = value;
        }
        /**
         * <pre>
         *字体大小
         * </pre>
         *
         * <code>fixed32 fontsize = 7;</code>
         */
        private void clearFontsize() {

            fontsize_ = 0;
        }

        public static final int FONTFLAG_FIELD_NUMBER = 8;
        private int fontflag_;
        /**
         * <pre>
         *字体其它属性
         * </pre>
         *
         * <code>fixed32 fontflag = 8;</code>
         */
        public int getFontflag() {
            return fontflag_;
        }
        /**
         * <pre>
         *字体其它属性
         * </pre>
         *
         * <code>fixed32 fontflag = 8;</code>
         */
        private void setFontflag(int value) {

            fontflag_ = value;
        }
        /**
         * <pre>
         *字体其它属性
         * </pre>
         *
         * <code>fixed32 fontflag = 8;</code>
         */
        private void clearFontflag() {

            fontflag_ = 0;
        }

        public static final int ARGB_FIELD_NUMBER = 9;
        private int argb_;
        /**
         * <pre>
         *字体颜色
         * </pre>
         *
         * <code>fixed32 Argb = 9;</code>
         */
        public int getArgb() {
            return argb_;
        }
        /**
         * <pre>
         *字体颜色
         * </pre>
         *
         * <code>fixed32 Argb = 9;</code>
         */
        private void setArgb(int value) {

            argb_ = value;
        }
        /**
         * <pre>
         *字体颜色
         * </pre>
         *
         * <code>fixed32 Argb = 9;</code>
         */
        private void clearArgb() {

            argb_ = 0;
        }

        public static final int FONTNAME_FIELD_NUMBER = 10;
        private com.google.protobuf.ByteString fontname_;
        /**
         * <pre>
         *字体名称
         * </pre>
         *
         * <code>bytes fontname = 10;</code>
         */
        public com.google.protobuf.ByteString getFontname() {
            return fontname_;
        }
        /**
         * <pre>
         *字体名称
         * </pre>
         *
         * <code>bytes fontname = 10;</code>
         */
        private void setFontname(com.google.protobuf.ByteString value) {
            if (value == null) {
                throw new NullPointerException();
            }

            fontname_ = value;
        }
        /**
         * <pre>
         *字体名称
         * </pre>
         *
         * <code>bytes fontname = 10;</code>
         */
        private void clearFontname() {

            fontname_ = getDefaultInstance().getFontname();
        }

        public static final int LX_FIELD_NUMBER = 11;
        private float lx_;
        /**
         * <pre>
         *(lx,ly,左上角坐标)
         * </pre>
         *
         * <code>float lx = 11;</code>
         */
        public float getLx() {
            return lx_;
        }
        /**
         * <pre>
         *(lx,ly,左上角坐标)
         * </pre>
         *
         * <code>float lx = 11;</code>
         */
        private void setLx(float value) {

            lx_ = value;
        }
        /**
         * <pre>
         *(lx,ly,左上角坐标)
         * </pre>
         *
         * <code>float lx = 11;</code>
         */
        private void clearLx() {

            lx_ = 0F;
        }

        public static final int LY_FIELD_NUMBER = 12;
        private float ly_;
        /**
         * <pre>
         *(lx,ly,左上角坐标)
         * </pre>
         *
         * <code>float ly = 12;</code>
         */
        public float getLy() {
            return ly_;
        }
        /**
         * <pre>
         *(lx,ly,左上角坐标)
         * </pre>
         *
         * <code>float ly = 12;</code>
         */
        private void setLy(float value) {

            ly_ = value;
        }
        /**
         * <pre>
         *(lx,ly,左上角坐标)
         * </pre>
         *
         * <code>float ly = 12;</code>
         */
        private void clearLy() {

            ly_ = 0F;
        }

        public static final int PTEXT_FIELD_NUMBER = 13;
        private com.google.protobuf.ByteString ptext_;
        /**
         * <code>bytes ptext = 13;</code>
         */
        public com.google.protobuf.ByteString getPtext() {
            return ptext_;
        }
        /**
         * <code>bytes ptext = 13;</code>
         */
        private void setPtext(com.google.protobuf.ByteString value) {
            if (value == null) {
                throw new NullPointerException();
            }

            ptext_ = value;
        }
        /**
         * <code>bytes ptext = 13;</code>
         */
        private void clearPtext() {

            ptext_ = getDefaultInstance().getPtext();
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (operid_ != 0) {
                output.writeFixed32(1, operid_);
            }
            if (opermemberid_ != 0) {
                output.writeFixed32(2, opermemberid_);
            }
            if (srcmemid_ != 0) {
                output.writeFixed32(3, srcmemid_);
            }
            if (srcwbid_ != 0L) {
                output.writeFixed64(4, srcwbid_);
            }
            if (utcstamp_ != 0L) {
                output.writeFixed64(5, utcstamp_);
            }
            if (figuretype_ != 0) {
                output.writeFixed32(6, figuretype_);
            }
            if (fontsize_ != 0) {
                output.writeFixed32(7, fontsize_);
            }
            if (fontflag_ != 0) {
                output.writeFixed32(8, fontflag_);
            }
            if (argb_ != 0) {
                output.writeFixed32(9, argb_);
            }
            if (!fontname_.isEmpty()) {
                output.writeBytes(10, fontname_);
            }
            if (lx_ != 0F) {
                output.writeFloat(11, lx_);
            }
            if (ly_ != 0F) {
                output.writeFloat(12, ly_);
            }
            if (!ptext_.isEmpty()) {
                output.writeBytes(13, ptext_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (operid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(1, operid_);
            }
            if (opermemberid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(2, opermemberid_);
            }
            if (srcmemid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(3, srcmemid_);
            }
            if (srcwbid_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed64Size(4, srcwbid_);
            }
            if (utcstamp_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed64Size(5, utcstamp_);
            }
            if (figuretype_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(6, figuretype_);
            }
            if (fontsize_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(7, fontsize_);
            }
            if (fontflag_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(8, fontflag_);
            }
            if (argb_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(9, argb_);
            }
            if (!fontname_.isEmpty()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(10, fontname_);
            }
            if (lx_ != 0F) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFloatSize(11, lx_);
            }
            if (ly_ != 0F) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFloatSize(12, ly_);
            }
            if (!ptext_.isEmpty()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(13, ptext_);
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBTextDetail parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBTextDetail parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBTextDetail parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBTextDetail parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBTextDetail parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBTextDetail parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBTextDetail parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBTextDetail parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBTextDetail parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBTextDetail parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBTextDetail parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBTextDetail parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBTextDetail prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *添加文本
         *type:Pb_TYPE_MEET_INTERFACE_WHITEBOARD
         *callreturn
         *method: add query pagequery
         * </pre>
         *
         * Protobuf type {@code pbui_Item_MeetWBTextDetail}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBTextDetail, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Item_MeetWBTextDetail)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBTextDetailOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBTextDetail.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <pre>
             *操作ID 终端计算产生 为0表示清除所有等于opermemberid的白板操作
             * </pre>
             *
             * <code>fixed32 operid = 1;</code>
             */
            public int getOperid() {
                return instance.getOperid();
            }
            /**
             * <pre>
             *操作ID 终端计算产生 为0表示清除所有等于opermemberid的白板操作
             * </pre>
             *
             * <code>fixed32 operid = 1;</code>
             */
            public Builder setOperid(int value) {
                copyOnWrite();
                instance.setOperid(value);
                return this;
            }
            /**
             * <pre>
             *操作ID 终端计算产生 为0表示清除所有等于opermemberid的白板操作
             * </pre>
             *
             * <code>fixed32 operid = 1;</code>
             */
            public Builder clearOperid() {
                copyOnWrite();
                instance.clearOperid();
                return this;
            }

            /**
             * <pre>
             *当前该命令的人员ID 为0表示清除所有等于opermemberid的白板操作
             * </pre>
             *
             * <code>fixed32 opermemberid = 2;</code>
             */
            public int getOpermemberid() {
                return instance.getOpermemberid();
            }
            /**
             * <pre>
             *当前该命令的人员ID 为0表示清除所有等于opermemberid的白板操作
             * </pre>
             *
             * <code>fixed32 opermemberid = 2;</code>
             */
            public Builder setOpermemberid(int value) {
                copyOnWrite();
                instance.setOpermemberid(value);
                return this;
            }
            /**
             * <pre>
             *当前该命令的人员ID 为0表示清除所有等于opermemberid的白板操作
             * </pre>
             *
             * <code>fixed32 opermemberid = 2;</code>
             */
            public Builder clearOpermemberid() {
                copyOnWrite();
                instance.clearOpermemberid();
                return this;
            }

            /**
             * <pre>
             *发起人的人员ID 白板标识使用
             * </pre>
             *
             * <code>fixed32 srcmemid = 3;</code>
             */
            public int getSrcmemid() {
                return instance.getSrcmemid();
            }
            /**
             * <pre>
             *发起人的人员ID 白板标识使用
             * </pre>
             *
             * <code>fixed32 srcmemid = 3;</code>
             */
            public Builder setSrcmemid(int value) {
                copyOnWrite();
                instance.setSrcmemid(value);
                return this;
            }
            /**
             * <pre>
             *发起人的人员ID 白板标识使用
             * </pre>
             *
             * <code>fixed32 srcmemid = 3;</code>
             */
            public Builder clearSrcmemid() {
                copyOnWrite();
                instance.clearSrcmemid();
                return this;
            }

            /**
             * <pre>
             *发起人的白板标识 取微秒级的时间作标识 白板标识使用
             * </pre>
             *
             * <code>fixed64 srcwbid = 4;</code>
             */
            public long getSrcwbid() {
                return instance.getSrcwbid();
            }
            /**
             * <pre>
             *发起人的白板标识 取微秒级的时间作标识 白板标识使用
             * </pre>
             *
             * <code>fixed64 srcwbid = 4;</code>
             */
            public Builder setSrcwbid(long value) {
                copyOnWrite();
                instance.setSrcwbid(value);
                return this;
            }
            /**
             * <pre>
             *发起人的白板标识 取微秒级的时间作标识 白板标识使用
             * </pre>
             *
             * <code>fixed64 srcwbid = 4;</code>
             */
            public Builder clearSrcwbid() {
                copyOnWrite();
                instance.clearSrcwbid();
                return this;
            }

            /**
             * <pre>
             *时间戳  微秒
             * </pre>
             *
             * <code>fixed64 utcstamp = 5;</code>
             */
            public long getUtcstamp() {
                return instance.getUtcstamp();
            }
            /**
             * <pre>
             *时间戳  微秒
             * </pre>
             *
             * <code>fixed64 utcstamp = 5;</code>
             */
            public Builder setUtcstamp(long value) {
                copyOnWrite();
                instance.setUtcstamp(value);
                return this;
            }
            /**
             * <pre>
             *时间戳  微秒
             * </pre>
             *
             * <code>fixed64 utcstamp = 5;</code>
             */
            public Builder clearUtcstamp() {
                copyOnWrite();
                instance.clearUtcstamp();
                return this;
            }

            /**
             * <pre>
             *图形类型 为0表示清除所有等于figuretype的白板操作
             * </pre>
             *
             * <code>fixed32 figuretype = 6;</code>
             */
            public int getFiguretype() {
                return instance.getFiguretype();
            }
            /**
             * <pre>
             *图形类型 为0表示清除所有等于figuretype的白板操作
             * </pre>
             *
             * <code>fixed32 figuretype = 6;</code>
             */
            public Builder setFiguretype(int value) {
                copyOnWrite();
                instance.setFiguretype(value);
                return this;
            }
            /**
             * <pre>
             *图形类型 为0表示清除所有等于figuretype的白板操作
             * </pre>
             *
             * <code>fixed32 figuretype = 6;</code>
             */
            public Builder clearFiguretype() {
                copyOnWrite();
                instance.clearFiguretype();
                return this;
            }

            /**
             * <pre>
             *字体大小
             * </pre>
             *
             * <code>fixed32 fontsize = 7;</code>
             */
            public int getFontsize() {
                return instance.getFontsize();
            }
            /**
             * <pre>
             *字体大小
             * </pre>
             *
             * <code>fixed32 fontsize = 7;</code>
             */
            public Builder setFontsize(int value) {
                copyOnWrite();
                instance.setFontsize(value);
                return this;
            }
            /**
             * <pre>
             *字体大小
             * </pre>
             *
             * <code>fixed32 fontsize = 7;</code>
             */
            public Builder clearFontsize() {
                copyOnWrite();
                instance.clearFontsize();
                return this;
            }

            /**
             * <pre>
             *字体其它属性
             * </pre>
             *
             * <code>fixed32 fontflag = 8;</code>
             */
            public int getFontflag() {
                return instance.getFontflag();
            }
            /**
             * <pre>
             *字体其它属性
             * </pre>
             *
             * <code>fixed32 fontflag = 8;</code>
             */
            public Builder setFontflag(int value) {
                copyOnWrite();
                instance.setFontflag(value);
                return this;
            }
            /**
             * <pre>
             *字体其它属性
             * </pre>
             *
             * <code>fixed32 fontflag = 8;</code>
             */
            public Builder clearFontflag() {
                copyOnWrite();
                instance.clearFontflag();
                return this;
            }

            /**
             * <pre>
             *字体颜色
             * </pre>
             *
             * <code>fixed32 Argb = 9;</code>
             */
            public int getArgb() {
                return instance.getArgb();
            }
            /**
             * <pre>
             *字体颜色
             * </pre>
             *
             * <code>fixed32 Argb = 9;</code>
             */
            public Builder setArgb(int value) {
                copyOnWrite();
                instance.setArgb(value);
                return this;
            }
            /**
             * <pre>
             *字体颜色
             * </pre>
             *
             * <code>fixed32 Argb = 9;</code>
             */
            public Builder clearArgb() {
                copyOnWrite();
                instance.clearArgb();
                return this;
            }

            /**
             * <pre>
             *字体名称
             * </pre>
             *
             * <code>bytes fontname = 10;</code>
             */
            public com.google.protobuf.ByteString getFontname() {
                return instance.getFontname();
            }
            /**
             * <pre>
             *字体名称
             * </pre>
             *
             * <code>bytes fontname = 10;</code>
             */
            public Builder setFontname(com.google.protobuf.ByteString value) {
                copyOnWrite();
                instance.setFontname(value);
                return this;
            }
            /**
             * <pre>
             *字体名称
             * </pre>
             *
             * <code>bytes fontname = 10;</code>
             */
            public Builder clearFontname() {
                copyOnWrite();
                instance.clearFontname();
                return this;
            }

            /**
             * <pre>
             *(lx,ly,左上角坐标)
             * </pre>
             *
             * <code>float lx = 11;</code>
             */
            public float getLx() {
                return instance.getLx();
            }
            /**
             * <pre>
             *(lx,ly,左上角坐标)
             * </pre>
             *
             * <code>float lx = 11;</code>
             */
            public Builder setLx(float value) {
                copyOnWrite();
                instance.setLx(value);
                return this;
            }
            /**
             * <pre>
             *(lx,ly,左上角坐标)
             * </pre>
             *
             * <code>float lx = 11;</code>
             */
            public Builder clearLx() {
                copyOnWrite();
                instance.clearLx();
                return this;
            }

            /**
             * <pre>
             *(lx,ly,左上角坐标)
             * </pre>
             *
             * <code>float ly = 12;</code>
             */
            public float getLy() {
                return instance.getLy();
            }
            /**
             * <pre>
             *(lx,ly,左上角坐标)
             * </pre>
             *
             * <code>float ly = 12;</code>
             */
            public Builder setLy(float value) {
                copyOnWrite();
                instance.setLy(value);
                return this;
            }
            /**
             * <pre>
             *(lx,ly,左上角坐标)
             * </pre>
             *
             * <code>float ly = 12;</code>
             */
            public Builder clearLy() {
                copyOnWrite();
                instance.clearLy();
                return this;
            }

            /**
             * <code>bytes ptext = 13;</code>
             */
            public com.google.protobuf.ByteString getPtext() {
                return instance.getPtext();
            }
            /**
             * <code>bytes ptext = 13;</code>
             */
            public Builder setPtext(com.google.protobuf.ByteString value) {
                copyOnWrite();
                instance.setPtext(value);
                return this;
            }
            /**
             * <code>bytes ptext = 13;</code>
             */
            public Builder clearPtext() {
                copyOnWrite();
                instance.clearPtext();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Item_MeetWBTextDetail)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBTextDetail();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBTextDetail other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBTextDetail) arg1;
                    operid_ = visitor.visitInt(operid_ != 0, operid_,
                            other.operid_ != 0, other.operid_);
                    opermemberid_ = visitor.visitInt(opermemberid_ != 0, opermemberid_,
                            other.opermemberid_ != 0, other.opermemberid_);
                    srcmemid_ = visitor.visitInt(srcmemid_ != 0, srcmemid_,
                            other.srcmemid_ != 0, other.srcmemid_);
                    srcwbid_ = visitor.visitLong(srcwbid_ != 0L, srcwbid_,
                            other.srcwbid_ != 0L, other.srcwbid_);
                    utcstamp_ = visitor.visitLong(utcstamp_ != 0L, utcstamp_,
                            other.utcstamp_ != 0L, other.utcstamp_);
                    figuretype_ = visitor.visitInt(figuretype_ != 0, figuretype_,
                            other.figuretype_ != 0, other.figuretype_);
                    fontsize_ = visitor.visitInt(fontsize_ != 0, fontsize_,
                            other.fontsize_ != 0, other.fontsize_);
                    fontflag_ = visitor.visitInt(fontflag_ != 0, fontflag_,
                            other.fontflag_ != 0, other.fontflag_);
                    argb_ = visitor.visitInt(argb_ != 0, argb_,
                            other.argb_ != 0, other.argb_);
                    fontname_ = visitor.visitByteString(fontname_ != com.google.protobuf.ByteString.EMPTY, fontname_,
                            other.fontname_ != com.google.protobuf.ByteString.EMPTY, other.fontname_);
                    lx_ = visitor.visitFloat(lx_ != 0F, lx_,
                            other.lx_ != 0F, other.lx_);
                    ly_ = visitor.visitFloat(ly_ != 0F, ly_,
                            other.ly_ != 0F, other.ly_);
                    ptext_ = visitor.visitByteString(ptext_ != com.google.protobuf.ByteString.EMPTY, ptext_,
                            other.ptext_ != com.google.protobuf.ByteString.EMPTY, other.ptext_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 13: {

                                    operid_ = input.readFixed32();
                                    break;
                                }
                                case 21: {

                                    opermemberid_ = input.readFixed32();
                                    break;
                                }
                                case 29: {

                                    srcmemid_ = input.readFixed32();
                                    break;
                                }
                                case 33: {

                                    srcwbid_ = input.readFixed64();
                                    break;
                                }
                                case 41: {

                                    utcstamp_ = input.readFixed64();
                                    break;
                                }
                                case 53: {

                                    figuretype_ = input.readFixed32();
                                    break;
                                }
                                case 61: {

                                    fontsize_ = input.readFixed32();
                                    break;
                                }
                                case 69: {

                                    fontflag_ = input.readFixed32();
                                    break;
                                }
                                case 77: {

                                    argb_ = input.readFixed32();
                                    break;
                                }
                                case 82: {

                                    fontname_ = input.readBytes();
                                    break;
                                }
                                case 93: {

                                    lx_ = input.readFloat();
                                    break;
                                }
                                case 101: {

                                    ly_ = input.readFloat();
                                    break;
                                }
                                case 106: {

                                    ptext_ = input.readBytes();
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBTextDetail.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Item_MeetWBTextDetail)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBTextDetail DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Item_MeetWBTextDetail();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBTextDetail getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Item_MeetWBTextDetail> PARSER;

        public static com.google.protobuf.Parser<pbui_Item_MeetWBTextDetail> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Type_MeetWBTextDetailOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Type_MeetWBTextDetail)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <code>repeated .pbui_Item_MeetWBTextDetail item = 1;</code>
         */
        java.util.List<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBTextDetail>
        getItemList();
        /**
         * <code>repeated .pbui_Item_MeetWBTextDetail item = 1;</code>
         */
        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBTextDetail getItem(int index);
        /**
         * <code>repeated .pbui_Item_MeetWBTextDetail item = 1;</code>
         */
        int getItemCount();
    }
    /**
     * Protobuf type {@code pbui_Type_MeetWBTextDetail}
     */
    public  static final class pbui_Type_MeetWBTextDetail extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Type_MeetWBTextDetail, pbui_Type_MeetWBTextDetail.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Type_MeetWBTextDetail)
            pbui_Type_MeetWBTextDetailOrBuilder {
        private pbui_Type_MeetWBTextDetail() {
            item_ = emptyProtobufList();
        }
        public static final int ITEM_FIELD_NUMBER = 1;
        private com.google.protobuf.Internal.ProtobufList<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBTextDetail> item_;
        /**
         * <code>repeated .pbui_Item_MeetWBTextDetail item = 1;</code>
         */
        public java.util.List<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBTextDetail> getItemList() {
            return item_;
        }
        /**
         * <code>repeated .pbui_Item_MeetWBTextDetail item = 1;</code>
         */
        public java.util.List<? extends com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBTextDetailOrBuilder>
        getItemOrBuilderList() {
            return item_;
        }
        /**
         * <code>repeated .pbui_Item_MeetWBTextDetail item = 1;</code>
         */
        public int getItemCount() {
            return item_.size();
        }
        /**
         * <code>repeated .pbui_Item_MeetWBTextDetail item = 1;</code>
         */
        public com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBTextDetail getItem(int index) {
            return item_.get(index);
        }
        /**
         * <code>repeated .pbui_Item_MeetWBTextDetail item = 1;</code>
         */
        public com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBTextDetailOrBuilder getItemOrBuilder(
                int index) {
            return item_.get(index);
        }
        private void ensureItemIsMutable() {
            if (!item_.isModifiable()) {
                item_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(item_);
            }
        }

        /**
         * <code>repeated .pbui_Item_MeetWBTextDetail item = 1;</code>
         */
        private void setItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBTextDetail value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensureItemIsMutable();
            item_.set(index, value);
        }
        /**
         * <code>repeated .pbui_Item_MeetWBTextDetail item = 1;</code>
         */
        private void setItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBTextDetail.Builder builderForValue) {
            ensureItemIsMutable();
            item_.set(index, builderForValue.build());
        }
        /**
         * <code>repeated .pbui_Item_MeetWBTextDetail item = 1;</code>
         */
        private void addItem(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBTextDetail value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensureItemIsMutable();
            item_.add(value);
        }
        /**
         * <code>repeated .pbui_Item_MeetWBTextDetail item = 1;</code>
         */
        private void addItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBTextDetail value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensureItemIsMutable();
            item_.add(index, value);
        }
        /**
         * <code>repeated .pbui_Item_MeetWBTextDetail item = 1;</code>
         */
        private void addItem(
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBTextDetail.Builder builderForValue) {
            ensureItemIsMutable();
            item_.add(builderForValue.build());
        }
        /**
         * <code>repeated .pbui_Item_MeetWBTextDetail item = 1;</code>
         */
        private void addItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBTextDetail.Builder builderForValue) {
            ensureItemIsMutable();
            item_.add(index, builderForValue.build());
        }
        /**
         * <code>repeated .pbui_Item_MeetWBTextDetail item = 1;</code>
         */
        private void addAllItem(
                java.lang.Iterable<? extends com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBTextDetail> values) {
            ensureItemIsMutable();
            com.google.protobuf.AbstractMessageLite.addAll(
                    values, item_);
        }
        /**
         * <code>repeated .pbui_Item_MeetWBTextDetail item = 1;</code>
         */
        private void clearItem() {
            item_ = emptyProtobufList();
        }
        /**
         * <code>repeated .pbui_Item_MeetWBTextDetail item = 1;</code>
         */
        private void removeItem(int index) {
            ensureItemIsMutable();
            item_.remove(index);
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            for (int i = 0; i < item_.size(); i++) {
                output.writeMessage(1, item_.get(i));
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            for (int i = 0; i < item_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, item_.get(i));
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBTextDetail parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBTextDetail parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBTextDetail parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBTextDetail parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBTextDetail parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBTextDetail parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBTextDetail parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBTextDetail parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBTextDetail parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBTextDetail parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBTextDetail parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBTextDetail parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBTextDetail prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * Protobuf type {@code pbui_Type_MeetWBTextDetail}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBTextDetail, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Type_MeetWBTextDetail)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBTextDetailOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBTextDetail.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <code>repeated .pbui_Item_MeetWBTextDetail item = 1;</code>
             */
            public java.util.List<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBTextDetail> getItemList() {
                return java.util.Collections.unmodifiableList(
                        instance.getItemList());
            }
            /**
             * <code>repeated .pbui_Item_MeetWBTextDetail item = 1;</code>
             */
            public int getItemCount() {
                return instance.getItemCount();
            }/**
             * <code>repeated .pbui_Item_MeetWBTextDetail item = 1;</code>
             */
            public com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBTextDetail getItem(int index) {
                return instance.getItem(index);
            }
            /**
             * <code>repeated .pbui_Item_MeetWBTextDetail item = 1;</code>
             */
            public Builder setItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBTextDetail value) {
                copyOnWrite();
                instance.setItem(index, value);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetWBTextDetail item = 1;</code>
             */
            public Builder setItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBTextDetail.Builder builderForValue) {
                copyOnWrite();
                instance.setItem(index, builderForValue);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetWBTextDetail item = 1;</code>
             */
            public Builder addItem(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBTextDetail value) {
                copyOnWrite();
                instance.addItem(value);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetWBTextDetail item = 1;</code>
             */
            public Builder addItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBTextDetail value) {
                copyOnWrite();
                instance.addItem(index, value);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetWBTextDetail item = 1;</code>
             */
            public Builder addItem(
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBTextDetail.Builder builderForValue) {
                copyOnWrite();
                instance.addItem(builderForValue);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetWBTextDetail item = 1;</code>
             */
            public Builder addItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBTextDetail.Builder builderForValue) {
                copyOnWrite();
                instance.addItem(index, builderForValue);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetWBTextDetail item = 1;</code>
             */
            public Builder addAllItem(
                    java.lang.Iterable<? extends com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBTextDetail> values) {
                copyOnWrite();
                instance.addAllItem(values);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetWBTextDetail item = 1;</code>
             */
            public Builder clearItem() {
                copyOnWrite();
                instance.clearItem();
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetWBTextDetail item = 1;</code>
             */
            public Builder removeItem(int index) {
                copyOnWrite();
                instance.removeItem(index);
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Type_MeetWBTextDetail)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBTextDetail();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    item_.makeImmutable();
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBTextDetail other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBTextDetail) arg1;
                    item_= visitor.visitList(item_, other.item_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 10: {
                                    if (!item_.isModifiable()) {
                                        item_ =
                                                com.google.protobuf.GeneratedMessageLite.mutableCopy(item_);
                                    }
                                    item_.add(
                                            input.readMessage(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBTextDetail.parser(), extensionRegistry));
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBTextDetail.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Type_MeetWBTextDetail)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBTextDetail DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Type_MeetWBTextDetail();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBTextDetail getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Type_MeetWBTextDetail> PARSER;

        public static com.google.protobuf.Parser<pbui_Type_MeetWBTextDetail> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Item_MeetWBPictureDetailOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Item_MeetWBPictureDetail)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <pre>
         *操作ID 终端计算产生 为0表示清除所有等于opermemberid的白板操作
         * </pre>
         *
         * <code>fixed32 operid = 1;</code>
         */
        int getOperid();

        /**
         * <pre>
         *当前该命令的人员ID 为0表示清除所有等于opermemberid的白板操作
         * </pre>
         *
         * <code>fixed32 opermemberid = 2;</code>
         */
        int getOpermemberid();

        /**
         * <pre>
         *发起人的人员ID 白板标识使用
         * </pre>
         *
         * <code>fixed32 srcmemid = 3;</code>
         */
        int getSrcmemid();

        /**
         * <pre>
         *发起人的白板标识 取微秒级的时间作标识 白板标识使用
         * </pre>
         *
         * <code>fixed64 srcwbid = 4;</code>
         */
        long getSrcwbid();

        /**
         * <pre>
         *时间戳  微秒
         * </pre>
         *
         * <code>fixed64 utcstamp = 5;</code>
         */
        long getUtcstamp();

        /**
         * <pre>
         *图形类型 为0表示清除所有等于figuretype的白板操作
         * </pre>
         *
         * <code>fixed32 figuretype = 6;</code>
         */
        int getFiguretype();

        /**
         * <pre>
         *(lx,ly,左上角坐标)
         * </pre>
         *
         * <code>float lx = 7;</code>
         */
        float getLx();

        /**
         * <pre>
         *(lx,ly,左上角坐标)
         * </pre>
         *
         * <code>float ly = 8;</code>
         */
        float getLy();

        /**
         * <pre>
         *png图片数据(二进制转hex编码)
         * </pre>
         *
         * <code>bytes picdata = 9;</code>
         */
        com.google.protobuf.ByteString getPicdata();
    }
    /**
     * <pre>
     *添加图片
     *type:Pb_TYPE_MEET_INTERFACE_WHITEBOARD
     *call return
     *method: add query pagequery
     * </pre>
     *
     * Protobuf type {@code pbui_Item_MeetWBPictureDetail}
     */
    public  static final class pbui_Item_MeetWBPictureDetail extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Item_MeetWBPictureDetail, pbui_Item_MeetWBPictureDetail.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Item_MeetWBPictureDetail)
            pbui_Item_MeetWBPictureDetailOrBuilder {
        private pbui_Item_MeetWBPictureDetail() {
            picdata_ = com.google.protobuf.ByteString.EMPTY;
        }
        public static final int OPERID_FIELD_NUMBER = 1;
        private int operid_;
        /**
         * <pre>
         *操作ID 终端计算产生 为0表示清除所有等于opermemberid的白板操作
         * </pre>
         *
         * <code>fixed32 operid = 1;</code>
         */
        public int getOperid() {
            return operid_;
        }
        /**
         * <pre>
         *操作ID 终端计算产生 为0表示清除所有等于opermemberid的白板操作
         * </pre>
         *
         * <code>fixed32 operid = 1;</code>
         */
        private void setOperid(int value) {

            operid_ = value;
        }
        /**
         * <pre>
         *操作ID 终端计算产生 为0表示清除所有等于opermemberid的白板操作
         * </pre>
         *
         * <code>fixed32 operid = 1;</code>
         */
        private void clearOperid() {

            operid_ = 0;
        }

        public static final int OPERMEMBERID_FIELD_NUMBER = 2;
        private int opermemberid_;
        /**
         * <pre>
         *当前该命令的人员ID 为0表示清除所有等于opermemberid的白板操作
         * </pre>
         *
         * <code>fixed32 opermemberid = 2;</code>
         */
        public int getOpermemberid() {
            return opermemberid_;
        }
        /**
         * <pre>
         *当前该命令的人员ID 为0表示清除所有等于opermemberid的白板操作
         * </pre>
         *
         * <code>fixed32 opermemberid = 2;</code>
         */
        private void setOpermemberid(int value) {

            opermemberid_ = value;
        }
        /**
         * <pre>
         *当前该命令的人员ID 为0表示清除所有等于opermemberid的白板操作
         * </pre>
         *
         * <code>fixed32 opermemberid = 2;</code>
         */
        private void clearOpermemberid() {

            opermemberid_ = 0;
        }

        public static final int SRCMEMID_FIELD_NUMBER = 3;
        private int srcmemid_;
        /**
         * <pre>
         *发起人的人员ID 白板标识使用
         * </pre>
         *
         * <code>fixed32 srcmemid = 3;</code>
         */
        public int getSrcmemid() {
            return srcmemid_;
        }
        /**
         * <pre>
         *发起人的人员ID 白板标识使用
         * </pre>
         *
         * <code>fixed32 srcmemid = 3;</code>
         */
        private void setSrcmemid(int value) {

            srcmemid_ = value;
        }
        /**
         * <pre>
         *发起人的人员ID 白板标识使用
         * </pre>
         *
         * <code>fixed32 srcmemid = 3;</code>
         */
        private void clearSrcmemid() {

            srcmemid_ = 0;
        }

        public static final int SRCWBID_FIELD_NUMBER = 4;
        private long srcwbid_;
        /**
         * <pre>
         *发起人的白板标识 取微秒级的时间作标识 白板标识使用
         * </pre>
         *
         * <code>fixed64 srcwbid = 4;</code>
         */
        public long getSrcwbid() {
            return srcwbid_;
        }
        /**
         * <pre>
         *发起人的白板标识 取微秒级的时间作标识 白板标识使用
         * </pre>
         *
         * <code>fixed64 srcwbid = 4;</code>
         */
        private void setSrcwbid(long value) {

            srcwbid_ = value;
        }
        /**
         * <pre>
         *发起人的白板标识 取微秒级的时间作标识 白板标识使用
         * </pre>
         *
         * <code>fixed64 srcwbid = 4;</code>
         */
        private void clearSrcwbid() {

            srcwbid_ = 0L;
        }

        public static final int UTCSTAMP_FIELD_NUMBER = 5;
        private long utcstamp_;
        /**
         * <pre>
         *时间戳  微秒
         * </pre>
         *
         * <code>fixed64 utcstamp = 5;</code>
         */
        public long getUtcstamp() {
            return utcstamp_;
        }
        /**
         * <pre>
         *时间戳  微秒
         * </pre>
         *
         * <code>fixed64 utcstamp = 5;</code>
         */
        private void setUtcstamp(long value) {

            utcstamp_ = value;
        }
        /**
         * <pre>
         *时间戳  微秒
         * </pre>
         *
         * <code>fixed64 utcstamp = 5;</code>
         */
        private void clearUtcstamp() {

            utcstamp_ = 0L;
        }

        public static final int FIGURETYPE_FIELD_NUMBER = 6;
        private int figuretype_;
        /**
         * <pre>
         *图形类型 为0表示清除所有等于figuretype的白板操作
         * </pre>
         *
         * <code>fixed32 figuretype = 6;</code>
         */
        public int getFiguretype() {
            return figuretype_;
        }
        /**
         * <pre>
         *图形类型 为0表示清除所有等于figuretype的白板操作
         * </pre>
         *
         * <code>fixed32 figuretype = 6;</code>
         */
        private void setFiguretype(int value) {

            figuretype_ = value;
        }
        /**
         * <pre>
         *图形类型 为0表示清除所有等于figuretype的白板操作
         * </pre>
         *
         * <code>fixed32 figuretype = 6;</code>
         */
        private void clearFiguretype() {

            figuretype_ = 0;
        }

        public static final int LX_FIELD_NUMBER = 7;
        private float lx_;
        /**
         * <pre>
         *(lx,ly,左上角坐标)
         * </pre>
         *
         * <code>float lx = 7;</code>
         */
        public float getLx() {
            return lx_;
        }
        /**
         * <pre>
         *(lx,ly,左上角坐标)
         * </pre>
         *
         * <code>float lx = 7;</code>
         */
        private void setLx(float value) {

            lx_ = value;
        }
        /**
         * <pre>
         *(lx,ly,左上角坐标)
         * </pre>
         *
         * <code>float lx = 7;</code>
         */
        private void clearLx() {

            lx_ = 0F;
        }

        public static final int LY_FIELD_NUMBER = 8;
        private float ly_;
        /**
         * <pre>
         *(lx,ly,左上角坐标)
         * </pre>
         *
         * <code>float ly = 8;</code>
         */
        public float getLy() {
            return ly_;
        }
        /**
         * <pre>
         *(lx,ly,左上角坐标)
         * </pre>
         *
         * <code>float ly = 8;</code>
         */
        private void setLy(float value) {

            ly_ = value;
        }
        /**
         * <pre>
         *(lx,ly,左上角坐标)
         * </pre>
         *
         * <code>float ly = 8;</code>
         */
        private void clearLy() {

            ly_ = 0F;
        }

        public static final int PICDATA_FIELD_NUMBER = 9;
        private com.google.protobuf.ByteString picdata_;
        /**
         * <pre>
         *png图片数据(二进制转hex编码)
         * </pre>
         *
         * <code>bytes picdata = 9;</code>
         */
        public com.google.protobuf.ByteString getPicdata() {
            return picdata_;
        }
        /**
         * <pre>
         *png图片数据(二进制转hex编码)
         * </pre>
         *
         * <code>bytes picdata = 9;</code>
         */
        private void setPicdata(com.google.protobuf.ByteString value) {
            if (value == null) {
                throw new NullPointerException();
            }

            picdata_ = value;
        }
        /**
         * <pre>
         *png图片数据(二进制转hex编码)
         * </pre>
         *
         * <code>bytes picdata = 9;</code>
         */
        private void clearPicdata() {

            picdata_ = getDefaultInstance().getPicdata();
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (operid_ != 0) {
                output.writeFixed32(1, operid_);
            }
            if (opermemberid_ != 0) {
                output.writeFixed32(2, opermemberid_);
            }
            if (srcmemid_ != 0) {
                output.writeFixed32(3, srcmemid_);
            }
            if (srcwbid_ != 0L) {
                output.writeFixed64(4, srcwbid_);
            }
            if (utcstamp_ != 0L) {
                output.writeFixed64(5, utcstamp_);
            }
            if (figuretype_ != 0) {
                output.writeFixed32(6, figuretype_);
            }
            if (lx_ != 0F) {
                output.writeFloat(7, lx_);
            }
            if (ly_ != 0F) {
                output.writeFloat(8, ly_);
            }
            if (!picdata_.isEmpty()) {
                output.writeBytes(9, picdata_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (operid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(1, operid_);
            }
            if (opermemberid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(2, opermemberid_);
            }
            if (srcmemid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(3, srcmemid_);
            }
            if (srcwbid_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed64Size(4, srcwbid_);
            }
            if (utcstamp_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed64Size(5, utcstamp_);
            }
            if (figuretype_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(6, figuretype_);
            }
            if (lx_ != 0F) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFloatSize(7, lx_);
            }
            if (ly_ != 0F) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFloatSize(8, ly_);
            }
            if (!picdata_.isEmpty()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(9, picdata_);
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBPictureDetail parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBPictureDetail parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBPictureDetail parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBPictureDetail parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBPictureDetail parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBPictureDetail parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBPictureDetail parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBPictureDetail parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBPictureDetail parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBPictureDetail parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBPictureDetail parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBPictureDetail parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBPictureDetail prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *添加图片
         *type:Pb_TYPE_MEET_INTERFACE_WHITEBOARD
         *call return
         *method: add query pagequery
         * </pre>
         *
         * Protobuf type {@code pbui_Item_MeetWBPictureDetail}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBPictureDetail, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Item_MeetWBPictureDetail)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBPictureDetailOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBPictureDetail.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <pre>
             *操作ID 终端计算产生 为0表示清除所有等于opermemberid的白板操作
             * </pre>
             *
             * <code>fixed32 operid = 1;</code>
             */
            public int getOperid() {
                return instance.getOperid();
            }
            /**
             * <pre>
             *操作ID 终端计算产生 为0表示清除所有等于opermemberid的白板操作
             * </pre>
             *
             * <code>fixed32 operid = 1;</code>
             */
            public Builder setOperid(int value) {
                copyOnWrite();
                instance.setOperid(value);
                return this;
            }
            /**
             * <pre>
             *操作ID 终端计算产生 为0表示清除所有等于opermemberid的白板操作
             * </pre>
             *
             * <code>fixed32 operid = 1;</code>
             */
            public Builder clearOperid() {
                copyOnWrite();
                instance.clearOperid();
                return this;
            }

            /**
             * <pre>
             *当前该命令的人员ID 为0表示清除所有等于opermemberid的白板操作
             * </pre>
             *
             * <code>fixed32 opermemberid = 2;</code>
             */
            public int getOpermemberid() {
                return instance.getOpermemberid();
            }
            /**
             * <pre>
             *当前该命令的人员ID 为0表示清除所有等于opermemberid的白板操作
             * </pre>
             *
             * <code>fixed32 opermemberid = 2;</code>
             */
            public Builder setOpermemberid(int value) {
                copyOnWrite();
                instance.setOpermemberid(value);
                return this;
            }
            /**
             * <pre>
             *当前该命令的人员ID 为0表示清除所有等于opermemberid的白板操作
             * </pre>
             *
             * <code>fixed32 opermemberid = 2;</code>
             */
            public Builder clearOpermemberid() {
                copyOnWrite();
                instance.clearOpermemberid();
                return this;
            }

            /**
             * <pre>
             *发起人的人员ID 白板标识使用
             * </pre>
             *
             * <code>fixed32 srcmemid = 3;</code>
             */
            public int getSrcmemid() {
                return instance.getSrcmemid();
            }
            /**
             * <pre>
             *发起人的人员ID 白板标识使用
             * </pre>
             *
             * <code>fixed32 srcmemid = 3;</code>
             */
            public Builder setSrcmemid(int value) {
                copyOnWrite();
                instance.setSrcmemid(value);
                return this;
            }
            /**
             * <pre>
             *发起人的人员ID 白板标识使用
             * </pre>
             *
             * <code>fixed32 srcmemid = 3;</code>
             */
            public Builder clearSrcmemid() {
                copyOnWrite();
                instance.clearSrcmemid();
                return this;
            }

            /**
             * <pre>
             *发起人的白板标识 取微秒级的时间作标识 白板标识使用
             * </pre>
             *
             * <code>fixed64 srcwbid = 4;</code>
             */
            public long getSrcwbid() {
                return instance.getSrcwbid();
            }
            /**
             * <pre>
             *发起人的白板标识 取微秒级的时间作标识 白板标识使用
             * </pre>
             *
             * <code>fixed64 srcwbid = 4;</code>
             */
            public Builder setSrcwbid(long value) {
                copyOnWrite();
                instance.setSrcwbid(value);
                return this;
            }
            /**
             * <pre>
             *发起人的白板标识 取微秒级的时间作标识 白板标识使用
             * </pre>
             *
             * <code>fixed64 srcwbid = 4;</code>
             */
            public Builder clearSrcwbid() {
                copyOnWrite();
                instance.clearSrcwbid();
                return this;
            }

            /**
             * <pre>
             *时间戳  微秒
             * </pre>
             *
             * <code>fixed64 utcstamp = 5;</code>
             */
            public long getUtcstamp() {
                return instance.getUtcstamp();
            }
            /**
             * <pre>
             *时间戳  微秒
             * </pre>
             *
             * <code>fixed64 utcstamp = 5;</code>
             */
            public Builder setUtcstamp(long value) {
                copyOnWrite();
                instance.setUtcstamp(value);
                return this;
            }
            /**
             * <pre>
             *时间戳  微秒
             * </pre>
             *
             * <code>fixed64 utcstamp = 5;</code>
             */
            public Builder clearUtcstamp() {
                copyOnWrite();
                instance.clearUtcstamp();
                return this;
            }

            /**
             * <pre>
             *图形类型 为0表示清除所有等于figuretype的白板操作
             * </pre>
             *
             * <code>fixed32 figuretype = 6;</code>
             */
            public int getFiguretype() {
                return instance.getFiguretype();
            }
            /**
             * <pre>
             *图形类型 为0表示清除所有等于figuretype的白板操作
             * </pre>
             *
             * <code>fixed32 figuretype = 6;</code>
             */
            public Builder setFiguretype(int value) {
                copyOnWrite();
                instance.setFiguretype(value);
                return this;
            }
            /**
             * <pre>
             *图形类型 为0表示清除所有等于figuretype的白板操作
             * </pre>
             *
             * <code>fixed32 figuretype = 6;</code>
             */
            public Builder clearFiguretype() {
                copyOnWrite();
                instance.clearFiguretype();
                return this;
            }

            /**
             * <pre>
             *(lx,ly,左上角坐标)
             * </pre>
             *
             * <code>float lx = 7;</code>
             */
            public float getLx() {
                return instance.getLx();
            }
            /**
             * <pre>
             *(lx,ly,左上角坐标)
             * </pre>
             *
             * <code>float lx = 7;</code>
             */
            public Builder setLx(float value) {
                copyOnWrite();
                instance.setLx(value);
                return this;
            }
            /**
             * <pre>
             *(lx,ly,左上角坐标)
             * </pre>
             *
             * <code>float lx = 7;</code>
             */
            public Builder clearLx() {
                copyOnWrite();
                instance.clearLx();
                return this;
            }

            /**
             * <pre>
             *(lx,ly,左上角坐标)
             * </pre>
             *
             * <code>float ly = 8;</code>
             */
            public float getLy() {
                return instance.getLy();
            }
            /**
             * <pre>
             *(lx,ly,左上角坐标)
             * </pre>
             *
             * <code>float ly = 8;</code>
             */
            public Builder setLy(float value) {
                copyOnWrite();
                instance.setLy(value);
                return this;
            }
            /**
             * <pre>
             *(lx,ly,左上角坐标)
             * </pre>
             *
             * <code>float ly = 8;</code>
             */
            public Builder clearLy() {
                copyOnWrite();
                instance.clearLy();
                return this;
            }

            /**
             * <pre>
             *png图片数据(二进制转hex编码)
             * </pre>
             *
             * <code>bytes picdata = 9;</code>
             */
            public com.google.protobuf.ByteString getPicdata() {
                return instance.getPicdata();
            }
            /**
             * <pre>
             *png图片数据(二进制转hex编码)
             * </pre>
             *
             * <code>bytes picdata = 9;</code>
             */
            public Builder setPicdata(com.google.protobuf.ByteString value) {
                copyOnWrite();
                instance.setPicdata(value);
                return this;
            }
            /**
             * <pre>
             *png图片数据(二进制转hex编码)
             * </pre>
             *
             * <code>bytes picdata = 9;</code>
             */
            public Builder clearPicdata() {
                copyOnWrite();
                instance.clearPicdata();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Item_MeetWBPictureDetail)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBPictureDetail();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBPictureDetail other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBPictureDetail) arg1;
                    operid_ = visitor.visitInt(operid_ != 0, operid_,
                            other.operid_ != 0, other.operid_);
                    opermemberid_ = visitor.visitInt(opermemberid_ != 0, opermemberid_,
                            other.opermemberid_ != 0, other.opermemberid_);
                    srcmemid_ = visitor.visitInt(srcmemid_ != 0, srcmemid_,
                            other.srcmemid_ != 0, other.srcmemid_);
                    srcwbid_ = visitor.visitLong(srcwbid_ != 0L, srcwbid_,
                            other.srcwbid_ != 0L, other.srcwbid_);
                    utcstamp_ = visitor.visitLong(utcstamp_ != 0L, utcstamp_,
                            other.utcstamp_ != 0L, other.utcstamp_);
                    figuretype_ = visitor.visitInt(figuretype_ != 0, figuretype_,
                            other.figuretype_ != 0, other.figuretype_);
                    lx_ = visitor.visitFloat(lx_ != 0F, lx_,
                            other.lx_ != 0F, other.lx_);
                    ly_ = visitor.visitFloat(ly_ != 0F, ly_,
                            other.ly_ != 0F, other.ly_);
                    picdata_ = visitor.visitByteString(picdata_ != com.google.protobuf.ByteString.EMPTY, picdata_,
                            other.picdata_ != com.google.protobuf.ByteString.EMPTY, other.picdata_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 13: {

                                    operid_ = input.readFixed32();
                                    break;
                                }
                                case 21: {

                                    opermemberid_ = input.readFixed32();
                                    break;
                                }
                                case 29: {

                                    srcmemid_ = input.readFixed32();
                                    break;
                                }
                                case 33: {

                                    srcwbid_ = input.readFixed64();
                                    break;
                                }
                                case 41: {

                                    utcstamp_ = input.readFixed64();
                                    break;
                                }
                                case 53: {

                                    figuretype_ = input.readFixed32();
                                    break;
                                }
                                case 61: {

                                    lx_ = input.readFloat();
                                    break;
                                }
                                case 69: {

                                    ly_ = input.readFloat();
                                    break;
                                }
                                case 74: {

                                    picdata_ = input.readBytes();
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBPictureDetail.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Item_MeetWBPictureDetail)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBPictureDetail DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Item_MeetWBPictureDetail();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBPictureDetail getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Item_MeetWBPictureDetail> PARSER;

        public static com.google.protobuf.Parser<pbui_Item_MeetWBPictureDetail> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Type_MeetWBPictureDetailOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Type_MeetWBPictureDetail)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <code>repeated .pbui_Item_MeetWBPictureDetail item = 1;</code>
         */
        java.util.List<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBPictureDetail>
        getItemList();
        /**
         * <code>repeated .pbui_Item_MeetWBPictureDetail item = 1;</code>
         */
        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBPictureDetail getItem(int index);
        /**
         * <code>repeated .pbui_Item_MeetWBPictureDetail item = 1;</code>
         */
        int getItemCount();
    }
    /**
     * Protobuf type {@code pbui_Type_MeetWBPictureDetail}
     */
    public  static final class pbui_Type_MeetWBPictureDetail extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Type_MeetWBPictureDetail, pbui_Type_MeetWBPictureDetail.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Type_MeetWBPictureDetail)
            pbui_Type_MeetWBPictureDetailOrBuilder {
        private pbui_Type_MeetWBPictureDetail() {
            item_ = emptyProtobufList();
        }
        public static final int ITEM_FIELD_NUMBER = 1;
        private com.google.protobuf.Internal.ProtobufList<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBPictureDetail> item_;
        /**
         * <code>repeated .pbui_Item_MeetWBPictureDetail item = 1;</code>
         */
        public java.util.List<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBPictureDetail> getItemList() {
            return item_;
        }
        /**
         * <code>repeated .pbui_Item_MeetWBPictureDetail item = 1;</code>
         */
        public java.util.List<? extends com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBPictureDetailOrBuilder>
        getItemOrBuilderList() {
            return item_;
        }
        /**
         * <code>repeated .pbui_Item_MeetWBPictureDetail item = 1;</code>
         */
        public int getItemCount() {
            return item_.size();
        }
        /**
         * <code>repeated .pbui_Item_MeetWBPictureDetail item = 1;</code>
         */
        public com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBPictureDetail getItem(int index) {
            return item_.get(index);
        }
        /**
         * <code>repeated .pbui_Item_MeetWBPictureDetail item = 1;</code>
         */
        public com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBPictureDetailOrBuilder getItemOrBuilder(
                int index) {
            return item_.get(index);
        }
        private void ensureItemIsMutable() {
            if (!item_.isModifiable()) {
                item_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(item_);
            }
        }

        /**
         * <code>repeated .pbui_Item_MeetWBPictureDetail item = 1;</code>
         */
        private void setItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBPictureDetail value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensureItemIsMutable();
            item_.set(index, value);
        }
        /**
         * <code>repeated .pbui_Item_MeetWBPictureDetail item = 1;</code>
         */
        private void setItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBPictureDetail.Builder builderForValue) {
            ensureItemIsMutable();
            item_.set(index, builderForValue.build());
        }
        /**
         * <code>repeated .pbui_Item_MeetWBPictureDetail item = 1;</code>
         */
        private void addItem(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBPictureDetail value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensureItemIsMutable();
            item_.add(value);
        }
        /**
         * <code>repeated .pbui_Item_MeetWBPictureDetail item = 1;</code>
         */
        private void addItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBPictureDetail value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensureItemIsMutable();
            item_.add(index, value);
        }
        /**
         * <code>repeated .pbui_Item_MeetWBPictureDetail item = 1;</code>
         */
        private void addItem(
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBPictureDetail.Builder builderForValue) {
            ensureItemIsMutable();
            item_.add(builderForValue.build());
        }
        /**
         * <code>repeated .pbui_Item_MeetWBPictureDetail item = 1;</code>
         */
        private void addItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBPictureDetail.Builder builderForValue) {
            ensureItemIsMutable();
            item_.add(index, builderForValue.build());
        }
        /**
         * <code>repeated .pbui_Item_MeetWBPictureDetail item = 1;</code>
         */
        private void addAllItem(
                java.lang.Iterable<? extends com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBPictureDetail> values) {
            ensureItemIsMutable();
            com.google.protobuf.AbstractMessageLite.addAll(
                    values, item_);
        }
        /**
         * <code>repeated .pbui_Item_MeetWBPictureDetail item = 1;</code>
         */
        private void clearItem() {
            item_ = emptyProtobufList();
        }
        /**
         * <code>repeated .pbui_Item_MeetWBPictureDetail item = 1;</code>
         */
        private void removeItem(int index) {
            ensureItemIsMutable();
            item_.remove(index);
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            for (int i = 0; i < item_.size(); i++) {
                output.writeMessage(1, item_.get(i));
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            for (int i = 0; i < item_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, item_.get(i));
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBPictureDetail parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBPictureDetail parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBPictureDetail parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBPictureDetail parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBPictureDetail parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBPictureDetail parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBPictureDetail parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBPictureDetail parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBPictureDetail parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBPictureDetail parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBPictureDetail parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBPictureDetail parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBPictureDetail prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * Protobuf type {@code pbui_Type_MeetWBPictureDetail}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBPictureDetail, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Type_MeetWBPictureDetail)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBPictureDetailOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBPictureDetail.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <code>repeated .pbui_Item_MeetWBPictureDetail item = 1;</code>
             */
            public java.util.List<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBPictureDetail> getItemList() {
                return java.util.Collections.unmodifiableList(
                        instance.getItemList());
            }
            /**
             * <code>repeated .pbui_Item_MeetWBPictureDetail item = 1;</code>
             */
            public int getItemCount() {
                return instance.getItemCount();
            }/**
             * <code>repeated .pbui_Item_MeetWBPictureDetail item = 1;</code>
             */
            public com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBPictureDetail getItem(int index) {
                return instance.getItem(index);
            }
            /**
             * <code>repeated .pbui_Item_MeetWBPictureDetail item = 1;</code>
             */
            public Builder setItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBPictureDetail value) {
                copyOnWrite();
                instance.setItem(index, value);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetWBPictureDetail item = 1;</code>
             */
            public Builder setItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBPictureDetail.Builder builderForValue) {
                copyOnWrite();
                instance.setItem(index, builderForValue);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetWBPictureDetail item = 1;</code>
             */
            public Builder addItem(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBPictureDetail value) {
                copyOnWrite();
                instance.addItem(value);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetWBPictureDetail item = 1;</code>
             */
            public Builder addItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBPictureDetail value) {
                copyOnWrite();
                instance.addItem(index, value);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetWBPictureDetail item = 1;</code>
             */
            public Builder addItem(
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBPictureDetail.Builder builderForValue) {
                copyOnWrite();
                instance.addItem(builderForValue);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetWBPictureDetail item = 1;</code>
             */
            public Builder addItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBPictureDetail.Builder builderForValue) {
                copyOnWrite();
                instance.addItem(index, builderForValue);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetWBPictureDetail item = 1;</code>
             */
            public Builder addAllItem(
                    java.lang.Iterable<? extends com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBPictureDetail> values) {
                copyOnWrite();
                instance.addAllItem(values);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetWBPictureDetail item = 1;</code>
             */
            public Builder clearItem() {
                copyOnWrite();
                instance.clearItem();
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetWBPictureDetail item = 1;</code>
             */
            public Builder removeItem(int index) {
                copyOnWrite();
                instance.removeItem(index);
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Type_MeetWBPictureDetail)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBPictureDetail();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    item_.makeImmutable();
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBPictureDetail other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBPictureDetail) arg1;
                    item_= visitor.visitList(item_, other.item_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 10: {
                                    if (!item_.isModifiable()) {
                                        item_ =
                                                com.google.protobuf.GeneratedMessageLite.mutableCopy(item_);
                                    }
                                    item_.add(
                                            input.readMessage(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetWBPictureDetail.parser(), extensionRegistry));
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBPictureDetail.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Type_MeetWBPictureDetail)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBPictureDetail DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Type_MeetWBPictureDetail();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetWBPictureDetail getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Type_MeetWBPictureDetail> PARSER;

        public static com.google.protobuf.Parser<pbui_Type_MeetWBPictureDetail> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Item_MeetFunConfigDetailInfoOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Item_MeetFunConfigDetailInfo)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <pre>
         *功能标识码 参见Pb_Meet_FunctionCode
         * </pre>
         *
         * <code>fixed32 funcode = 1;</code>
         */
        int getFuncode();

        /**
         * <pre>
         *位置标识码
         * </pre>
         *
         * <code>fixed32 position = 2;</code>
         */
        int getPosition();
    }
    /**
     * <pre>
     *会议功能
     * </pre>
     *
     * Protobuf type {@code pbui_Item_MeetFunConfigDetailInfo}
     */
    public  static final class pbui_Item_MeetFunConfigDetailInfo extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Item_MeetFunConfigDetailInfo, pbui_Item_MeetFunConfigDetailInfo.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Item_MeetFunConfigDetailInfo)
            pbui_Item_MeetFunConfigDetailInfoOrBuilder {
        private pbui_Item_MeetFunConfigDetailInfo() {
        }
        public static final int FUNCODE_FIELD_NUMBER = 1;
        private int funcode_;
        /**
         * <pre>
         *功能标识码 参见Pb_Meet_FunctionCode
         * </pre>
         *
         * <code>fixed32 funcode = 1;</code>
         */
        public int getFuncode() {
            return funcode_;
        }
        /**
         * <pre>
         *功能标识码 参见Pb_Meet_FunctionCode
         * </pre>
         *
         * <code>fixed32 funcode = 1;</code>
         */
        private void setFuncode(int value) {

            funcode_ = value;
        }
        /**
         * <pre>
         *功能标识码 参见Pb_Meet_FunctionCode
         * </pre>
         *
         * <code>fixed32 funcode = 1;</code>
         */
        private void clearFuncode() {

            funcode_ = 0;
        }

        public static final int POSITION_FIELD_NUMBER = 2;
        private int position_;
        /**
         * <pre>
         *位置标识码
         * </pre>
         *
         * <code>fixed32 position = 2;</code>
         */
        public int getPosition() {
            return position_;
        }
        /**
         * <pre>
         *位置标识码
         * </pre>
         *
         * <code>fixed32 position = 2;</code>
         */
        private void setPosition(int value) {

            position_ = value;
        }
        /**
         * <pre>
         *位置标识码
         * </pre>
         *
         * <code>fixed32 position = 2;</code>
         */
        private void clearPosition() {

            position_ = 0;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (funcode_ != 0) {
                output.writeFixed32(1, funcode_);
            }
            if (position_ != 0) {
                output.writeFixed32(2, position_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (funcode_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(1, funcode_);
            }
            if (position_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(2, position_);
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetFunConfigDetailInfo parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetFunConfigDetailInfo parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetFunConfigDetailInfo parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetFunConfigDetailInfo parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetFunConfigDetailInfo parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetFunConfigDetailInfo parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetFunConfigDetailInfo parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetFunConfigDetailInfo parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetFunConfigDetailInfo parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetFunConfigDetailInfo parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetFunConfigDetailInfo parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetFunConfigDetailInfo parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetFunConfigDetailInfo prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *会议功能
         * </pre>
         *
         * Protobuf type {@code pbui_Item_MeetFunConfigDetailInfo}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetFunConfigDetailInfo, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Item_MeetFunConfigDetailInfo)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetFunConfigDetailInfoOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetFunConfigDetailInfo.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <pre>
             *功能标识码 参见Pb_Meet_FunctionCode
             * </pre>
             *
             * <code>fixed32 funcode = 1;</code>
             */
            public int getFuncode() {
                return instance.getFuncode();
            }
            /**
             * <pre>
             *功能标识码 参见Pb_Meet_FunctionCode
             * </pre>
             *
             * <code>fixed32 funcode = 1;</code>
             */
            public Builder setFuncode(int value) {
                copyOnWrite();
                instance.setFuncode(value);
                return this;
            }
            /**
             * <pre>
             *功能标识码 参见Pb_Meet_FunctionCode
             * </pre>
             *
             * <code>fixed32 funcode = 1;</code>
             */
            public Builder clearFuncode() {
                copyOnWrite();
                instance.clearFuncode();
                return this;
            }

            /**
             * <pre>
             *位置标识码
             * </pre>
             *
             * <code>fixed32 position = 2;</code>
             */
            public int getPosition() {
                return instance.getPosition();
            }
            /**
             * <pre>
             *位置标识码
             * </pre>
             *
             * <code>fixed32 position = 2;</code>
             */
            public Builder setPosition(int value) {
                copyOnWrite();
                instance.setPosition(value);
                return this;
            }
            /**
             * <pre>
             *位置标识码
             * </pre>
             *
             * <code>fixed32 position = 2;</code>
             */
            public Builder clearPosition() {
                copyOnWrite();
                instance.clearPosition();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Item_MeetFunConfigDetailInfo)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetFunConfigDetailInfo();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetFunConfigDetailInfo other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetFunConfigDetailInfo) arg1;
                    funcode_ = visitor.visitInt(funcode_ != 0, funcode_,
                            other.funcode_ != 0, other.funcode_);
                    position_ = visitor.visitInt(position_ != 0, position_,
                            other.position_ != 0, other.position_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 13: {

                                    funcode_ = input.readFixed32();
                                    break;
                                }
                                case 21: {

                                    position_ = input.readFixed32();
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetFunConfigDetailInfo.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Item_MeetFunConfigDetailInfo)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetFunConfigDetailInfo DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Item_MeetFunConfigDetailInfo();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetFunConfigDetailInfo getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Item_MeetFunConfigDetailInfo> PARSER;

        public static com.google.protobuf.Parser<pbui_Item_MeetFunConfigDetailInfo> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Type_MeetFunConfigDetailInfoOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Type_MeetFunConfigDetailInfo)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <code>repeated .pbui_Item_MeetFunConfigDetailInfo item = 1;</code>
         */
        java.util.List<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetFunConfigDetailInfo>
        getItemList();
        /**
         * <code>repeated .pbui_Item_MeetFunConfigDetailInfo item = 1;</code>
         */
        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetFunConfigDetailInfo getItem(int index);
        /**
         * <code>repeated .pbui_Item_MeetFunConfigDetailInfo item = 1;</code>
         */
        int getItemCount();
    }
    /**
     * <pre>
     *会议功能
     *type:Pb_TYPE_MEET_INTERFACE_FUNCONFIG
     *method: query/save/
     * </pre>
     *
     * Protobuf type {@code pbui_Type_MeetFunConfigDetailInfo}
     */
    public  static final class pbui_Type_MeetFunConfigDetailInfo extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Type_MeetFunConfigDetailInfo, pbui_Type_MeetFunConfigDetailInfo.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Type_MeetFunConfigDetailInfo)
            pbui_Type_MeetFunConfigDetailInfoOrBuilder {
        private pbui_Type_MeetFunConfigDetailInfo() {
            item_ = emptyProtobufList();
        }
        public static final int ITEM_FIELD_NUMBER = 1;
        private com.google.protobuf.Internal.ProtobufList<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetFunConfigDetailInfo> item_;
        /**
         * <code>repeated .pbui_Item_MeetFunConfigDetailInfo item = 1;</code>
         */
        public java.util.List<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetFunConfigDetailInfo> getItemList() {
            return item_;
        }
        /**
         * <code>repeated .pbui_Item_MeetFunConfigDetailInfo item = 1;</code>
         */
        public java.util.List<? extends com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetFunConfigDetailInfoOrBuilder>
        getItemOrBuilderList() {
            return item_;
        }
        /**
         * <code>repeated .pbui_Item_MeetFunConfigDetailInfo item = 1;</code>
         */
        public int getItemCount() {
            return item_.size();
        }
        /**
         * <code>repeated .pbui_Item_MeetFunConfigDetailInfo item = 1;</code>
         */
        public com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetFunConfigDetailInfo getItem(int index) {
            return item_.get(index);
        }
        /**
         * <code>repeated .pbui_Item_MeetFunConfigDetailInfo item = 1;</code>
         */
        public com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetFunConfigDetailInfoOrBuilder getItemOrBuilder(
                int index) {
            return item_.get(index);
        }
        private void ensureItemIsMutable() {
            if (!item_.isModifiable()) {
                item_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(item_);
            }
        }

        /**
         * <code>repeated .pbui_Item_MeetFunConfigDetailInfo item = 1;</code>
         */
        private void setItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetFunConfigDetailInfo value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensureItemIsMutable();
            item_.set(index, value);
        }
        /**
         * <code>repeated .pbui_Item_MeetFunConfigDetailInfo item = 1;</code>
         */
        private void setItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetFunConfigDetailInfo.Builder builderForValue) {
            ensureItemIsMutable();
            item_.set(index, builderForValue.build());
        }
        /**
         * <code>repeated .pbui_Item_MeetFunConfigDetailInfo item = 1;</code>
         */
        private void addItem(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetFunConfigDetailInfo value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensureItemIsMutable();
            item_.add(value);
        }
        /**
         * <code>repeated .pbui_Item_MeetFunConfigDetailInfo item = 1;</code>
         */
        private void addItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetFunConfigDetailInfo value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensureItemIsMutable();
            item_.add(index, value);
        }
        /**
         * <code>repeated .pbui_Item_MeetFunConfigDetailInfo item = 1;</code>
         */
        private void addItem(
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetFunConfigDetailInfo.Builder builderForValue) {
            ensureItemIsMutable();
            item_.add(builderForValue.build());
        }
        /**
         * <code>repeated .pbui_Item_MeetFunConfigDetailInfo item = 1;</code>
         */
        private void addItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetFunConfigDetailInfo.Builder builderForValue) {
            ensureItemIsMutable();
            item_.add(index, builderForValue.build());
        }
        /**
         * <code>repeated .pbui_Item_MeetFunConfigDetailInfo item = 1;</code>
         */
        private void addAllItem(
                java.lang.Iterable<? extends com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetFunConfigDetailInfo> values) {
            ensureItemIsMutable();
            com.google.protobuf.AbstractMessageLite.addAll(
                    values, item_);
        }
        /**
         * <code>repeated .pbui_Item_MeetFunConfigDetailInfo item = 1;</code>
         */
        private void clearItem() {
            item_ = emptyProtobufList();
        }
        /**
         * <code>repeated .pbui_Item_MeetFunConfigDetailInfo item = 1;</code>
         */
        private void removeItem(int index) {
            ensureItemIsMutable();
            item_.remove(index);
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            for (int i = 0; i < item_.size(); i++) {
                output.writeMessage(1, item_.get(i));
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            for (int i = 0; i < item_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, item_.get(i));
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetFunConfigDetailInfo parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetFunConfigDetailInfo parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetFunConfigDetailInfo parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetFunConfigDetailInfo parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetFunConfigDetailInfo parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetFunConfigDetailInfo parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetFunConfigDetailInfo parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetFunConfigDetailInfo parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetFunConfigDetailInfo parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetFunConfigDetailInfo parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetFunConfigDetailInfo parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetFunConfigDetailInfo parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetFunConfigDetailInfo prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *会议功能
         *type:Pb_TYPE_MEET_INTERFACE_FUNCONFIG
         *method: query/save/
         * </pre>
         *
         * Protobuf type {@code pbui_Type_MeetFunConfigDetailInfo}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetFunConfigDetailInfo, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Type_MeetFunConfigDetailInfo)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetFunConfigDetailInfoOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetFunConfigDetailInfo.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <code>repeated .pbui_Item_MeetFunConfigDetailInfo item = 1;</code>
             */
            public java.util.List<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetFunConfigDetailInfo> getItemList() {
                return java.util.Collections.unmodifiableList(
                        instance.getItemList());
            }
            /**
             * <code>repeated .pbui_Item_MeetFunConfigDetailInfo item = 1;</code>
             */
            public int getItemCount() {
                return instance.getItemCount();
            }/**
             * <code>repeated .pbui_Item_MeetFunConfigDetailInfo item = 1;</code>
             */
            public com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetFunConfigDetailInfo getItem(int index) {
                return instance.getItem(index);
            }
            /**
             * <code>repeated .pbui_Item_MeetFunConfigDetailInfo item = 1;</code>
             */
            public Builder setItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetFunConfigDetailInfo value) {
                copyOnWrite();
                instance.setItem(index, value);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetFunConfigDetailInfo item = 1;</code>
             */
            public Builder setItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetFunConfigDetailInfo.Builder builderForValue) {
                copyOnWrite();
                instance.setItem(index, builderForValue);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetFunConfigDetailInfo item = 1;</code>
             */
            public Builder addItem(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetFunConfigDetailInfo value) {
                copyOnWrite();
                instance.addItem(value);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetFunConfigDetailInfo item = 1;</code>
             */
            public Builder addItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetFunConfigDetailInfo value) {
                copyOnWrite();
                instance.addItem(index, value);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetFunConfigDetailInfo item = 1;</code>
             */
            public Builder addItem(
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetFunConfigDetailInfo.Builder builderForValue) {
                copyOnWrite();
                instance.addItem(builderForValue);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetFunConfigDetailInfo item = 1;</code>
             */
            public Builder addItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetFunConfigDetailInfo.Builder builderForValue) {
                copyOnWrite();
                instance.addItem(index, builderForValue);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetFunConfigDetailInfo item = 1;</code>
             */
            public Builder addAllItem(
                    java.lang.Iterable<? extends com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetFunConfigDetailInfo> values) {
                copyOnWrite();
                instance.addAllItem(values);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetFunConfigDetailInfo item = 1;</code>
             */
            public Builder clearItem() {
                copyOnWrite();
                instance.clearItem();
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetFunConfigDetailInfo item = 1;</code>
             */
            public Builder removeItem(int index) {
                copyOnWrite();
                instance.removeItem(index);
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Type_MeetFunConfigDetailInfo)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetFunConfigDetailInfo();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    item_.makeImmutable();
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetFunConfigDetailInfo other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetFunConfigDetailInfo) arg1;
                    item_= visitor.visitList(item_, other.item_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 10: {
                                    if (!item_.isModifiable()) {
                                        item_ =
                                                com.google.protobuf.GeneratedMessageLite.mutableCopy(item_);
                                    }
                                    item_.add(
                                            input.readMessage(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetFunConfigDetailInfo.parser(), extensionRegistry));
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetFunConfigDetailInfo.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Type_MeetFunConfigDetailInfo)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetFunConfigDetailInfo DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Type_MeetFunConfigDetailInfo();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetFunConfigDetailInfo getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Type_MeetFunConfigDetailInfo> PARSER;

        public static com.google.protobuf.Parser<pbui_Type_MeetFunConfigDetailInfo> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Item_MeetMemberColorDetailInfoOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Item_MeetMemberColorDetailInfo)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <pre>
         *参会人员ID
         * </pre>
         *
         * <code>fixed32 memberid = 1;</code>
         */
        int getMemberid();

        /**
         * <pre>
         *颜色值
         * </pre>
         *
         * <code>fixed32 rgb = 2;</code>
         */
        int getRgb();
    }
    /**
     * <pre>
     *参会人白板颜色
     * </pre>
     *
     * Protobuf type {@code pbui_Item_MeetMemberColorDetailInfo}
     */
    public  static final class pbui_Item_MeetMemberColorDetailInfo extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Item_MeetMemberColorDetailInfo, pbui_Item_MeetMemberColorDetailInfo.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Item_MeetMemberColorDetailInfo)
            pbui_Item_MeetMemberColorDetailInfoOrBuilder {
        private pbui_Item_MeetMemberColorDetailInfo() {
        }
        public static final int MEMBERID_FIELD_NUMBER = 1;
        private int memberid_;
        /**
         * <pre>
         *参会人员ID
         * </pre>
         *
         * <code>fixed32 memberid = 1;</code>
         */
        public int getMemberid() {
            return memberid_;
        }
        /**
         * <pre>
         *参会人员ID
         * </pre>
         *
         * <code>fixed32 memberid = 1;</code>
         */
        private void setMemberid(int value) {

            memberid_ = value;
        }
        /**
         * <pre>
         *参会人员ID
         * </pre>
         *
         * <code>fixed32 memberid = 1;</code>
         */
        private void clearMemberid() {

            memberid_ = 0;
        }

        public static final int RGB_FIELD_NUMBER = 2;
        private int rgb_;
        /**
         * <pre>
         *颜色值
         * </pre>
         *
         * <code>fixed32 rgb = 2;</code>
         */
        public int getRgb() {
            return rgb_;
        }
        /**
         * <pre>
         *颜色值
         * </pre>
         *
         * <code>fixed32 rgb = 2;</code>
         */
        private void setRgb(int value) {

            rgb_ = value;
        }
        /**
         * <pre>
         *颜色值
         * </pre>
         *
         * <code>fixed32 rgb = 2;</code>
         */
        private void clearRgb() {

            rgb_ = 0;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (memberid_ != 0) {
                output.writeFixed32(1, memberid_);
            }
            if (rgb_ != 0) {
                output.writeFixed32(2, rgb_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (memberid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(1, memberid_);
            }
            if (rgb_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(2, rgb_);
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMemberColorDetailInfo parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMemberColorDetailInfo parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMemberColorDetailInfo parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMemberColorDetailInfo parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMemberColorDetailInfo parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMemberColorDetailInfo parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMemberColorDetailInfo parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMemberColorDetailInfo parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMemberColorDetailInfo parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMemberColorDetailInfo parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMemberColorDetailInfo parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMemberColorDetailInfo parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMemberColorDetailInfo prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *参会人白板颜色
         * </pre>
         *
         * Protobuf type {@code pbui_Item_MeetMemberColorDetailInfo}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMemberColorDetailInfo, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Item_MeetMemberColorDetailInfo)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMemberColorDetailInfoOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMemberColorDetailInfo.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <pre>
             *参会人员ID
             * </pre>
             *
             * <code>fixed32 memberid = 1;</code>
             */
            public int getMemberid() {
                return instance.getMemberid();
            }
            /**
             * <pre>
             *参会人员ID
             * </pre>
             *
             * <code>fixed32 memberid = 1;</code>
             */
            public Builder setMemberid(int value) {
                copyOnWrite();
                instance.setMemberid(value);
                return this;
            }
            /**
             * <pre>
             *参会人员ID
             * </pre>
             *
             * <code>fixed32 memberid = 1;</code>
             */
            public Builder clearMemberid() {
                copyOnWrite();
                instance.clearMemberid();
                return this;
            }

            /**
             * <pre>
             *颜色值
             * </pre>
             *
             * <code>fixed32 rgb = 2;</code>
             */
            public int getRgb() {
                return instance.getRgb();
            }
            /**
             * <pre>
             *颜色值
             * </pre>
             *
             * <code>fixed32 rgb = 2;</code>
             */
            public Builder setRgb(int value) {
                copyOnWrite();
                instance.setRgb(value);
                return this;
            }
            /**
             * <pre>
             *颜色值
             * </pre>
             *
             * <code>fixed32 rgb = 2;</code>
             */
            public Builder clearRgb() {
                copyOnWrite();
                instance.clearRgb();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Item_MeetMemberColorDetailInfo)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMemberColorDetailInfo();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMemberColorDetailInfo other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMemberColorDetailInfo) arg1;
                    memberid_ = visitor.visitInt(memberid_ != 0, memberid_,
                            other.memberid_ != 0, other.memberid_);
                    rgb_ = visitor.visitInt(rgb_ != 0, rgb_,
                            other.rgb_ != 0, other.rgb_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 13: {

                                    memberid_ = input.readFixed32();
                                    break;
                                }
                                case 21: {

                                    rgb_ = input.readFixed32();
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMemberColorDetailInfo.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Item_MeetMemberColorDetailInfo)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMemberColorDetailInfo DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Item_MeetMemberColorDetailInfo();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMemberColorDetailInfo getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Item_MeetMemberColorDetailInfo> PARSER;

        public static com.google.protobuf.Parser<pbui_Item_MeetMemberColorDetailInfo> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Type_MeetMemberColorDetailInfoOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Type_MeetMemberColorDetailInfo)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <code>repeated .pbui_Item_MeetMemberColorDetailInfo item = 1;</code>
         */
        java.util.List<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMemberColorDetailInfo>
        getItemList();
        /**
         * <code>repeated .pbui_Item_MeetMemberColorDetailInfo item = 1;</code>
         */
        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMemberColorDetailInfo getItem(int index);
        /**
         * <code>repeated .pbui_Item_MeetMemberColorDetailInfo item = 1;</code>
         */
        int getItemCount();
    }
    /**
     * <pre>
     *参会人白板颜色
     *call
     *type:Pb_TYPE_MEET_INTERFACE_MEMBERCOLOR
     *method: query/mod/
     * </pre>
     *
     * Protobuf type {@code pbui_Type_MeetMemberColorDetailInfo}
     */
    public  static final class pbui_Type_MeetMemberColorDetailInfo extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Type_MeetMemberColorDetailInfo, pbui_Type_MeetMemberColorDetailInfo.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Type_MeetMemberColorDetailInfo)
            pbui_Type_MeetMemberColorDetailInfoOrBuilder {
        private pbui_Type_MeetMemberColorDetailInfo() {
            item_ = emptyProtobufList();
        }
        public static final int ITEM_FIELD_NUMBER = 1;
        private com.google.protobuf.Internal.ProtobufList<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMemberColorDetailInfo> item_;
        /**
         * <code>repeated .pbui_Item_MeetMemberColorDetailInfo item = 1;</code>
         */
        public java.util.List<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMemberColorDetailInfo> getItemList() {
            return item_;
        }
        /**
         * <code>repeated .pbui_Item_MeetMemberColorDetailInfo item = 1;</code>
         */
        public java.util.List<? extends com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMemberColorDetailInfoOrBuilder>
        getItemOrBuilderList() {
            return item_;
        }
        /**
         * <code>repeated .pbui_Item_MeetMemberColorDetailInfo item = 1;</code>
         */
        public int getItemCount() {
            return item_.size();
        }
        /**
         * <code>repeated .pbui_Item_MeetMemberColorDetailInfo item = 1;</code>
         */
        public com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMemberColorDetailInfo getItem(int index) {
            return item_.get(index);
        }
        /**
         * <code>repeated .pbui_Item_MeetMemberColorDetailInfo item = 1;</code>
         */
        public com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMemberColorDetailInfoOrBuilder getItemOrBuilder(
                int index) {
            return item_.get(index);
        }
        private void ensureItemIsMutable() {
            if (!item_.isModifiable()) {
                item_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(item_);
            }
        }

        /**
         * <code>repeated .pbui_Item_MeetMemberColorDetailInfo item = 1;</code>
         */
        private void setItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMemberColorDetailInfo value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensureItemIsMutable();
            item_.set(index, value);
        }
        /**
         * <code>repeated .pbui_Item_MeetMemberColorDetailInfo item = 1;</code>
         */
        private void setItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMemberColorDetailInfo.Builder builderForValue) {
            ensureItemIsMutable();
            item_.set(index, builderForValue.build());
        }
        /**
         * <code>repeated .pbui_Item_MeetMemberColorDetailInfo item = 1;</code>
         */
        private void addItem(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMemberColorDetailInfo value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensureItemIsMutable();
            item_.add(value);
        }
        /**
         * <code>repeated .pbui_Item_MeetMemberColorDetailInfo item = 1;</code>
         */
        private void addItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMemberColorDetailInfo value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensureItemIsMutable();
            item_.add(index, value);
        }
        /**
         * <code>repeated .pbui_Item_MeetMemberColorDetailInfo item = 1;</code>
         */
        private void addItem(
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMemberColorDetailInfo.Builder builderForValue) {
            ensureItemIsMutable();
            item_.add(builderForValue.build());
        }
        /**
         * <code>repeated .pbui_Item_MeetMemberColorDetailInfo item = 1;</code>
         */
        private void addItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMemberColorDetailInfo.Builder builderForValue) {
            ensureItemIsMutable();
            item_.add(index, builderForValue.build());
        }
        /**
         * <code>repeated .pbui_Item_MeetMemberColorDetailInfo item = 1;</code>
         */
        private void addAllItem(
                java.lang.Iterable<? extends com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMemberColorDetailInfo> values) {
            ensureItemIsMutable();
            com.google.protobuf.AbstractMessageLite.addAll(
                    values, item_);
        }
        /**
         * <code>repeated .pbui_Item_MeetMemberColorDetailInfo item = 1;</code>
         */
        private void clearItem() {
            item_ = emptyProtobufList();
        }
        /**
         * <code>repeated .pbui_Item_MeetMemberColorDetailInfo item = 1;</code>
         */
        private void removeItem(int index) {
            ensureItemIsMutable();
            item_.remove(index);
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            for (int i = 0; i < item_.size(); i++) {
                output.writeMessage(1, item_.get(i));
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            for (int i = 0; i < item_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, item_.get(i));
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetMemberColorDetailInfo parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetMemberColorDetailInfo parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetMemberColorDetailInfo parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetMemberColorDetailInfo parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetMemberColorDetailInfo parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetMemberColorDetailInfo parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetMemberColorDetailInfo parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetMemberColorDetailInfo parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetMemberColorDetailInfo parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetMemberColorDetailInfo parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetMemberColorDetailInfo parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetMemberColorDetailInfo parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetMemberColorDetailInfo prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *参会人白板颜色
         *call
         *type:Pb_TYPE_MEET_INTERFACE_MEMBERCOLOR
         *method: query/mod/
         * </pre>
         *
         * Protobuf type {@code pbui_Type_MeetMemberColorDetailInfo}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetMemberColorDetailInfo, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Type_MeetMemberColorDetailInfo)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetMemberColorDetailInfoOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetMemberColorDetailInfo.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <code>repeated .pbui_Item_MeetMemberColorDetailInfo item = 1;</code>
             */
            public java.util.List<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMemberColorDetailInfo> getItemList() {
                return java.util.Collections.unmodifiableList(
                        instance.getItemList());
            }
            /**
             * <code>repeated .pbui_Item_MeetMemberColorDetailInfo item = 1;</code>
             */
            public int getItemCount() {
                return instance.getItemCount();
            }/**
             * <code>repeated .pbui_Item_MeetMemberColorDetailInfo item = 1;</code>
             */
            public com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMemberColorDetailInfo getItem(int index) {
                return instance.getItem(index);
            }
            /**
             * <code>repeated .pbui_Item_MeetMemberColorDetailInfo item = 1;</code>
             */
            public Builder setItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMemberColorDetailInfo value) {
                copyOnWrite();
                instance.setItem(index, value);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetMemberColorDetailInfo item = 1;</code>
             */
            public Builder setItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMemberColorDetailInfo.Builder builderForValue) {
                copyOnWrite();
                instance.setItem(index, builderForValue);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetMemberColorDetailInfo item = 1;</code>
             */
            public Builder addItem(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMemberColorDetailInfo value) {
                copyOnWrite();
                instance.addItem(value);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetMemberColorDetailInfo item = 1;</code>
             */
            public Builder addItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMemberColorDetailInfo value) {
                copyOnWrite();
                instance.addItem(index, value);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetMemberColorDetailInfo item = 1;</code>
             */
            public Builder addItem(
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMemberColorDetailInfo.Builder builderForValue) {
                copyOnWrite();
                instance.addItem(builderForValue);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetMemberColorDetailInfo item = 1;</code>
             */
            public Builder addItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMemberColorDetailInfo.Builder builderForValue) {
                copyOnWrite();
                instance.addItem(index, builderForValue);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetMemberColorDetailInfo item = 1;</code>
             */
            public Builder addAllItem(
                    java.lang.Iterable<? extends com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMemberColorDetailInfo> values) {
                copyOnWrite();
                instance.addAllItem(values);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetMemberColorDetailInfo item = 1;</code>
             */
            public Builder clearItem() {
                copyOnWrite();
                instance.clearItem();
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetMemberColorDetailInfo item = 1;</code>
             */
            public Builder removeItem(int index) {
                copyOnWrite();
                instance.removeItem(index);
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Type_MeetMemberColorDetailInfo)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetMemberColorDetailInfo();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    item_.makeImmutable();
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetMemberColorDetailInfo other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetMemberColorDetailInfo) arg1;
                    item_= visitor.visitList(item_, other.item_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 10: {
                                    if (!item_.isModifiable()) {
                                        item_ =
                                                com.google.protobuf.GeneratedMessageLite.mutableCopy(item_);
                                    }
                                    item_.add(
                                            input.readMessage(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMemberColorDetailInfo.parser(), extensionRegistry));
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetMemberColorDetailInfo.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Type_MeetMemberColorDetailInfo)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetMemberColorDetailInfo DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Type_MeetMemberColorDetailInfo();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetMemberColorDetailInfo getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Type_MeetMemberColorDetailInfo> PARSER;

        public static com.google.protobuf.Parser<pbui_Type_MeetMemberColorDetailInfo> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Type_MeetScreenMouseControlOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Type_MeetScreenMouseControl)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <pre>
         *控制的标志  参考streamcontrol.h 定义
         * </pre>
         *
         * <code>fixed32 flag = 1;</code>
         */
        int getFlag();

        /**
         * <pre>
         *发起请求的设备ID
         * </pre>
         *
         * <code>fixed32 deviceid = 2;</code>
         */
        int getDeviceid();

        /**
         * <pre>
         *发起请求的人员ID
         * </pre>
         *
         * <code>fixed32 memberid = 3;</code>
         */
        int getMemberid();

        /**
         * <pre>
         *x% width的百分
         * </pre>
         *
         * <code>float x = 4;</code>
         */
        float getX();

        /**
         * <pre>
         *y% height的百分
         * </pre>
         *
         * <code>float y = 5;</code>
         */
        float getY();
    }
    /**
     * <pre>
     *屏幕鼠标控制
     *callback
     *method: notify
     * </pre>
     *
     * Protobuf type {@code pbui_Type_MeetScreenMouseControl}
     */
    public  static final class pbui_Type_MeetScreenMouseControl extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Type_MeetScreenMouseControl, pbui_Type_MeetScreenMouseControl.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Type_MeetScreenMouseControl)
            pbui_Type_MeetScreenMouseControlOrBuilder {
        private pbui_Type_MeetScreenMouseControl() {
        }
        public static final int FLAG_FIELD_NUMBER = 1;
        private int flag_;
        /**
         * <pre>
         *控制的标志  参考streamcontrol.h 定义
         * </pre>
         *
         * <code>fixed32 flag = 1;</code>
         */
        public int getFlag() {
            return flag_;
        }
        /**
         * <pre>
         *控制的标志  参考streamcontrol.h 定义
         * </pre>
         *
         * <code>fixed32 flag = 1;</code>
         */
        private void setFlag(int value) {

            flag_ = value;
        }
        /**
         * <pre>
         *控制的标志  参考streamcontrol.h 定义
         * </pre>
         *
         * <code>fixed32 flag = 1;</code>
         */
        private void clearFlag() {

            flag_ = 0;
        }

        public static final int DEVICEID_FIELD_NUMBER = 2;
        private int deviceid_;
        /**
         * <pre>
         *发起请求的设备ID
         * </pre>
         *
         * <code>fixed32 deviceid = 2;</code>
         */
        public int getDeviceid() {
            return deviceid_;
        }
        /**
         * <pre>
         *发起请求的设备ID
         * </pre>
         *
         * <code>fixed32 deviceid = 2;</code>
         */
        private void setDeviceid(int value) {

            deviceid_ = value;
        }
        /**
         * <pre>
         *发起请求的设备ID
         * </pre>
         *
         * <code>fixed32 deviceid = 2;</code>
         */
        private void clearDeviceid() {

            deviceid_ = 0;
        }

        public static final int MEMBERID_FIELD_NUMBER = 3;
        private int memberid_;
        /**
         * <pre>
         *发起请求的人员ID
         * </pre>
         *
         * <code>fixed32 memberid = 3;</code>
         */
        public int getMemberid() {
            return memberid_;
        }
        /**
         * <pre>
         *发起请求的人员ID
         * </pre>
         *
         * <code>fixed32 memberid = 3;</code>
         */
        private void setMemberid(int value) {

            memberid_ = value;
        }
        /**
         * <pre>
         *发起请求的人员ID
         * </pre>
         *
         * <code>fixed32 memberid = 3;</code>
         */
        private void clearMemberid() {

            memberid_ = 0;
        }

        public static final int X_FIELD_NUMBER = 4;
        private float x_;
        /**
         * <pre>
         *x% width的百分
         * </pre>
         *
         * <code>float x = 4;</code>
         */
        public float getX() {
            return x_;
        }
        /**
         * <pre>
         *x% width的百分
         * </pre>
         *
         * <code>float x = 4;</code>
         */
        private void setX(float value) {

            x_ = value;
        }
        /**
         * <pre>
         *x% width的百分
         * </pre>
         *
         * <code>float x = 4;</code>
         */
        private void clearX() {

            x_ = 0F;
        }

        public static final int Y_FIELD_NUMBER = 5;
        private float y_;
        /**
         * <pre>
         *y% height的百分
         * </pre>
         *
         * <code>float y = 5;</code>
         */
        public float getY() {
            return y_;
        }
        /**
         * <pre>
         *y% height的百分
         * </pre>
         *
         * <code>float y = 5;</code>
         */
        private void setY(float value) {

            y_ = value;
        }
        /**
         * <pre>
         *y% height的百分
         * </pre>
         *
         * <code>float y = 5;</code>
         */
        private void clearY() {

            y_ = 0F;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (flag_ != 0) {
                output.writeFixed32(1, flag_);
            }
            if (deviceid_ != 0) {
                output.writeFixed32(2, deviceid_);
            }
            if (memberid_ != 0) {
                output.writeFixed32(3, memberid_);
            }
            if (x_ != 0F) {
                output.writeFloat(4, x_);
            }
            if (y_ != 0F) {
                output.writeFloat(5, y_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (flag_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(1, flag_);
            }
            if (deviceid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(2, deviceid_);
            }
            if (memberid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(3, memberid_);
            }
            if (x_ != 0F) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFloatSize(4, x_);
            }
            if (y_ != 0F) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFloatSize(5, y_);
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetScreenMouseControl parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetScreenMouseControl parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetScreenMouseControl parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetScreenMouseControl parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetScreenMouseControl parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetScreenMouseControl parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetScreenMouseControl parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetScreenMouseControl parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetScreenMouseControl parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetScreenMouseControl parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetScreenMouseControl parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetScreenMouseControl parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetScreenMouseControl prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *屏幕鼠标控制
         *callback
         *method: notify
         * </pre>
         *
         * Protobuf type {@code pbui_Type_MeetScreenMouseControl}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetScreenMouseControl, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Type_MeetScreenMouseControl)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetScreenMouseControlOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetScreenMouseControl.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <pre>
             *控制的标志  参考streamcontrol.h 定义
             * </pre>
             *
             * <code>fixed32 flag = 1;</code>
             */
            public int getFlag() {
                return instance.getFlag();
            }
            /**
             * <pre>
             *控制的标志  参考streamcontrol.h 定义
             * </pre>
             *
             * <code>fixed32 flag = 1;</code>
             */
            public Builder setFlag(int value) {
                copyOnWrite();
                instance.setFlag(value);
                return this;
            }
            /**
             * <pre>
             *控制的标志  参考streamcontrol.h 定义
             * </pre>
             *
             * <code>fixed32 flag = 1;</code>
             */
            public Builder clearFlag() {
                copyOnWrite();
                instance.clearFlag();
                return this;
            }

            /**
             * <pre>
             *发起请求的设备ID
             * </pre>
             *
             * <code>fixed32 deviceid = 2;</code>
             */
            public int getDeviceid() {
                return instance.getDeviceid();
            }
            /**
             * <pre>
             *发起请求的设备ID
             * </pre>
             *
             * <code>fixed32 deviceid = 2;</code>
             */
            public Builder setDeviceid(int value) {
                copyOnWrite();
                instance.setDeviceid(value);
                return this;
            }
            /**
             * <pre>
             *发起请求的设备ID
             * </pre>
             *
             * <code>fixed32 deviceid = 2;</code>
             */
            public Builder clearDeviceid() {
                copyOnWrite();
                instance.clearDeviceid();
                return this;
            }

            /**
             * <pre>
             *发起请求的人员ID
             * </pre>
             *
             * <code>fixed32 memberid = 3;</code>
             */
            public int getMemberid() {
                return instance.getMemberid();
            }
            /**
             * <pre>
             *发起请求的人员ID
             * </pre>
             *
             * <code>fixed32 memberid = 3;</code>
             */
            public Builder setMemberid(int value) {
                copyOnWrite();
                instance.setMemberid(value);
                return this;
            }
            /**
             * <pre>
             *发起请求的人员ID
             * </pre>
             *
             * <code>fixed32 memberid = 3;</code>
             */
            public Builder clearMemberid() {
                copyOnWrite();
                instance.clearMemberid();
                return this;
            }

            /**
             * <pre>
             *x% width的百分
             * </pre>
             *
             * <code>float x = 4;</code>
             */
            public float getX() {
                return instance.getX();
            }
            /**
             * <pre>
             *x% width的百分
             * </pre>
             *
             * <code>float x = 4;</code>
             */
            public Builder setX(float value) {
                copyOnWrite();
                instance.setX(value);
                return this;
            }
            /**
             * <pre>
             *x% width的百分
             * </pre>
             *
             * <code>float x = 4;</code>
             */
            public Builder clearX() {
                copyOnWrite();
                instance.clearX();
                return this;
            }

            /**
             * <pre>
             *y% height的百分
             * </pre>
             *
             * <code>float y = 5;</code>
             */
            public float getY() {
                return instance.getY();
            }
            /**
             * <pre>
             *y% height的百分
             * </pre>
             *
             * <code>float y = 5;</code>
             */
            public Builder setY(float value) {
                copyOnWrite();
                instance.setY(value);
                return this;
            }
            /**
             * <pre>
             *y% height的百分
             * </pre>
             *
             * <code>float y = 5;</code>
             */
            public Builder clearY() {
                copyOnWrite();
                instance.clearY();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Type_MeetScreenMouseControl)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetScreenMouseControl();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetScreenMouseControl other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetScreenMouseControl) arg1;
                    flag_ = visitor.visitInt(flag_ != 0, flag_,
                            other.flag_ != 0, other.flag_);
                    deviceid_ = visitor.visitInt(deviceid_ != 0, deviceid_,
                            other.deviceid_ != 0, other.deviceid_);
                    memberid_ = visitor.visitInt(memberid_ != 0, memberid_,
                            other.memberid_ != 0, other.memberid_);
                    x_ = visitor.visitFloat(x_ != 0F, x_,
                            other.x_ != 0F, other.x_);
                    y_ = visitor.visitFloat(y_ != 0F, y_,
                            other.y_ != 0F, other.y_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 13: {

                                    flag_ = input.readFixed32();
                                    break;
                                }
                                case 21: {

                                    deviceid_ = input.readFixed32();
                                    break;
                                }
                                case 29: {

                                    memberid_ = input.readFixed32();
                                    break;
                                }
                                case 37: {

                                    x_ = input.readFloat();
                                    break;
                                }
                                case 45: {

                                    y_ = input.readFloat();
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetScreenMouseControl.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Type_MeetScreenMouseControl)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetScreenMouseControl DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Type_MeetScreenMouseControl();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetScreenMouseControl getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Type_MeetScreenMouseControl> PARSER;

        public static com.google.protobuf.Parser<pbui_Type_MeetScreenMouseControl> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Type_MeetDoScreenMouseControlOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Type_MeetDoScreenMouseControl)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <pre>
         *控制的标志  参考streamcontrol.h 定义
         * </pre>
         *
         * <code>fixed32 flag = 1;</code>
         */
        int getFlag();

        /**
         * <pre>
         *设备ID
         * </pre>
         *
         * <code>fixed32 deviceid = 2;</code>
         */
        int getDeviceid();

        /**
         * <pre>
         *x / width的百分比
         * </pre>
         *
         * <code>float x = 3;</code>
         */
        float getX();

        /**
         * <pre>
         *y / height的百分比
         * </pre>
         *
         * <code>float y = 4;</code>
         */
        float getY();
    }
    /**
     * <pre>
     *屏幕鼠标控制
     *call
     *method: control
     * </pre>
     *
     * Protobuf type {@code pbui_Type_MeetDoScreenMouseControl}
     */
    public  static final class pbui_Type_MeetDoScreenMouseControl extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Type_MeetDoScreenMouseControl, pbui_Type_MeetDoScreenMouseControl.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Type_MeetDoScreenMouseControl)
            pbui_Type_MeetDoScreenMouseControlOrBuilder {
        private pbui_Type_MeetDoScreenMouseControl() {
        }
        public static final int FLAG_FIELD_NUMBER = 1;
        private int flag_;
        /**
         * <pre>
         *控制的标志  参考streamcontrol.h 定义
         * </pre>
         *
         * <code>fixed32 flag = 1;</code>
         */
        public int getFlag() {
            return flag_;
        }
        /**
         * <pre>
         *控制的标志  参考streamcontrol.h 定义
         * </pre>
         *
         * <code>fixed32 flag = 1;</code>
         */
        private void setFlag(int value) {

            flag_ = value;
        }
        /**
         * <pre>
         *控制的标志  参考streamcontrol.h 定义
         * </pre>
         *
         * <code>fixed32 flag = 1;</code>
         */
        private void clearFlag() {

            flag_ = 0;
        }

        public static final int DEVICEID_FIELD_NUMBER = 2;
        private int deviceid_;
        /**
         * <pre>
         *设备ID
         * </pre>
         *
         * <code>fixed32 deviceid = 2;</code>
         */
        public int getDeviceid() {
            return deviceid_;
        }
        /**
         * <pre>
         *设备ID
         * </pre>
         *
         * <code>fixed32 deviceid = 2;</code>
         */
        private void setDeviceid(int value) {

            deviceid_ = value;
        }
        /**
         * <pre>
         *设备ID
         * </pre>
         *
         * <code>fixed32 deviceid = 2;</code>
         */
        private void clearDeviceid() {

            deviceid_ = 0;
        }

        public static final int X_FIELD_NUMBER = 3;
        private float x_;
        /**
         * <pre>
         *x / width的百分比
         * </pre>
         *
         * <code>float x = 3;</code>
         */
        public float getX() {
            return x_;
        }
        /**
         * <pre>
         *x / width的百分比
         * </pre>
         *
         * <code>float x = 3;</code>
         */
        private void setX(float value) {

            x_ = value;
        }
        /**
         * <pre>
         *x / width的百分比
         * </pre>
         *
         * <code>float x = 3;</code>
         */
        private void clearX() {

            x_ = 0F;
        }

        public static final int Y_FIELD_NUMBER = 4;
        private float y_;
        /**
         * <pre>
         *y / height的百分比
         * </pre>
         *
         * <code>float y = 4;</code>
         */
        public float getY() {
            return y_;
        }
        /**
         * <pre>
         *y / height的百分比
         * </pre>
         *
         * <code>float y = 4;</code>
         */
        private void setY(float value) {

            y_ = value;
        }
        /**
         * <pre>
         *y / height的百分比
         * </pre>
         *
         * <code>float y = 4;</code>
         */
        private void clearY() {

            y_ = 0F;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (flag_ != 0) {
                output.writeFixed32(1, flag_);
            }
            if (deviceid_ != 0) {
                output.writeFixed32(2, deviceid_);
            }
            if (x_ != 0F) {
                output.writeFloat(3, x_);
            }
            if (y_ != 0F) {
                output.writeFloat(4, y_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (flag_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(1, flag_);
            }
            if (deviceid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(2, deviceid_);
            }
            if (x_ != 0F) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFloatSize(3, x_);
            }
            if (y_ != 0F) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFloatSize(4, y_);
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoScreenMouseControl parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoScreenMouseControl parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoScreenMouseControl parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoScreenMouseControl parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoScreenMouseControl parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoScreenMouseControl parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoScreenMouseControl parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoScreenMouseControl parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoScreenMouseControl parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoScreenMouseControl parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoScreenMouseControl parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoScreenMouseControl parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoScreenMouseControl prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *屏幕鼠标控制
         *call
         *method: control
         * </pre>
         *
         * Protobuf type {@code pbui_Type_MeetDoScreenMouseControl}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoScreenMouseControl, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Type_MeetDoScreenMouseControl)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoScreenMouseControlOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoScreenMouseControl.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <pre>
             *控制的标志  参考streamcontrol.h 定义
             * </pre>
             *
             * <code>fixed32 flag = 1;</code>
             */
            public int getFlag() {
                return instance.getFlag();
            }
            /**
             * <pre>
             *控制的标志  参考streamcontrol.h 定义
             * </pre>
             *
             * <code>fixed32 flag = 1;</code>
             */
            public Builder setFlag(int value) {
                copyOnWrite();
                instance.setFlag(value);
                return this;
            }
            /**
             * <pre>
             *控制的标志  参考streamcontrol.h 定义
             * </pre>
             *
             * <code>fixed32 flag = 1;</code>
             */
            public Builder clearFlag() {
                copyOnWrite();
                instance.clearFlag();
                return this;
            }

            /**
             * <pre>
             *设备ID
             * </pre>
             *
             * <code>fixed32 deviceid = 2;</code>
             */
            public int getDeviceid() {
                return instance.getDeviceid();
            }
            /**
             * <pre>
             *设备ID
             * </pre>
             *
             * <code>fixed32 deviceid = 2;</code>
             */
            public Builder setDeviceid(int value) {
                copyOnWrite();
                instance.setDeviceid(value);
                return this;
            }
            /**
             * <pre>
             *设备ID
             * </pre>
             *
             * <code>fixed32 deviceid = 2;</code>
             */
            public Builder clearDeviceid() {
                copyOnWrite();
                instance.clearDeviceid();
                return this;
            }

            /**
             * <pre>
             *x / width的百分比
             * </pre>
             *
             * <code>float x = 3;</code>
             */
            public float getX() {
                return instance.getX();
            }
            /**
             * <pre>
             *x / width的百分比
             * </pre>
             *
             * <code>float x = 3;</code>
             */
            public Builder setX(float value) {
                copyOnWrite();
                instance.setX(value);
                return this;
            }
            /**
             * <pre>
             *x / width的百分比
             * </pre>
             *
             * <code>float x = 3;</code>
             */
            public Builder clearX() {
                copyOnWrite();
                instance.clearX();
                return this;
            }

            /**
             * <pre>
             *y / height的百分比
             * </pre>
             *
             * <code>float y = 4;</code>
             */
            public float getY() {
                return instance.getY();
            }
            /**
             * <pre>
             *y / height的百分比
             * </pre>
             *
             * <code>float y = 4;</code>
             */
            public Builder setY(float value) {
                copyOnWrite();
                instance.setY(value);
                return this;
            }
            /**
             * <pre>
             *y / height的百分比
             * </pre>
             *
             * <code>float y = 4;</code>
             */
            public Builder clearY() {
                copyOnWrite();
                instance.clearY();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Type_MeetDoScreenMouseControl)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoScreenMouseControl();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoScreenMouseControl other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoScreenMouseControl) arg1;
                    flag_ = visitor.visitInt(flag_ != 0, flag_,
                            other.flag_ != 0, other.flag_);
                    deviceid_ = visitor.visitInt(deviceid_ != 0, deviceid_,
                            other.deviceid_ != 0, other.deviceid_);
                    x_ = visitor.visitFloat(x_ != 0F, x_,
                            other.x_ != 0F, other.x_);
                    y_ = visitor.visitFloat(y_ != 0F, y_,
                            other.y_ != 0F, other.y_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 13: {

                                    flag_ = input.readFixed32();
                                    break;
                                }
                                case 21: {

                                    deviceid_ = input.readFixed32();
                                    break;
                                }
                                case 29: {

                                    x_ = input.readFloat();
                                    break;
                                }
                                case 37: {

                                    y_ = input.readFloat();
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoScreenMouseControl.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Type_MeetDoScreenMouseControl)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoScreenMouseControl DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Type_MeetDoScreenMouseControl();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoScreenMouseControl getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Type_MeetDoScreenMouseControl> PARSER;

        public static com.google.protobuf.Parser<pbui_Type_MeetDoScreenMouseControl> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Type_MeetScreenKeyBoardControlOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Type_MeetScreenKeyBoardControl)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <pre>
         *控制的标志 参考streamcontrol.h 定义
         * </pre>
         *
         * <code>fixed32 flag = 1;</code>
         */
        int getFlag();

        /**
         * <pre>
         *发起请求的设备ID
         * </pre>
         *
         * <code>fixed32 deviceid = 2;</code>
         */
        int getDeviceid();

        /**
         * <pre>
         *发起请求的人员ID
         * </pre>
         *
         * <code>fixed32 memberid = 3;</code>
         */
        int getMemberid();

        /**
         * <pre>
         *参考streamcontrol.h 定义
         * </pre>
         *
         * <code>fixed32 otherflag = 4;</code>
         */
        int getOtherflag();

        /**
         * <pre>
         *对应的key值 参考streamcontrol.h 定义
         * </pre>
         *
         * <code>fixed32 key = 5;</code>
         */
        int getKey();
    }
    /**
     * <pre>
     *屏幕键盘控制
     *callback
     *method: notify
     * </pre>
     *
     * Protobuf type {@code pbui_Type_MeetScreenKeyBoardControl}
     */
    public  static final class pbui_Type_MeetScreenKeyBoardControl extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Type_MeetScreenKeyBoardControl, pbui_Type_MeetScreenKeyBoardControl.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Type_MeetScreenKeyBoardControl)
            pbui_Type_MeetScreenKeyBoardControlOrBuilder {
        private pbui_Type_MeetScreenKeyBoardControl() {
        }
        public static final int FLAG_FIELD_NUMBER = 1;
        private int flag_;
        /**
         * <pre>
         *控制的标志 参考streamcontrol.h 定义
         * </pre>
         *
         * <code>fixed32 flag = 1;</code>
         */
        public int getFlag() {
            return flag_;
        }
        /**
         * <pre>
         *控制的标志 参考streamcontrol.h 定义
         * </pre>
         *
         * <code>fixed32 flag = 1;</code>
         */
        private void setFlag(int value) {

            flag_ = value;
        }
        /**
         * <pre>
         *控制的标志 参考streamcontrol.h 定义
         * </pre>
         *
         * <code>fixed32 flag = 1;</code>
         */
        private void clearFlag() {

            flag_ = 0;
        }

        public static final int DEVICEID_FIELD_NUMBER = 2;
        private int deviceid_;
        /**
         * <pre>
         *发起请求的设备ID
         * </pre>
         *
         * <code>fixed32 deviceid = 2;</code>
         */
        public int getDeviceid() {
            return deviceid_;
        }
        /**
         * <pre>
         *发起请求的设备ID
         * </pre>
         *
         * <code>fixed32 deviceid = 2;</code>
         */
        private void setDeviceid(int value) {

            deviceid_ = value;
        }
        /**
         * <pre>
         *发起请求的设备ID
         * </pre>
         *
         * <code>fixed32 deviceid = 2;</code>
         */
        private void clearDeviceid() {

            deviceid_ = 0;
        }

        public static final int MEMBERID_FIELD_NUMBER = 3;
        private int memberid_;
        /**
         * <pre>
         *发起请求的人员ID
         * </pre>
         *
         * <code>fixed32 memberid = 3;</code>
         */
        public int getMemberid() {
            return memberid_;
        }
        /**
         * <pre>
         *发起请求的人员ID
         * </pre>
         *
         * <code>fixed32 memberid = 3;</code>
         */
        private void setMemberid(int value) {

            memberid_ = value;
        }
        /**
         * <pre>
         *发起请求的人员ID
         * </pre>
         *
         * <code>fixed32 memberid = 3;</code>
         */
        private void clearMemberid() {

            memberid_ = 0;
        }

        public static final int OTHERFLAG_FIELD_NUMBER = 4;
        private int otherflag_;
        /**
         * <pre>
         *参考streamcontrol.h 定义
         * </pre>
         *
         * <code>fixed32 otherflag = 4;</code>
         */
        public int getOtherflag() {
            return otherflag_;
        }
        /**
         * <pre>
         *参考streamcontrol.h 定义
         * </pre>
         *
         * <code>fixed32 otherflag = 4;</code>
         */
        private void setOtherflag(int value) {

            otherflag_ = value;
        }
        /**
         * <pre>
         *参考streamcontrol.h 定义
         * </pre>
         *
         * <code>fixed32 otherflag = 4;</code>
         */
        private void clearOtherflag() {

            otherflag_ = 0;
        }

        public static final int KEY_FIELD_NUMBER = 5;
        private int key_;
        /**
         * <pre>
         *对应的key值 参考streamcontrol.h 定义
         * </pre>
         *
         * <code>fixed32 key = 5;</code>
         */
        public int getKey() {
            return key_;
        }
        /**
         * <pre>
         *对应的key值 参考streamcontrol.h 定义
         * </pre>
         *
         * <code>fixed32 key = 5;</code>
         */
        private void setKey(int value) {

            key_ = value;
        }
        /**
         * <pre>
         *对应的key值 参考streamcontrol.h 定义
         * </pre>
         *
         * <code>fixed32 key = 5;</code>
         */
        private void clearKey() {

            key_ = 0;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (flag_ != 0) {
                output.writeFixed32(1, flag_);
            }
            if (deviceid_ != 0) {
                output.writeFixed32(2, deviceid_);
            }
            if (memberid_ != 0) {
                output.writeFixed32(3, memberid_);
            }
            if (otherflag_ != 0) {
                output.writeFixed32(4, otherflag_);
            }
            if (key_ != 0) {
                output.writeFixed32(5, key_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (flag_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(1, flag_);
            }
            if (deviceid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(2, deviceid_);
            }
            if (memberid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(3, memberid_);
            }
            if (otherflag_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(4, otherflag_);
            }
            if (key_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(5, key_);
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetScreenKeyBoardControl parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetScreenKeyBoardControl parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetScreenKeyBoardControl parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetScreenKeyBoardControl parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetScreenKeyBoardControl parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetScreenKeyBoardControl parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetScreenKeyBoardControl parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetScreenKeyBoardControl parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetScreenKeyBoardControl parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetScreenKeyBoardControl parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetScreenKeyBoardControl parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetScreenKeyBoardControl parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetScreenKeyBoardControl prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *屏幕键盘控制
         *callback
         *method: notify
         * </pre>
         *
         * Protobuf type {@code pbui_Type_MeetScreenKeyBoardControl}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetScreenKeyBoardControl, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Type_MeetScreenKeyBoardControl)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetScreenKeyBoardControlOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetScreenKeyBoardControl.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <pre>
             *控制的标志 参考streamcontrol.h 定义
             * </pre>
             *
             * <code>fixed32 flag = 1;</code>
             */
            public int getFlag() {
                return instance.getFlag();
            }
            /**
             * <pre>
             *控制的标志 参考streamcontrol.h 定义
             * </pre>
             *
             * <code>fixed32 flag = 1;</code>
             */
            public Builder setFlag(int value) {
                copyOnWrite();
                instance.setFlag(value);
                return this;
            }
            /**
             * <pre>
             *控制的标志 参考streamcontrol.h 定义
             * </pre>
             *
             * <code>fixed32 flag = 1;</code>
             */
            public Builder clearFlag() {
                copyOnWrite();
                instance.clearFlag();
                return this;
            }

            /**
             * <pre>
             *发起请求的设备ID
             * </pre>
             *
             * <code>fixed32 deviceid = 2;</code>
             */
            public int getDeviceid() {
                return instance.getDeviceid();
            }
            /**
             * <pre>
             *发起请求的设备ID
             * </pre>
             *
             * <code>fixed32 deviceid = 2;</code>
             */
            public Builder setDeviceid(int value) {
                copyOnWrite();
                instance.setDeviceid(value);
                return this;
            }
            /**
             * <pre>
             *发起请求的设备ID
             * </pre>
             *
             * <code>fixed32 deviceid = 2;</code>
             */
            public Builder clearDeviceid() {
                copyOnWrite();
                instance.clearDeviceid();
                return this;
            }

            /**
             * <pre>
             *发起请求的人员ID
             * </pre>
             *
             * <code>fixed32 memberid = 3;</code>
             */
            public int getMemberid() {
                return instance.getMemberid();
            }
            /**
             * <pre>
             *发起请求的人员ID
             * </pre>
             *
             * <code>fixed32 memberid = 3;</code>
             */
            public Builder setMemberid(int value) {
                copyOnWrite();
                instance.setMemberid(value);
                return this;
            }
            /**
             * <pre>
             *发起请求的人员ID
             * </pre>
             *
             * <code>fixed32 memberid = 3;</code>
             */
            public Builder clearMemberid() {
                copyOnWrite();
                instance.clearMemberid();
                return this;
            }

            /**
             * <pre>
             *参考streamcontrol.h 定义
             * </pre>
             *
             * <code>fixed32 otherflag = 4;</code>
             */
            public int getOtherflag() {
                return instance.getOtherflag();
            }
            /**
             * <pre>
             *参考streamcontrol.h 定义
             * </pre>
             *
             * <code>fixed32 otherflag = 4;</code>
             */
            public Builder setOtherflag(int value) {
                copyOnWrite();
                instance.setOtherflag(value);
                return this;
            }
            /**
             * <pre>
             *参考streamcontrol.h 定义
             * </pre>
             *
             * <code>fixed32 otherflag = 4;</code>
             */
            public Builder clearOtherflag() {
                copyOnWrite();
                instance.clearOtherflag();
                return this;
            }

            /**
             * <pre>
             *对应的key值 参考streamcontrol.h 定义
             * </pre>
             *
             * <code>fixed32 key = 5;</code>
             */
            public int getKey() {
                return instance.getKey();
            }
            /**
             * <pre>
             *对应的key值 参考streamcontrol.h 定义
             * </pre>
             *
             * <code>fixed32 key = 5;</code>
             */
            public Builder setKey(int value) {
                copyOnWrite();
                instance.setKey(value);
                return this;
            }
            /**
             * <pre>
             *对应的key值 参考streamcontrol.h 定义
             * </pre>
             *
             * <code>fixed32 key = 5;</code>
             */
            public Builder clearKey() {
                copyOnWrite();
                instance.clearKey();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Type_MeetScreenKeyBoardControl)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetScreenKeyBoardControl();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetScreenKeyBoardControl other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetScreenKeyBoardControl) arg1;
                    flag_ = visitor.visitInt(flag_ != 0, flag_,
                            other.flag_ != 0, other.flag_);
                    deviceid_ = visitor.visitInt(deviceid_ != 0, deviceid_,
                            other.deviceid_ != 0, other.deviceid_);
                    memberid_ = visitor.visitInt(memberid_ != 0, memberid_,
                            other.memberid_ != 0, other.memberid_);
                    otherflag_ = visitor.visitInt(otherflag_ != 0, otherflag_,
                            other.otherflag_ != 0, other.otherflag_);
                    key_ = visitor.visitInt(key_ != 0, key_,
                            other.key_ != 0, other.key_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 13: {

                                    flag_ = input.readFixed32();
                                    break;
                                }
                                case 21: {

                                    deviceid_ = input.readFixed32();
                                    break;
                                }
                                case 29: {

                                    memberid_ = input.readFixed32();
                                    break;
                                }
                                case 37: {

                                    otherflag_ = input.readFixed32();
                                    break;
                                }
                                case 45: {

                                    key_ = input.readFixed32();
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetScreenKeyBoardControl.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Type_MeetScreenKeyBoardControl)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetScreenKeyBoardControl DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Type_MeetScreenKeyBoardControl();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetScreenKeyBoardControl getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Type_MeetScreenKeyBoardControl> PARSER;

        public static com.google.protobuf.Parser<pbui_Type_MeetScreenKeyBoardControl> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Type_MeetDoScreenKeyBoardControlOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Type_MeetDoScreenKeyBoardControl)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <pre>
         *控制的标志 参考streamcontrol.h 定义
         * </pre>
         *
         * <code>fixed32 flag = 1;</code>
         */
        int getFlag();

        /**
         * <pre>
         *设备ID
         * </pre>
         *
         * <code>fixed32 deviceid = 2;</code>
         */
        int getDeviceid();

        /**
         * <pre>
         *参考streamcontrol.h 定义
         * </pre>
         *
         * <code>fixed32 otherflag = 3;</code>
         */
        int getOtherflag();

        /**
         * <pre>
         *对应的key值 参考streamcontrol.h 定义
         * </pre>
         *
         * <code>fixed32 key = 4;</code>
         */
        int getKey();
    }
    /**
     * <pre>
     *屏幕键盘控制
     *call
     *method: control
     * </pre>
     *
     * Protobuf type {@code pbui_Type_MeetDoScreenKeyBoardControl}
     */
    public  static final class pbui_Type_MeetDoScreenKeyBoardControl extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Type_MeetDoScreenKeyBoardControl, pbui_Type_MeetDoScreenKeyBoardControl.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Type_MeetDoScreenKeyBoardControl)
            pbui_Type_MeetDoScreenKeyBoardControlOrBuilder {
        private pbui_Type_MeetDoScreenKeyBoardControl() {
        }
        public static final int FLAG_FIELD_NUMBER = 1;
        private int flag_;
        /**
         * <pre>
         *控制的标志 参考streamcontrol.h 定义
         * </pre>
         *
         * <code>fixed32 flag = 1;</code>
         */
        public int getFlag() {
            return flag_;
        }
        /**
         * <pre>
         *控制的标志 参考streamcontrol.h 定义
         * </pre>
         *
         * <code>fixed32 flag = 1;</code>
         */
        private void setFlag(int value) {

            flag_ = value;
        }
        /**
         * <pre>
         *控制的标志 参考streamcontrol.h 定义
         * </pre>
         *
         * <code>fixed32 flag = 1;</code>
         */
        private void clearFlag() {

            flag_ = 0;
        }

        public static final int DEVICEID_FIELD_NUMBER = 2;
        private int deviceid_;
        /**
         * <pre>
         *设备ID
         * </pre>
         *
         * <code>fixed32 deviceid = 2;</code>
         */
        public int getDeviceid() {
            return deviceid_;
        }
        /**
         * <pre>
         *设备ID
         * </pre>
         *
         * <code>fixed32 deviceid = 2;</code>
         */
        private void setDeviceid(int value) {

            deviceid_ = value;
        }
        /**
         * <pre>
         *设备ID
         * </pre>
         *
         * <code>fixed32 deviceid = 2;</code>
         */
        private void clearDeviceid() {

            deviceid_ = 0;
        }

        public static final int OTHERFLAG_FIELD_NUMBER = 3;
        private int otherflag_;
        /**
         * <pre>
         *参考streamcontrol.h 定义
         * </pre>
         *
         * <code>fixed32 otherflag = 3;</code>
         */
        public int getOtherflag() {
            return otherflag_;
        }
        /**
         * <pre>
         *参考streamcontrol.h 定义
         * </pre>
         *
         * <code>fixed32 otherflag = 3;</code>
         */
        private void setOtherflag(int value) {

            otherflag_ = value;
        }
        /**
         * <pre>
         *参考streamcontrol.h 定义
         * </pre>
         *
         * <code>fixed32 otherflag = 3;</code>
         */
        private void clearOtherflag() {

            otherflag_ = 0;
        }

        public static final int KEY_FIELD_NUMBER = 4;
        private int key_;
        /**
         * <pre>
         *对应的key值 参考streamcontrol.h 定义
         * </pre>
         *
         * <code>fixed32 key = 4;</code>
         */
        public int getKey() {
            return key_;
        }
        /**
         * <pre>
         *对应的key值 参考streamcontrol.h 定义
         * </pre>
         *
         * <code>fixed32 key = 4;</code>
         */
        private void setKey(int value) {

            key_ = value;
        }
        /**
         * <pre>
         *对应的key值 参考streamcontrol.h 定义
         * </pre>
         *
         * <code>fixed32 key = 4;</code>
         */
        private void clearKey() {

            key_ = 0;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (flag_ != 0) {
                output.writeFixed32(1, flag_);
            }
            if (deviceid_ != 0) {
                output.writeFixed32(2, deviceid_);
            }
            if (otherflag_ != 0) {
                output.writeFixed32(3, otherflag_);
            }
            if (key_ != 0) {
                output.writeFixed32(4, key_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (flag_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(1, flag_);
            }
            if (deviceid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(2, deviceid_);
            }
            if (otherflag_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(3, otherflag_);
            }
            if (key_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(4, key_);
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoScreenKeyBoardControl parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoScreenKeyBoardControl parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoScreenKeyBoardControl parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoScreenKeyBoardControl parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoScreenKeyBoardControl parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoScreenKeyBoardControl parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoScreenKeyBoardControl parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoScreenKeyBoardControl parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoScreenKeyBoardControl parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoScreenKeyBoardControl parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoScreenKeyBoardControl parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoScreenKeyBoardControl parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoScreenKeyBoardControl prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *屏幕键盘控制
         *call
         *method: control
         * </pre>
         *
         * Protobuf type {@code pbui_Type_MeetDoScreenKeyBoardControl}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoScreenKeyBoardControl, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Type_MeetDoScreenKeyBoardControl)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoScreenKeyBoardControlOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoScreenKeyBoardControl.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <pre>
             *控制的标志 参考streamcontrol.h 定义
             * </pre>
             *
             * <code>fixed32 flag = 1;</code>
             */
            public int getFlag() {
                return instance.getFlag();
            }
            /**
             * <pre>
             *控制的标志 参考streamcontrol.h 定义
             * </pre>
             *
             * <code>fixed32 flag = 1;</code>
             */
            public Builder setFlag(int value) {
                copyOnWrite();
                instance.setFlag(value);
                return this;
            }
            /**
             * <pre>
             *控制的标志 参考streamcontrol.h 定义
             * </pre>
             *
             * <code>fixed32 flag = 1;</code>
             */
            public Builder clearFlag() {
                copyOnWrite();
                instance.clearFlag();
                return this;
            }

            /**
             * <pre>
             *设备ID
             * </pre>
             *
             * <code>fixed32 deviceid = 2;</code>
             */
            public int getDeviceid() {
                return instance.getDeviceid();
            }
            /**
             * <pre>
             *设备ID
             * </pre>
             *
             * <code>fixed32 deviceid = 2;</code>
             */
            public Builder setDeviceid(int value) {
                copyOnWrite();
                instance.setDeviceid(value);
                return this;
            }
            /**
             * <pre>
             *设备ID
             * </pre>
             *
             * <code>fixed32 deviceid = 2;</code>
             */
            public Builder clearDeviceid() {
                copyOnWrite();
                instance.clearDeviceid();
                return this;
            }

            /**
             * <pre>
             *参考streamcontrol.h 定义
             * </pre>
             *
             * <code>fixed32 otherflag = 3;</code>
             */
            public int getOtherflag() {
                return instance.getOtherflag();
            }
            /**
             * <pre>
             *参考streamcontrol.h 定义
             * </pre>
             *
             * <code>fixed32 otherflag = 3;</code>
             */
            public Builder setOtherflag(int value) {
                copyOnWrite();
                instance.setOtherflag(value);
                return this;
            }
            /**
             * <pre>
             *参考streamcontrol.h 定义
             * </pre>
             *
             * <code>fixed32 otherflag = 3;</code>
             */
            public Builder clearOtherflag() {
                copyOnWrite();
                instance.clearOtherflag();
                return this;
            }

            /**
             * <pre>
             *对应的key值 参考streamcontrol.h 定义
             * </pre>
             *
             * <code>fixed32 key = 4;</code>
             */
            public int getKey() {
                return instance.getKey();
            }
            /**
             * <pre>
             *对应的key值 参考streamcontrol.h 定义
             * </pre>
             *
             * <code>fixed32 key = 4;</code>
             */
            public Builder setKey(int value) {
                copyOnWrite();
                instance.setKey(value);
                return this;
            }
            /**
             * <pre>
             *对应的key值 参考streamcontrol.h 定义
             * </pre>
             *
             * <code>fixed32 key = 4;</code>
             */
            public Builder clearKey() {
                copyOnWrite();
                instance.clearKey();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Type_MeetDoScreenKeyBoardControl)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoScreenKeyBoardControl();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoScreenKeyBoardControl other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoScreenKeyBoardControl) arg1;
                    flag_ = visitor.visitInt(flag_ != 0, flag_,
                            other.flag_ != 0, other.flag_);
                    deviceid_ = visitor.visitInt(deviceid_ != 0, deviceid_,
                            other.deviceid_ != 0, other.deviceid_);
                    otherflag_ = visitor.visitInt(otherflag_ != 0, otherflag_,
                            other.otherflag_ != 0, other.otherflag_);
                    key_ = visitor.visitInt(key_ != 0, key_,
                            other.key_ != 0, other.key_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 13: {

                                    flag_ = input.readFixed32();
                                    break;
                                }
                                case 21: {

                                    deviceid_ = input.readFixed32();
                                    break;
                                }
                                case 29: {

                                    otherflag_ = input.readFixed32();
                                    break;
                                }
                                case 37: {

                                    key_ = input.readFixed32();
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoScreenKeyBoardControl.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Type_MeetDoScreenKeyBoardControl)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoScreenKeyBoardControl DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Type_MeetDoScreenKeyBoardControl();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoScreenKeyBoardControl getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Type_MeetDoScreenKeyBoardControl> PARSER;

        public static com.google.protobuf.Parser<pbui_Type_MeetDoScreenKeyBoardControl> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Type_MeetStopResWorkOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Type_MeetStopResWork)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <pre>
         *有效资源个数,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 res = 1;</code>
         */
        java.util.List<java.lang.Integer> getResList();
        /**
         * <pre>
         *有效资源个数,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 res = 1;</code>
         */
        int getResCount();
        /**
         * <pre>
         *有效资源个数,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 res = 1;</code>
         */
        int getRes(int index);
    }
    /**
     * <pre>
     *停止资源功能
     *callback
     *type:Pb_TYPE_MEET_INTERFACE_STOPPLAY
     *method: close
     * </pre>
     *
     * Protobuf type {@code pbui_Type_MeetStopResWork}
     */
    public  static final class pbui_Type_MeetStopResWork extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Type_MeetStopResWork, pbui_Type_MeetStopResWork.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Type_MeetStopResWork)
            pbui_Type_MeetStopResWorkOrBuilder {
        private pbui_Type_MeetStopResWork() {
            res_ = emptyIntList();
        }
        public static final int RES_FIELD_NUMBER = 1;
        private com.google.protobuf.Internal.IntList res_;
        /**
         * <pre>
         *有效资源个数,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 res = 1;</code>
         */
        public java.util.List<java.lang.Integer>
        getResList() {
            return res_;
        }
        /**
         * <pre>
         *有效资源个数,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 res = 1;</code>
         */
        public int getResCount() {
            return res_.size();
        }
        /**
         * <pre>
         *有效资源个数,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 res = 1;</code>
         */
        public int getRes(int index) {
            return res_.getInt(index);
        }
        private void ensureResIsMutable() {
            if (!res_.isModifiable()) {
                res_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(res_);
            }
        }
        /**
         * <pre>
         *有效资源个数,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 res = 1;</code>
         */
        private void setRes(
                int index, int value) {
            ensureResIsMutable();
            res_.setInt(index, value);
        }
        /**
         * <pre>
         *有效资源个数,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 res = 1;</code>
         */
        private void addRes(int value) {
            ensureResIsMutable();
            res_.addInt(value);
        }
        /**
         * <pre>
         *有效资源个数,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 res = 1;</code>
         */
        private void addAllRes(
                java.lang.Iterable<? extends java.lang.Integer> values) {
            ensureResIsMutable();
            com.google.protobuf.AbstractMessageLite.addAll(
                    values, res_);
        }
        /**
         * <pre>
         *有效资源个数,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 res = 1;</code>
         */
        private void clearRes() {
            res_ = emptyIntList();
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            for (int i = 0; i < res_.size(); i++) {
                output.writeFixed32(1, res_.getInt(i));
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            {
                int dataSize = 0;
                dataSize = 4 * getResList().size();
                size += dataSize;
                size += 1 * getResList().size();
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStopResWork parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStopResWork parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStopResWork parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStopResWork parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStopResWork parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStopResWork parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStopResWork parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStopResWork parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStopResWork parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStopResWork parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStopResWork parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStopResWork parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStopResWork prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *停止资源功能
         *callback
         *type:Pb_TYPE_MEET_INTERFACE_STOPPLAY
         *method: close
         * </pre>
         *
         * Protobuf type {@code pbui_Type_MeetStopResWork}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStopResWork, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Type_MeetStopResWork)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStopResWorkOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStopResWork.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <pre>
             *有效资源个数,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 res = 1;</code>
             */
            public java.util.List<java.lang.Integer>
            getResList() {
                return java.util.Collections.unmodifiableList(
                        instance.getResList());
            }
            /**
             * <pre>
             *有效资源个数,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 res = 1;</code>
             */
            public int getResCount() {
                return instance.getResCount();
            }
            /**
             * <pre>
             *有效资源个数,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 res = 1;</code>
             */
            public int getRes(int index) {
                return instance.getRes(index);
            }
            /**
             * <pre>
             *有效资源个数,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 res = 1;</code>
             */
            public Builder setRes(
                    int index, int value) {
                copyOnWrite();
                instance.setRes(index, value);
                return this;
            }
            /**
             * <pre>
             *有效资源个数,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 res = 1;</code>
             */
            public Builder addRes(int value) {
                copyOnWrite();
                instance.addRes(value);
                return this;
            }
            /**
             * <pre>
             *有效资源个数,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 res = 1;</code>
             */
            public Builder addAllRes(
                    java.lang.Iterable<? extends java.lang.Integer> values) {
                copyOnWrite();
                instance.addAllRes(values);
                return this;
            }
            /**
             * <pre>
             *有效资源个数,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 res = 1;</code>
             */
            public Builder clearRes() {
                copyOnWrite();
                instance.clearRes();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Type_MeetStopResWork)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStopResWork();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    res_.makeImmutable();
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStopResWork other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStopResWork) arg1;
                    res_= visitor.visitIntList(res_, other.res_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 13: {
                                    if (!res_.isModifiable()) {
                                        res_ =
                                                com.google.protobuf.GeneratedMessageLite.mutableCopy(res_);
                                    }
                                    res_.addInt(input.readFixed32());
                                    break;
                                }
                                case 10: {
                                    int length = input.readRawVarint32();
                                    int limit = input.pushLimit(length);
                                    if (!res_.isModifiable() && input.getBytesUntilLimit() > 0) {
                                        final int currentSize = res_.size();
                                        res_ = res_.mutableCopyWithCapacity(
                                                currentSize + (length/4));
                                    }
                                    while (input.getBytesUntilLimit() > 0) {
                                        res_.addInt(input.readFixed32());
                                    }
                                    input.popLimit(limit);
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStopResWork.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Type_MeetStopResWork)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStopResWork DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Type_MeetStopResWork();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStopResWork getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Type_MeetStopResWork> PARSER;

        public static com.google.protobuf.Parser<pbui_Type_MeetStopResWork> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Type_MeetDoStopResWorkOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Type_MeetDoStopResWork)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <pre>
         *有效资源个数,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 res = 1;</code>
         */
        java.util.List<java.lang.Integer> getResList();
        /**
         * <pre>
         *有效资源个数,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 res = 1;</code>
         */
        int getResCount();
        /**
         * <pre>
         *有效资源个数,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 res = 1;</code>
         */
        int getRes(int index);

        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 2;</code>
         */
        java.util.List<java.lang.Integer> getDeviceidList();
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 2;</code>
         */
        int getDeviceidCount();
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 2;</code>
         */
        int getDeviceid(int index);
    }
    /**
     * <pre>
     *关闭资源功能
     *call
     *type:Pb_TYPE_MEET_INTERFACE_STOPPLAY
     *method: close
     * </pre>
     *
     * Protobuf type {@code pbui_Type_MeetDoStopResWork}
     */
    public  static final class pbui_Type_MeetDoStopResWork extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Type_MeetDoStopResWork, pbui_Type_MeetDoStopResWork.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Type_MeetDoStopResWork)
            pbui_Type_MeetDoStopResWorkOrBuilder {
        private pbui_Type_MeetDoStopResWork() {
            res_ = emptyIntList();
            deviceid_ = emptyIntList();
        }
        public static final int RES_FIELD_NUMBER = 1;
        private com.google.protobuf.Internal.IntList res_;
        /**
         * <pre>
         *有效资源个数,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 res = 1;</code>
         */
        public java.util.List<java.lang.Integer>
        getResList() {
            return res_;
        }
        /**
         * <pre>
         *有效资源个数,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 res = 1;</code>
         */
        public int getResCount() {
            return res_.size();
        }
        /**
         * <pre>
         *有效资源个数,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 res = 1;</code>
         */
        public int getRes(int index) {
            return res_.getInt(index);
        }
        private void ensureResIsMutable() {
            if (!res_.isModifiable()) {
                res_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(res_);
            }
        }
        /**
         * <pre>
         *有效资源个数,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 res = 1;</code>
         */
        private void setRes(
                int index, int value) {
            ensureResIsMutable();
            res_.setInt(index, value);
        }
        /**
         * <pre>
         *有效资源个数,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 res = 1;</code>
         */
        private void addRes(int value) {
            ensureResIsMutable();
            res_.addInt(value);
        }
        /**
         * <pre>
         *有效资源个数,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 res = 1;</code>
         */
        private void addAllRes(
                java.lang.Iterable<? extends java.lang.Integer> values) {
            ensureResIsMutable();
            com.google.protobuf.AbstractMessageLite.addAll(
                    values, res_);
        }
        /**
         * <pre>
         *有效资源个数,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 res = 1;</code>
         */
        private void clearRes() {
            res_ = emptyIntList();
        }

        public static final int DEVICEID_FIELD_NUMBER = 2;
        private com.google.protobuf.Internal.IntList deviceid_;
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 2;</code>
         */
        public java.util.List<java.lang.Integer>
        getDeviceidList() {
            return deviceid_;
        }
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 2;</code>
         */
        public int getDeviceidCount() {
            return deviceid_.size();
        }
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 2;</code>
         */
        public int getDeviceid(int index) {
            return deviceid_.getInt(index);
        }
        private void ensureDeviceidIsMutable() {
            if (!deviceid_.isModifiable()) {
                deviceid_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(deviceid_);
            }
        }
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 2;</code>
         */
        private void setDeviceid(
                int index, int value) {
            ensureDeviceidIsMutable();
            deviceid_.setInt(index, value);
        }
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 2;</code>
         */
        private void addDeviceid(int value) {
            ensureDeviceidIsMutable();
            deviceid_.addInt(value);
        }
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 2;</code>
         */
        private void addAllDeviceid(
                java.lang.Iterable<? extends java.lang.Integer> values) {
            ensureDeviceidIsMutable();
            com.google.protobuf.AbstractMessageLite.addAll(
                    values, deviceid_);
        }
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 2;</code>
         */
        private void clearDeviceid() {
            deviceid_ = emptyIntList();
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            for (int i = 0; i < res_.size(); i++) {
                output.writeFixed32(1, res_.getInt(i));
            }
            for (int i = 0; i < deviceid_.size(); i++) {
                output.writeFixed32(2, deviceid_.getInt(i));
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            {
                int dataSize = 0;
                dataSize = 4 * getResList().size();
                size += dataSize;
                size += 1 * getResList().size();
            }
            {
                int dataSize = 0;
                dataSize = 4 * getDeviceidList().size();
                size += dataSize;
                size += 1 * getDeviceidList().size();
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoStopResWork parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoStopResWork parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoStopResWork parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoStopResWork parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoStopResWork parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoStopResWork parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoStopResWork parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoStopResWork parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoStopResWork parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoStopResWork parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoStopResWork parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoStopResWork parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoStopResWork prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *关闭资源功能
         *call
         *type:Pb_TYPE_MEET_INTERFACE_STOPPLAY
         *method: close
         * </pre>
         *
         * Protobuf type {@code pbui_Type_MeetDoStopResWork}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoStopResWork, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Type_MeetDoStopResWork)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoStopResWorkOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoStopResWork.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <pre>
             *有效资源个数,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 res = 1;</code>
             */
            public java.util.List<java.lang.Integer>
            getResList() {
                return java.util.Collections.unmodifiableList(
                        instance.getResList());
            }
            /**
             * <pre>
             *有效资源个数,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 res = 1;</code>
             */
            public int getResCount() {
                return instance.getResCount();
            }
            /**
             * <pre>
             *有效资源个数,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 res = 1;</code>
             */
            public int getRes(int index) {
                return instance.getRes(index);
            }
            /**
             * <pre>
             *有效资源个数,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 res = 1;</code>
             */
            public Builder setRes(
                    int index, int value) {
                copyOnWrite();
                instance.setRes(index, value);
                return this;
            }
            /**
             * <pre>
             *有效资源个数,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 res = 1;</code>
             */
            public Builder addRes(int value) {
                copyOnWrite();
                instance.addRes(value);
                return this;
            }
            /**
             * <pre>
             *有效资源个数,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 res = 1;</code>
             */
            public Builder addAllRes(
                    java.lang.Iterable<? extends java.lang.Integer> values) {
                copyOnWrite();
                instance.addAllRes(values);
                return this;
            }
            /**
             * <pre>
             *有效资源个数,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 res = 1;</code>
             */
            public Builder clearRes() {
                copyOnWrite();
                instance.clearRes();
                return this;
            }

            /**
             * <pre>
             *通知的目标设备,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 deviceid = 2;</code>
             */
            public java.util.List<java.lang.Integer>
            getDeviceidList() {
                return java.util.Collections.unmodifiableList(
                        instance.getDeviceidList());
            }
            /**
             * <pre>
             *通知的目标设备,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 deviceid = 2;</code>
             */
            public int getDeviceidCount() {
                return instance.getDeviceidCount();
            }
            /**
             * <pre>
             *通知的目标设备,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 deviceid = 2;</code>
             */
            public int getDeviceid(int index) {
                return instance.getDeviceid(index);
            }
            /**
             * <pre>
             *通知的目标设备,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 deviceid = 2;</code>
             */
            public Builder setDeviceid(
                    int index, int value) {
                copyOnWrite();
                instance.setDeviceid(index, value);
                return this;
            }
            /**
             * <pre>
             *通知的目标设备,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 deviceid = 2;</code>
             */
            public Builder addDeviceid(int value) {
                copyOnWrite();
                instance.addDeviceid(value);
                return this;
            }
            /**
             * <pre>
             *通知的目标设备,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 deviceid = 2;</code>
             */
            public Builder addAllDeviceid(
                    java.lang.Iterable<? extends java.lang.Integer> values) {
                copyOnWrite();
                instance.addAllDeviceid(values);
                return this;
            }
            /**
             * <pre>
             *通知的目标设备,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 deviceid = 2;</code>
             */
            public Builder clearDeviceid() {
                copyOnWrite();
                instance.clearDeviceid();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Type_MeetDoStopResWork)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoStopResWork();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    res_.makeImmutable();
                    deviceid_.makeImmutable();
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoStopResWork other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoStopResWork) arg1;
                    res_= visitor.visitIntList(res_, other.res_);
                    deviceid_= visitor.visitIntList(deviceid_, other.deviceid_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 13: {
                                    if (!res_.isModifiable()) {
                                        res_ =
                                                com.google.protobuf.GeneratedMessageLite.mutableCopy(res_);
                                    }
                                    res_.addInt(input.readFixed32());
                                    break;
                                }
                                case 10: {
                                    int length = input.readRawVarint32();
                                    int limit = input.pushLimit(length);
                                    if (!res_.isModifiable() && input.getBytesUntilLimit() > 0) {
                                        final int currentSize = res_.size();
                                        res_ = res_.mutableCopyWithCapacity(
                                                currentSize + (length/4));
                                    }
                                    while (input.getBytesUntilLimit() > 0) {
                                        res_.addInt(input.readFixed32());
                                    }
                                    input.popLimit(limit);
                                    break;
                                }
                                case 21: {
                                    if (!deviceid_.isModifiable()) {
                                        deviceid_ =
                                                com.google.protobuf.GeneratedMessageLite.mutableCopy(deviceid_);
                                    }
                                    deviceid_.addInt(input.readFixed32());
                                    break;
                                }
                                case 18: {
                                    int length = input.readRawVarint32();
                                    int limit = input.pushLimit(length);
                                    if (!deviceid_.isModifiable() && input.getBytesUntilLimit() > 0) {
                                        final int currentSize = deviceid_.size();
                                        deviceid_ = deviceid_.mutableCopyWithCapacity(
                                                currentSize + (length/4));
                                    }
                                    while (input.getBytesUntilLimit() > 0) {
                                        deviceid_.addInt(input.readFixed32());
                                    }
                                    input.popLimit(limit);
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoStopResWork.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Type_MeetDoStopResWork)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoStopResWork DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Type_MeetDoStopResWork();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoStopResWork getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Type_MeetDoStopResWork> PARSER;

        public static com.google.protobuf.Parser<pbui_Type_MeetDoStopResWork> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Type_MeetDoStopTrrigerWorkOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Type_MeetDoStopTrrigerWork)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <pre>
         *触发器ID
         * </pre>
         *
         * <code>fixed32 triggerid = 1;</code>
         */
        int getTriggerid();

        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 2;</code>
         */
        java.util.List<java.lang.Integer> getDeviceidList();
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 2;</code>
         */
        int getDeviceidCount();
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 2;</code>
         */
        int getDeviceid(int index);
    }
    /**
     * <pre>
     *停止触发器
     *call
     *type:Pb_TYPE_MEET_INTERFACE_STOPPLAY
     *method: stop
     * </pre>
     *
     * Protobuf type {@code pbui_Type_MeetDoStopTrrigerWork}
     */
    public  static final class pbui_Type_MeetDoStopTrrigerWork extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Type_MeetDoStopTrrigerWork, pbui_Type_MeetDoStopTrrigerWork.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Type_MeetDoStopTrrigerWork)
            pbui_Type_MeetDoStopTrrigerWorkOrBuilder {
        private pbui_Type_MeetDoStopTrrigerWork() {
            deviceid_ = emptyIntList();
        }
        private int bitField0_;
        public static final int TRIGGERID_FIELD_NUMBER = 1;
        private int triggerid_;
        /**
         * <pre>
         *触发器ID
         * </pre>
         *
         * <code>fixed32 triggerid = 1;</code>
         */
        public int getTriggerid() {
            return triggerid_;
        }
        /**
         * <pre>
         *触发器ID
         * </pre>
         *
         * <code>fixed32 triggerid = 1;</code>
         */
        private void setTriggerid(int value) {

            triggerid_ = value;
        }
        /**
         * <pre>
         *触发器ID
         * </pre>
         *
         * <code>fixed32 triggerid = 1;</code>
         */
        private void clearTriggerid() {

            triggerid_ = 0;
        }

        public static final int DEVICEID_FIELD_NUMBER = 2;
        private com.google.protobuf.Internal.IntList deviceid_;
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 2;</code>
         */
        public java.util.List<java.lang.Integer>
        getDeviceidList() {
            return deviceid_;
        }
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 2;</code>
         */
        public int getDeviceidCount() {
            return deviceid_.size();
        }
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 2;</code>
         */
        public int getDeviceid(int index) {
            return deviceid_.getInt(index);
        }
        private void ensureDeviceidIsMutable() {
            if (!deviceid_.isModifiable()) {
                deviceid_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(deviceid_);
            }
        }
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 2;</code>
         */
        private void setDeviceid(
                int index, int value) {
            ensureDeviceidIsMutable();
            deviceid_.setInt(index, value);
        }
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 2;</code>
         */
        private void addDeviceid(int value) {
            ensureDeviceidIsMutable();
            deviceid_.addInt(value);
        }
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 2;</code>
         */
        private void addAllDeviceid(
                java.lang.Iterable<? extends java.lang.Integer> values) {
            ensureDeviceidIsMutable();
            com.google.protobuf.AbstractMessageLite.addAll(
                    values, deviceid_);
        }
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 2;</code>
         */
        private void clearDeviceid() {
            deviceid_ = emptyIntList();
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (triggerid_ != 0) {
                output.writeFixed32(1, triggerid_);
            }
            for (int i = 0; i < deviceid_.size(); i++) {
                output.writeFixed32(2, deviceid_.getInt(i));
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (triggerid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(1, triggerid_);
            }
            {
                int dataSize = 0;
                dataSize = 4 * getDeviceidList().size();
                size += dataSize;
                size += 1 * getDeviceidList().size();
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoStopTrrigerWork parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoStopTrrigerWork parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoStopTrrigerWork parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoStopTrrigerWork parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoStopTrrigerWork parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoStopTrrigerWork parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoStopTrrigerWork parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoStopTrrigerWork parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoStopTrrigerWork parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoStopTrrigerWork parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoStopTrrigerWork parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoStopTrrigerWork parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoStopTrrigerWork prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *停止触发器
         *call
         *type:Pb_TYPE_MEET_INTERFACE_STOPPLAY
         *method: stop
         * </pre>
         *
         * Protobuf type {@code pbui_Type_MeetDoStopTrrigerWork}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoStopTrrigerWork, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Type_MeetDoStopTrrigerWork)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoStopTrrigerWorkOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoStopTrrigerWork.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <pre>
             *触发器ID
             * </pre>
             *
             * <code>fixed32 triggerid = 1;</code>
             */
            public int getTriggerid() {
                return instance.getTriggerid();
            }
            /**
             * <pre>
             *触发器ID
             * </pre>
             *
             * <code>fixed32 triggerid = 1;</code>
             */
            public Builder setTriggerid(int value) {
                copyOnWrite();
                instance.setTriggerid(value);
                return this;
            }
            /**
             * <pre>
             *触发器ID
             * </pre>
             *
             * <code>fixed32 triggerid = 1;</code>
             */
            public Builder clearTriggerid() {
                copyOnWrite();
                instance.clearTriggerid();
                return this;
            }

            /**
             * <pre>
             *通知的目标设备,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 deviceid = 2;</code>
             */
            public java.util.List<java.lang.Integer>
            getDeviceidList() {
                return java.util.Collections.unmodifiableList(
                        instance.getDeviceidList());
            }
            /**
             * <pre>
             *通知的目标设备,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 deviceid = 2;</code>
             */
            public int getDeviceidCount() {
                return instance.getDeviceidCount();
            }
            /**
             * <pre>
             *通知的目标设备,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 deviceid = 2;</code>
             */
            public int getDeviceid(int index) {
                return instance.getDeviceid(index);
            }
            /**
             * <pre>
             *通知的目标设备,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 deviceid = 2;</code>
             */
            public Builder setDeviceid(
                    int index, int value) {
                copyOnWrite();
                instance.setDeviceid(index, value);
                return this;
            }
            /**
             * <pre>
             *通知的目标设备,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 deviceid = 2;</code>
             */
            public Builder addDeviceid(int value) {
                copyOnWrite();
                instance.addDeviceid(value);
                return this;
            }
            /**
             * <pre>
             *通知的目标设备,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 deviceid = 2;</code>
             */
            public Builder addAllDeviceid(
                    java.lang.Iterable<? extends java.lang.Integer> values) {
                copyOnWrite();
                instance.addAllDeviceid(values);
                return this;
            }
            /**
             * <pre>
             *通知的目标设备,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 deviceid = 2;</code>
             */
            public Builder clearDeviceid() {
                copyOnWrite();
                instance.clearDeviceid();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Type_MeetDoStopTrrigerWork)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoStopTrrigerWork();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    deviceid_.makeImmutable();
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoStopTrrigerWork other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoStopTrrigerWork) arg1;
                    triggerid_ = visitor.visitInt(triggerid_ != 0, triggerid_,
                            other.triggerid_ != 0, other.triggerid_);
                    deviceid_= visitor.visitIntList(deviceid_, other.deviceid_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                        bitField0_ |= other.bitField0_;
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 13: {

                                    triggerid_ = input.readFixed32();
                                    break;
                                }
                                case 21: {
                                    if (!deviceid_.isModifiable()) {
                                        deviceid_ =
                                                com.google.protobuf.GeneratedMessageLite.mutableCopy(deviceid_);
                                    }
                                    deviceid_.addInt(input.readFixed32());
                                    break;
                                }
                                case 18: {
                                    int length = input.readRawVarint32();
                                    int limit = input.pushLimit(length);
                                    if (!deviceid_.isModifiable() && input.getBytesUntilLimit() > 0) {
                                        final int currentSize = deviceid_.size();
                                        deviceid_ = deviceid_.mutableCopyWithCapacity(
                                                currentSize + (length/4));
                                    }
                                    while (input.getBytesUntilLimit() > 0) {
                                        deviceid_.addInt(input.readFixed32());
                                    }
                                    input.popLimit(limit);
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoStopTrrigerWork.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Type_MeetDoStopTrrigerWork)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoStopTrrigerWork DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Type_MeetDoStopTrrigerWork();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoStopTrrigerWork getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Type_MeetDoStopTrrigerWork> PARSER;

        public static com.google.protobuf.Parser<pbui_Type_MeetDoStopTrrigerWork> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Type_MeetStopPlayOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Type_MeetStopPlay)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <pre>
         *停止的触发器ID
         * </pre>
         *
         * <code>fixed32 triggerid = 1;</code>
         */
        int getTriggerid();

        /**
         * <pre>
         *创建该触发器的设备ID
         * </pre>
         *
         * <code>fixed32 createdeviceid = 2;</code>
         */
        int getCreatedeviceid();

        /**
         * <pre>
         *停止的资源ID
         * </pre>
         *
         * <code>fixed32 res = 3;</code>
         */
        int getRes();
    }
    /**
     * <pre>
     *媒体、流停止播放通知
     *callback
     *type:Pb_TYPE_MEET_INTERFACE_STOPPLAY
     *method: notify
     * </pre>
     *
     * Protobuf type {@code pbui_Type_MeetStopPlay}
     */
    public  static final class pbui_Type_MeetStopPlay extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Type_MeetStopPlay, pbui_Type_MeetStopPlay.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Type_MeetStopPlay)
            pbui_Type_MeetStopPlayOrBuilder {
        private pbui_Type_MeetStopPlay() {
        }
        public static final int TRIGGERID_FIELD_NUMBER = 1;
        private int triggerid_;
        /**
         * <pre>
         *停止的触发器ID
         * </pre>
         *
         * <code>fixed32 triggerid = 1;</code>
         */
        public int getTriggerid() {
            return triggerid_;
        }
        /**
         * <pre>
         *停止的触发器ID
         * </pre>
         *
         * <code>fixed32 triggerid = 1;</code>
         */
        private void setTriggerid(int value) {

            triggerid_ = value;
        }
        /**
         * <pre>
         *停止的触发器ID
         * </pre>
         *
         * <code>fixed32 triggerid = 1;</code>
         */
        private void clearTriggerid() {

            triggerid_ = 0;
        }

        public static final int CREATEDEVICEID_FIELD_NUMBER = 2;
        private int createdeviceid_;
        /**
         * <pre>
         *创建该触发器的设备ID
         * </pre>
         *
         * <code>fixed32 createdeviceid = 2;</code>
         */
        public int getCreatedeviceid() {
            return createdeviceid_;
        }
        /**
         * <pre>
         *创建该触发器的设备ID
         * </pre>
         *
         * <code>fixed32 createdeviceid = 2;</code>
         */
        private void setCreatedeviceid(int value) {

            createdeviceid_ = value;
        }
        /**
         * <pre>
         *创建该触发器的设备ID
         * </pre>
         *
         * <code>fixed32 createdeviceid = 2;</code>
         */
        private void clearCreatedeviceid() {

            createdeviceid_ = 0;
        }

        public static final int RES_FIELD_NUMBER = 3;
        private int res_;
        /**
         * <pre>
         *停止的资源ID
         * </pre>
         *
         * <code>fixed32 res = 3;</code>
         */
        public int getRes() {
            return res_;
        }
        /**
         * <pre>
         *停止的资源ID
         * </pre>
         *
         * <code>fixed32 res = 3;</code>
         */
        private void setRes(int value) {

            res_ = value;
        }
        /**
         * <pre>
         *停止的资源ID
         * </pre>
         *
         * <code>fixed32 res = 3;</code>
         */
        private void clearRes() {

            res_ = 0;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (triggerid_ != 0) {
                output.writeFixed32(1, triggerid_);
            }
            if (createdeviceid_ != 0) {
                output.writeFixed32(2, createdeviceid_);
            }
            if (res_ != 0) {
                output.writeFixed32(3, res_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (triggerid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(1, triggerid_);
            }
            if (createdeviceid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(2, createdeviceid_);
            }
            if (res_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(3, res_);
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStopPlay parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStopPlay parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStopPlay parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStopPlay parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStopPlay parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStopPlay parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStopPlay parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStopPlay parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStopPlay parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStopPlay parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStopPlay parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStopPlay parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStopPlay prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *媒体、流停止播放通知
         *callback
         *type:Pb_TYPE_MEET_INTERFACE_STOPPLAY
         *method: notify
         * </pre>
         *
         * Protobuf type {@code pbui_Type_MeetStopPlay}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStopPlay, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Type_MeetStopPlay)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStopPlayOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStopPlay.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <pre>
             *停止的触发器ID
             * </pre>
             *
             * <code>fixed32 triggerid = 1;</code>
             */
            public int getTriggerid() {
                return instance.getTriggerid();
            }
            /**
             * <pre>
             *停止的触发器ID
             * </pre>
             *
             * <code>fixed32 triggerid = 1;</code>
             */
            public Builder setTriggerid(int value) {
                copyOnWrite();
                instance.setTriggerid(value);
                return this;
            }
            /**
             * <pre>
             *停止的触发器ID
             * </pre>
             *
             * <code>fixed32 triggerid = 1;</code>
             */
            public Builder clearTriggerid() {
                copyOnWrite();
                instance.clearTriggerid();
                return this;
            }

            /**
             * <pre>
             *创建该触发器的设备ID
             * </pre>
             *
             * <code>fixed32 createdeviceid = 2;</code>
             */
            public int getCreatedeviceid() {
                return instance.getCreatedeviceid();
            }
            /**
             * <pre>
             *创建该触发器的设备ID
             * </pre>
             *
             * <code>fixed32 createdeviceid = 2;</code>
             */
            public Builder setCreatedeviceid(int value) {
                copyOnWrite();
                instance.setCreatedeviceid(value);
                return this;
            }
            /**
             * <pre>
             *创建该触发器的设备ID
             * </pre>
             *
             * <code>fixed32 createdeviceid = 2;</code>
             */
            public Builder clearCreatedeviceid() {
                copyOnWrite();
                instance.clearCreatedeviceid();
                return this;
            }

            /**
             * <pre>
             *停止的资源ID
             * </pre>
             *
             * <code>fixed32 res = 3;</code>
             */
            public int getRes() {
                return instance.getRes();
            }
            /**
             * <pre>
             *停止的资源ID
             * </pre>
             *
             * <code>fixed32 res = 3;</code>
             */
            public Builder setRes(int value) {
                copyOnWrite();
                instance.setRes(value);
                return this;
            }
            /**
             * <pre>
             *停止的资源ID
             * </pre>
             *
             * <code>fixed32 res = 3;</code>
             */
            public Builder clearRes() {
                copyOnWrite();
                instance.clearRes();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Type_MeetStopPlay)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStopPlay();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStopPlay other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStopPlay) arg1;
                    triggerid_ = visitor.visitInt(triggerid_ != 0, triggerid_,
                            other.triggerid_ != 0, other.triggerid_);
                    createdeviceid_ = visitor.visitInt(createdeviceid_ != 0, createdeviceid_,
                            other.createdeviceid_ != 0, other.createdeviceid_);
                    res_ = visitor.visitInt(res_ != 0, res_,
                            other.res_ != 0, other.res_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 13: {

                                    triggerid_ = input.readFixed32();
                                    break;
                                }
                                case 21: {

                                    createdeviceid_ = input.readFixed32();
                                    break;
                                }
                                case 29: {

                                    res_ = input.readFixed32();
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStopPlay.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Type_MeetStopPlay)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStopPlay DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Type_MeetStopPlay();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStopPlay getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Type_MeetStopPlay> PARSER;

        public static com.google.protobuf.Parser<pbui_Type_MeetStopPlay> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Type_MeetDBServerOperErrorOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Type_MeetDBServerOperError)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <pre>
         *参见 Pb_DB_StatusCode
         * </pre>
         *
         * <code>fixed32 status = 1;</code>
         */
        int getStatus();
    }
    /**
     * <pre>
     *数据后台回复的错误信息
     *callback
     *type:Pb_TYPE_MEET_INTERFACE_DBSERVERERROR
     *method: notify
     * </pre>
     *
     * Protobuf type {@code pbui_Type_MeetDBServerOperError}
     */
    public  static final class pbui_Type_MeetDBServerOperError extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Type_MeetDBServerOperError, pbui_Type_MeetDBServerOperError.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Type_MeetDBServerOperError)
            pbui_Type_MeetDBServerOperErrorOrBuilder {
        private pbui_Type_MeetDBServerOperError() {
        }
        public static final int STATUS_FIELD_NUMBER = 1;
        private int status_;
        /**
         * <pre>
         *参见 Pb_DB_StatusCode
         * </pre>
         *
         * <code>fixed32 status = 1;</code>
         */
        public int getStatus() {
            return status_;
        }
        /**
         * <pre>
         *参见 Pb_DB_StatusCode
         * </pre>
         *
         * <code>fixed32 status = 1;</code>
         */
        private void setStatus(int value) {

            status_ = value;
        }
        /**
         * <pre>
         *参见 Pb_DB_StatusCode
         * </pre>
         *
         * <code>fixed32 status = 1;</code>
         */
        private void clearStatus() {

            status_ = 0;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (status_ != 0) {
                output.writeFixed32(1, status_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (status_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(1, status_);
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDBServerOperError parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDBServerOperError parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDBServerOperError parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDBServerOperError parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDBServerOperError parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDBServerOperError parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDBServerOperError parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDBServerOperError parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDBServerOperError parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDBServerOperError parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDBServerOperError parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDBServerOperError parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDBServerOperError prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *数据后台回复的错误信息
         *callback
         *type:Pb_TYPE_MEET_INTERFACE_DBSERVERERROR
         *method: notify
         * </pre>
         *
         * Protobuf type {@code pbui_Type_MeetDBServerOperError}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDBServerOperError, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Type_MeetDBServerOperError)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDBServerOperErrorOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDBServerOperError.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <pre>
             *参见 Pb_DB_StatusCode
             * </pre>
             *
             * <code>fixed32 status = 1;</code>
             */
            public int getStatus() {
                return instance.getStatus();
            }
            /**
             * <pre>
             *参见 Pb_DB_StatusCode
             * </pre>
             *
             * <code>fixed32 status = 1;</code>
             */
            public Builder setStatus(int value) {
                copyOnWrite();
                instance.setStatus(value);
                return this;
            }
            /**
             * <pre>
             *参见 Pb_DB_StatusCode
             * </pre>
             *
             * <code>fixed32 status = 1;</code>
             */
            public Builder clearStatus() {
                copyOnWrite();
                instance.clearStatus();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Type_MeetDBServerOperError)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDBServerOperError();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDBServerOperError other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDBServerOperError) arg1;
                    status_ = visitor.visitInt(status_ != 0, status_,
                            other.status_ != 0, other.status_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 13: {

                                    status_ = input.readFixed32();
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDBServerOperError.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Type_MeetDBServerOperError)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDBServerOperError DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Type_MeetDBServerOperError();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDBServerOperError getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Type_MeetDBServerOperError> PARSER;

        public static com.google.protobuf.Parser<pbui_Type_MeetDBServerOperError> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Type_MeetInitPlayResOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Type_MeetInitPlayRes)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <pre>
         *资源索引
         * </pre>
         *
         * <code>fixed32 res = 1;</code>
         */
        int getRes();

        /**
         * <pre>
         *资源的坐标和宽高
         * </pre>
         *
         * <code>fixed32 x = 2;</code>
         */
        int getX();

        /**
         * <code>fixed32 y = 3;</code>
         */
        int getY();

        /**
         * <code>fixed32 w = 4;</code>
         */
        int getW();

        /**
         * <code>fixed32 h = 5;</code>
         */
        int getH();
    }
    /**
     * <pre>
     *视频播放资源初始化
     *call
     *type:Pb_TYPE_MEET_INTERFACE_MEDIAPLAY
     *method: init
     * </pre>
     *
     * Protobuf type {@code pbui_Type_MeetInitPlayRes}
     */
    public  static final class pbui_Type_MeetInitPlayRes extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Type_MeetInitPlayRes, pbui_Type_MeetInitPlayRes.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Type_MeetInitPlayRes)
            pbui_Type_MeetInitPlayResOrBuilder {
        private pbui_Type_MeetInitPlayRes() {
        }
        public static final int RES_FIELD_NUMBER = 1;
        private int res_;
        /**
         * <pre>
         *资源索引
         * </pre>
         *
         * <code>fixed32 res = 1;</code>
         */
        public int getRes() {
            return res_;
        }
        /**
         * <pre>
         *资源索引
         * </pre>
         *
         * <code>fixed32 res = 1;</code>
         */
        private void setRes(int value) {

            res_ = value;
        }
        /**
         * <pre>
         *资源索引
         * </pre>
         *
         * <code>fixed32 res = 1;</code>
         */
        private void clearRes() {

            res_ = 0;
        }

        public static final int X_FIELD_NUMBER = 2;
        private int x_;
        /**
         * <pre>
         *资源的坐标和宽高
         * </pre>
         *
         * <code>fixed32 x = 2;</code>
         */
        public int getX() {
            return x_;
        }
        /**
         * <pre>
         *资源的坐标和宽高
         * </pre>
         *
         * <code>fixed32 x = 2;</code>
         */
        private void setX(int value) {

            x_ = value;
        }
        /**
         * <pre>
         *资源的坐标和宽高
         * </pre>
         *
         * <code>fixed32 x = 2;</code>
         */
        private void clearX() {

            x_ = 0;
        }

        public static final int Y_FIELD_NUMBER = 3;
        private int y_;
        /**
         * <code>fixed32 y = 3;</code>
         */
        public int getY() {
            return y_;
        }
        /**
         * <code>fixed32 y = 3;</code>
         */
        private void setY(int value) {

            y_ = value;
        }
        /**
         * <code>fixed32 y = 3;</code>
         */
        private void clearY() {

            y_ = 0;
        }

        public static final int W_FIELD_NUMBER = 4;
        private int w_;
        /**
         * <code>fixed32 w = 4;</code>
         */
        public int getW() {
            return w_;
        }
        /**
         * <code>fixed32 w = 4;</code>
         */
        private void setW(int value) {

            w_ = value;
        }
        /**
         * <code>fixed32 w = 4;</code>
         */
        private void clearW() {

            w_ = 0;
        }

        public static final int H_FIELD_NUMBER = 5;
        private int h_;
        /**
         * <code>fixed32 h = 5;</code>
         */
        public int getH() {
            return h_;
        }
        /**
         * <code>fixed32 h = 5;</code>
         */
        private void setH(int value) {

            h_ = value;
        }
        /**
         * <code>fixed32 h = 5;</code>
         */
        private void clearH() {

            h_ = 0;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (res_ != 0) {
                output.writeFixed32(1, res_);
            }
            if (x_ != 0) {
                output.writeFixed32(2, x_);
            }
            if (y_ != 0) {
                output.writeFixed32(3, y_);
            }
            if (w_ != 0) {
                output.writeFixed32(4, w_);
            }
            if (h_ != 0) {
                output.writeFixed32(5, h_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (res_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(1, res_);
            }
            if (x_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(2, x_);
            }
            if (y_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(3, y_);
            }
            if (w_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(4, w_);
            }
            if (h_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(5, h_);
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetInitPlayRes parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetInitPlayRes parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetInitPlayRes parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetInitPlayRes parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetInitPlayRes parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetInitPlayRes parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetInitPlayRes parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetInitPlayRes parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetInitPlayRes parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetInitPlayRes parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetInitPlayRes parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetInitPlayRes parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetInitPlayRes prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *视频播放资源初始化
         *call
         *type:Pb_TYPE_MEET_INTERFACE_MEDIAPLAY
         *method: init
         * </pre>
         *
         * Protobuf type {@code pbui_Type_MeetInitPlayRes}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetInitPlayRes, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Type_MeetInitPlayRes)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetInitPlayResOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetInitPlayRes.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <pre>
             *资源索引
             * </pre>
             *
             * <code>fixed32 res = 1;</code>
             */
            public int getRes() {
                return instance.getRes();
            }
            /**
             * <pre>
             *资源索引
             * </pre>
             *
             * <code>fixed32 res = 1;</code>
             */
            public Builder setRes(int value) {
                copyOnWrite();
                instance.setRes(value);
                return this;
            }
            /**
             * <pre>
             *资源索引
             * </pre>
             *
             * <code>fixed32 res = 1;</code>
             */
            public Builder clearRes() {
                copyOnWrite();
                instance.clearRes();
                return this;
            }

            /**
             * <pre>
             *资源的坐标和宽高
             * </pre>
             *
             * <code>fixed32 x = 2;</code>
             */
            public int getX() {
                return instance.getX();
            }
            /**
             * <pre>
             *资源的坐标和宽高
             * </pre>
             *
             * <code>fixed32 x = 2;</code>
             */
            public Builder setX(int value) {
                copyOnWrite();
                instance.setX(value);
                return this;
            }
            /**
             * <pre>
             *资源的坐标和宽高
             * </pre>
             *
             * <code>fixed32 x = 2;</code>
             */
            public Builder clearX() {
                copyOnWrite();
                instance.clearX();
                return this;
            }

            /**
             * <code>fixed32 y = 3;</code>
             */
            public int getY() {
                return instance.getY();
            }
            /**
             * <code>fixed32 y = 3;</code>
             */
            public Builder setY(int value) {
                copyOnWrite();
                instance.setY(value);
                return this;
            }
            /**
             * <code>fixed32 y = 3;</code>
             */
            public Builder clearY() {
                copyOnWrite();
                instance.clearY();
                return this;
            }

            /**
             * <code>fixed32 w = 4;</code>
             */
            public int getW() {
                return instance.getW();
            }
            /**
             * <code>fixed32 w = 4;</code>
             */
            public Builder setW(int value) {
                copyOnWrite();
                instance.setW(value);
                return this;
            }
            /**
             * <code>fixed32 w = 4;</code>
             */
            public Builder clearW() {
                copyOnWrite();
                instance.clearW();
                return this;
            }

            /**
             * <code>fixed32 h = 5;</code>
             */
            public int getH() {
                return instance.getH();
            }
            /**
             * <code>fixed32 h = 5;</code>
             */
            public Builder setH(int value) {
                copyOnWrite();
                instance.setH(value);
                return this;
            }
            /**
             * <code>fixed32 h = 5;</code>
             */
            public Builder clearH() {
                copyOnWrite();
                instance.clearH();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Type_MeetInitPlayRes)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetInitPlayRes();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetInitPlayRes other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetInitPlayRes) arg1;
                    res_ = visitor.visitInt(res_ != 0, res_,
                            other.res_ != 0, other.res_);
                    x_ = visitor.visitInt(x_ != 0, x_,
                            other.x_ != 0, other.x_);
                    y_ = visitor.visitInt(y_ != 0, y_,
                            other.y_ != 0, other.y_);
                    w_ = visitor.visitInt(w_ != 0, w_,
                            other.w_ != 0, other.w_);
                    h_ = visitor.visitInt(h_ != 0, h_,
                            other.h_ != 0, other.h_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 13: {

                                    res_ = input.readFixed32();
                                    break;
                                }
                                case 21: {

                                    x_ = input.readFixed32();
                                    break;
                                }
                                case 29: {

                                    y_ = input.readFixed32();
                                    break;
                                }
                                case 37: {

                                    w_ = input.readFixed32();
                                    break;
                                }
                                case 45: {

                                    h_ = input.readFixed32();
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetInitPlayRes.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Type_MeetInitPlayRes)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetInitPlayRes DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Type_MeetInitPlayRes();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetInitPlayRes getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Type_MeetInitPlayRes> PARSER;

        public static com.google.protobuf.Parser<pbui_Type_MeetInitPlayRes> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Type_MeetDestroyPlayResOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Type_MeetDestroyPlayRes)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <pre>
         *资源索引
         * </pre>
         *
         * <code>fixed32 res = 1;</code>
         */
        int getRes();
    }
    /**
     * <pre>
     *视频播放资源释放
     *call
     *type:Pb_TYPE_MEET_INTERFACE_MEDIAPLAY
     *method: destroy
     * </pre>
     *
     * Protobuf type {@code pbui_Type_MeetDestroyPlayRes}
     */
    public  static final class pbui_Type_MeetDestroyPlayRes extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Type_MeetDestroyPlayRes, pbui_Type_MeetDestroyPlayRes.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Type_MeetDestroyPlayRes)
            pbui_Type_MeetDestroyPlayResOrBuilder {
        private pbui_Type_MeetDestroyPlayRes() {
        }
        public static final int RES_FIELD_NUMBER = 1;
        private int res_;
        /**
         * <pre>
         *资源索引
         * </pre>
         *
         * <code>fixed32 res = 1;</code>
         */
        public int getRes() {
            return res_;
        }
        /**
         * <pre>
         *资源索引
         * </pre>
         *
         * <code>fixed32 res = 1;</code>
         */
        private void setRes(int value) {

            res_ = value;
        }
        /**
         * <pre>
         *资源索引
         * </pre>
         *
         * <code>fixed32 res = 1;</code>
         */
        private void clearRes() {

            res_ = 0;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (res_ != 0) {
                output.writeFixed32(1, res_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (res_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(1, res_);
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDestroyPlayRes parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDestroyPlayRes parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDestroyPlayRes parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDestroyPlayRes parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDestroyPlayRes parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDestroyPlayRes parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDestroyPlayRes parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDestroyPlayRes parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDestroyPlayRes parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDestroyPlayRes parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDestroyPlayRes parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDestroyPlayRes parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDestroyPlayRes prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *视频播放资源释放
         *call
         *type:Pb_TYPE_MEET_INTERFACE_MEDIAPLAY
         *method: destroy
         * </pre>
         *
         * Protobuf type {@code pbui_Type_MeetDestroyPlayRes}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDestroyPlayRes, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Type_MeetDestroyPlayRes)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDestroyPlayResOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDestroyPlayRes.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <pre>
             *资源索引
             * </pre>
             *
             * <code>fixed32 res = 1;</code>
             */
            public int getRes() {
                return instance.getRes();
            }
            /**
             * <pre>
             *资源索引
             * </pre>
             *
             * <code>fixed32 res = 1;</code>
             */
            public Builder setRes(int value) {
                copyOnWrite();
                instance.setRes(value);
                return this;
            }
            /**
             * <pre>
             *资源索引
             * </pre>
             *
             * <code>fixed32 res = 1;</code>
             */
            public Builder clearRes() {
                copyOnWrite();
                instance.clearRes();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Type_MeetDestroyPlayRes)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDestroyPlayRes();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDestroyPlayRes other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDestroyPlayRes) arg1;
                    res_ = visitor.visitInt(res_ != 0, res_,
                            other.res_ != 0, other.res_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 13: {

                                    res_ = input.readFixed32();
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDestroyPlayRes.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Type_MeetDestroyPlayRes)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDestroyPlayRes DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Type_MeetDestroyPlayRes();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDestroyPlayRes getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Type_MeetDestroyPlayRes> PARSER;

        public static com.google.protobuf.Parser<pbui_Type_MeetDestroyPlayRes> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Type_MeetMediaPlayOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Type_MeetMediaPlay)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <pre>
         *触发器ID
         * </pre>
         *
         * <code>fixed32 triggerid = 1;</code>
         */
        int getTriggerid();

        /**
         * <pre>
         *创建执行该触发器的设备ID
         * </pre>
         *
         * <code>fixed32 createdeviceid = 2;</code>
         */
        int getCreatedeviceid();

        /**
         * <pre>
         *播放的媒体id
         * </pre>
         *
         * <code>fixed32 mediaid = 3;</code>
         */
        int getMediaid();

        /**
         * <pre>
         *播放所用的资源ID
         * </pre>
         *
         * <code>fixed32 res = 4;</code>
         */
        int getRes();

        /**
         * <pre>
         *参见该文件中的triggeruserval定义
         * </pre>
         *
         * <code>fixed32 triggeruserval = 5;</code>
         */
        int getTriggeruserval();
    }
    /**
     * <pre>
     *媒体播放通知
     *callback
     *type:Pb_TYPE_MEET_INTERFACE_MEDIAPLAY
     *method: notify
     * </pre>
     *
     * Protobuf type {@code pbui_Type_MeetMediaPlay}
     */
    public  static final class pbui_Type_MeetMediaPlay extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Type_MeetMediaPlay, pbui_Type_MeetMediaPlay.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Type_MeetMediaPlay)
            pbui_Type_MeetMediaPlayOrBuilder {
        private pbui_Type_MeetMediaPlay() {
        }
        public static final int TRIGGERID_FIELD_NUMBER = 1;
        private int triggerid_;
        /**
         * <pre>
         *触发器ID
         * </pre>
         *
         * <code>fixed32 triggerid = 1;</code>
         */
        public int getTriggerid() {
            return triggerid_;
        }
        /**
         * <pre>
         *触发器ID
         * </pre>
         *
         * <code>fixed32 triggerid = 1;</code>
         */
        private void setTriggerid(int value) {

            triggerid_ = value;
        }
        /**
         * <pre>
         *触发器ID
         * </pre>
         *
         * <code>fixed32 triggerid = 1;</code>
         */
        private void clearTriggerid() {

            triggerid_ = 0;
        }

        public static final int CREATEDEVICEID_FIELD_NUMBER = 2;
        private int createdeviceid_;
        /**
         * <pre>
         *创建执行该触发器的设备ID
         * </pre>
         *
         * <code>fixed32 createdeviceid = 2;</code>
         */
        public int getCreatedeviceid() {
            return createdeviceid_;
        }
        /**
         * <pre>
         *创建执行该触发器的设备ID
         * </pre>
         *
         * <code>fixed32 createdeviceid = 2;</code>
         */
        private void setCreatedeviceid(int value) {

            createdeviceid_ = value;
        }
        /**
         * <pre>
         *创建执行该触发器的设备ID
         * </pre>
         *
         * <code>fixed32 createdeviceid = 2;</code>
         */
        private void clearCreatedeviceid() {

            createdeviceid_ = 0;
        }

        public static final int MEDIAID_FIELD_NUMBER = 3;
        private int mediaid_;
        /**
         * <pre>
         *播放的媒体id
         * </pre>
         *
         * <code>fixed32 mediaid = 3;</code>
         */
        public int getMediaid() {
            return mediaid_;
        }
        /**
         * <pre>
         *播放的媒体id
         * </pre>
         *
         * <code>fixed32 mediaid = 3;</code>
         */
        private void setMediaid(int value) {

            mediaid_ = value;
        }
        /**
         * <pre>
         *播放的媒体id
         * </pre>
         *
         * <code>fixed32 mediaid = 3;</code>
         */
        private void clearMediaid() {

            mediaid_ = 0;
        }

        public static final int RES_FIELD_NUMBER = 4;
        private int res_;
        /**
         * <pre>
         *播放所用的资源ID
         * </pre>
         *
         * <code>fixed32 res = 4;</code>
         */
        public int getRes() {
            return res_;
        }
        /**
         * <pre>
         *播放所用的资源ID
         * </pre>
         *
         * <code>fixed32 res = 4;</code>
         */
        private void setRes(int value) {

            res_ = value;
        }
        /**
         * <pre>
         *播放所用的资源ID
         * </pre>
         *
         * <code>fixed32 res = 4;</code>
         */
        private void clearRes() {

            res_ = 0;
        }

        public static final int TRIGGERUSERVAL_FIELD_NUMBER = 5;
        private int triggeruserval_;
        /**
         * <pre>
         *参见该文件中的triggeruserval定义
         * </pre>
         *
         * <code>fixed32 triggeruserval = 5;</code>
         */
        public int getTriggeruserval() {
            return triggeruserval_;
        }
        /**
         * <pre>
         *参见该文件中的triggeruserval定义
         * </pre>
         *
         * <code>fixed32 triggeruserval = 5;</code>
         */
        private void setTriggeruserval(int value) {

            triggeruserval_ = value;
        }
        /**
         * <pre>
         *参见该文件中的triggeruserval定义
         * </pre>
         *
         * <code>fixed32 triggeruserval = 5;</code>
         */
        private void clearTriggeruserval() {

            triggeruserval_ = 0;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (triggerid_ != 0) {
                output.writeFixed32(1, triggerid_);
            }
            if (createdeviceid_ != 0) {
                output.writeFixed32(2, createdeviceid_);
            }
            if (mediaid_ != 0) {
                output.writeFixed32(3, mediaid_);
            }
            if (res_ != 0) {
                output.writeFixed32(4, res_);
            }
            if (triggeruserval_ != 0) {
                output.writeFixed32(5, triggeruserval_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (triggerid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(1, triggerid_);
            }
            if (createdeviceid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(2, createdeviceid_);
            }
            if (mediaid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(3, mediaid_);
            }
            if (res_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(4, res_);
            }
            if (triggeruserval_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(5, triggeruserval_);
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetMediaPlay parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetMediaPlay parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetMediaPlay parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetMediaPlay parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetMediaPlay parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetMediaPlay parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetMediaPlay parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetMediaPlay parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetMediaPlay parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetMediaPlay parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetMediaPlay parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetMediaPlay parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetMediaPlay prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *媒体播放通知
         *callback
         *type:Pb_TYPE_MEET_INTERFACE_MEDIAPLAY
         *method: notify
         * </pre>
         *
         * Protobuf type {@code pbui_Type_MeetMediaPlay}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetMediaPlay, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Type_MeetMediaPlay)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetMediaPlayOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetMediaPlay.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <pre>
             *触发器ID
             * </pre>
             *
             * <code>fixed32 triggerid = 1;</code>
             */
            public int getTriggerid() {
                return instance.getTriggerid();
            }
            /**
             * <pre>
             *触发器ID
             * </pre>
             *
             * <code>fixed32 triggerid = 1;</code>
             */
            public Builder setTriggerid(int value) {
                copyOnWrite();
                instance.setTriggerid(value);
                return this;
            }
            /**
             * <pre>
             *触发器ID
             * </pre>
             *
             * <code>fixed32 triggerid = 1;</code>
             */
            public Builder clearTriggerid() {
                copyOnWrite();
                instance.clearTriggerid();
                return this;
            }

            /**
             * <pre>
             *创建执行该触发器的设备ID
             * </pre>
             *
             * <code>fixed32 createdeviceid = 2;</code>
             */
            public int getCreatedeviceid() {
                return instance.getCreatedeviceid();
            }
            /**
             * <pre>
             *创建执行该触发器的设备ID
             * </pre>
             *
             * <code>fixed32 createdeviceid = 2;</code>
             */
            public Builder setCreatedeviceid(int value) {
                copyOnWrite();
                instance.setCreatedeviceid(value);
                return this;
            }
            /**
             * <pre>
             *创建执行该触发器的设备ID
             * </pre>
             *
             * <code>fixed32 createdeviceid = 2;</code>
             */
            public Builder clearCreatedeviceid() {
                copyOnWrite();
                instance.clearCreatedeviceid();
                return this;
            }

            /**
             * <pre>
             *播放的媒体id
             * </pre>
             *
             * <code>fixed32 mediaid = 3;</code>
             */
            public int getMediaid() {
                return instance.getMediaid();
            }
            /**
             * <pre>
             *播放的媒体id
             * </pre>
             *
             * <code>fixed32 mediaid = 3;</code>
             */
            public Builder setMediaid(int value) {
                copyOnWrite();
                instance.setMediaid(value);
                return this;
            }
            /**
             * <pre>
             *播放的媒体id
             * </pre>
             *
             * <code>fixed32 mediaid = 3;</code>
             */
            public Builder clearMediaid() {
                copyOnWrite();
                instance.clearMediaid();
                return this;
            }

            /**
             * <pre>
             *播放所用的资源ID
             * </pre>
             *
             * <code>fixed32 res = 4;</code>
             */
            public int getRes() {
                return instance.getRes();
            }
            /**
             * <pre>
             *播放所用的资源ID
             * </pre>
             *
             * <code>fixed32 res = 4;</code>
             */
            public Builder setRes(int value) {
                copyOnWrite();
                instance.setRes(value);
                return this;
            }
            /**
             * <pre>
             *播放所用的资源ID
             * </pre>
             *
             * <code>fixed32 res = 4;</code>
             */
            public Builder clearRes() {
                copyOnWrite();
                instance.clearRes();
                return this;
            }

            /**
             * <pre>
             *参见该文件中的triggeruserval定义
             * </pre>
             *
             * <code>fixed32 triggeruserval = 5;</code>
             */
            public int getTriggeruserval() {
                return instance.getTriggeruserval();
            }
            /**
             * <pre>
             *参见该文件中的triggeruserval定义
             * </pre>
             *
             * <code>fixed32 triggeruserval = 5;</code>
             */
            public Builder setTriggeruserval(int value) {
                copyOnWrite();
                instance.setTriggeruserval(value);
                return this;
            }
            /**
             * <pre>
             *参见该文件中的triggeruserval定义
             * </pre>
             *
             * <code>fixed32 triggeruserval = 5;</code>
             */
            public Builder clearTriggeruserval() {
                copyOnWrite();
                instance.clearTriggeruserval();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Type_MeetMediaPlay)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetMediaPlay();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetMediaPlay other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetMediaPlay) arg1;
                    triggerid_ = visitor.visitInt(triggerid_ != 0, triggerid_,
                            other.triggerid_ != 0, other.triggerid_);
                    createdeviceid_ = visitor.visitInt(createdeviceid_ != 0, createdeviceid_,
                            other.createdeviceid_ != 0, other.createdeviceid_);
                    mediaid_ = visitor.visitInt(mediaid_ != 0, mediaid_,
                            other.mediaid_ != 0, other.mediaid_);
                    res_ = visitor.visitInt(res_ != 0, res_,
                            other.res_ != 0, other.res_);
                    triggeruserval_ = visitor.visitInt(triggeruserval_ != 0, triggeruserval_,
                            other.triggeruserval_ != 0, other.triggeruserval_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 13: {

                                    triggerid_ = input.readFixed32();
                                    break;
                                }
                                case 21: {

                                    createdeviceid_ = input.readFixed32();
                                    break;
                                }
                                case 29: {

                                    mediaid_ = input.readFixed32();
                                    break;
                                }
                                case 37: {

                                    res_ = input.readFixed32();
                                    break;
                                }
                                case 45: {

                                    triggeruserval_ = input.readFixed32();
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetMediaPlay.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Type_MeetMediaPlay)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetMediaPlay DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Type_MeetMediaPlay();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetMediaPlay getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Type_MeetMediaPlay> PARSER;

        public static com.google.protobuf.Parser<pbui_Type_MeetMediaPlay> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Type_MeetDoMediaPlayOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Type_MeetDoMediaPlay)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <pre>
         *播放标志 参见 Pb_MeetPlayFlag
         * </pre>
         *
         * <code>fixed32 playflag = 1;</code>
         */
        int getPlayflag();

        /**
         * <pre>
         *指定开始播放的百分比位置
         * </pre>
         *
         * <code>fixed32 pos = 2;</code>
         */
        int getPos();

        /**
         * <pre>
         *媒体ID
         * </pre>
         *
         * <code>fixed32 mediaid = 3;</code>
         */
        int getMediaid();

        /**
         * <pre>
         *触发器标志
         * </pre>
         *
         * <code>fixed32 triggeruserval = 4;</code>
         */
        int getTriggeruserval();

        /**
         * <pre>
         *有效资源个数,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 res = 5;</code>
         */
        java.util.List<java.lang.Integer> getResList();
        /**
         * <pre>
         *有效资源个数,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 res = 5;</code>
         */
        int getResCount();
        /**
         * <pre>
         *有效资源个数,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 res = 5;</code>
         */
        int getRes(int index);

        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 6;</code>
         */
        java.util.List<java.lang.Integer> getDeviceidList();
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 6;</code>
         */
        int getDeviceidCount();
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 6;</code>
         */
        int getDeviceid(int index);
    }
    /**
     * <pre>
     *媒体播放操作
     *call
     *type:Pb_TYPE_MEET_INTERFACE_MEDIAPLAY
     *method: start
     * </pre>
     *
     * Protobuf type {@code pbui_Type_MeetDoMediaPlay}
     */
    public  static final class pbui_Type_MeetDoMediaPlay extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Type_MeetDoMediaPlay, pbui_Type_MeetDoMediaPlay.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Type_MeetDoMediaPlay)
            pbui_Type_MeetDoMediaPlayOrBuilder {
        private pbui_Type_MeetDoMediaPlay() {
            res_ = emptyIntList();
            deviceid_ = emptyIntList();
        }
        private int bitField0_;
        public static final int PLAYFLAG_FIELD_NUMBER = 1;
        private int playflag_;
        /**
         * <pre>
         *播放标志 参见 Pb_MeetPlayFlag
         * </pre>
         *
         * <code>fixed32 playflag = 1;</code>
         */
        public int getPlayflag() {
            return playflag_;
        }
        /**
         * <pre>
         *播放标志 参见 Pb_MeetPlayFlag
         * </pre>
         *
         * <code>fixed32 playflag = 1;</code>
         */
        private void setPlayflag(int value) {

            playflag_ = value;
        }
        /**
         * <pre>
         *播放标志 参见 Pb_MeetPlayFlag
         * </pre>
         *
         * <code>fixed32 playflag = 1;</code>
         */
        private void clearPlayflag() {

            playflag_ = 0;
        }

        public static final int POS_FIELD_NUMBER = 2;
        private int pos_;
        /**
         * <pre>
         *指定开始播放的百分比位置
         * </pre>
         *
         * <code>fixed32 pos = 2;</code>
         */
        public int getPos() {
            return pos_;
        }
        /**
         * <pre>
         *指定开始播放的百分比位置
         * </pre>
         *
         * <code>fixed32 pos = 2;</code>
         */
        private void setPos(int value) {

            pos_ = value;
        }
        /**
         * <pre>
         *指定开始播放的百分比位置
         * </pre>
         *
         * <code>fixed32 pos = 2;</code>
         */
        private void clearPos() {

            pos_ = 0;
        }

        public static final int MEDIAID_FIELD_NUMBER = 3;
        private int mediaid_;
        /**
         * <pre>
         *媒体ID
         * </pre>
         *
         * <code>fixed32 mediaid = 3;</code>
         */
        public int getMediaid() {
            return mediaid_;
        }
        /**
         * <pre>
         *媒体ID
         * </pre>
         *
         * <code>fixed32 mediaid = 3;</code>
         */
        private void setMediaid(int value) {

            mediaid_ = value;
        }
        /**
         * <pre>
         *媒体ID
         * </pre>
         *
         * <code>fixed32 mediaid = 3;</code>
         */
        private void clearMediaid() {

            mediaid_ = 0;
        }

        public static final int TRIGGERUSERVAL_FIELD_NUMBER = 4;
        private int triggeruserval_;
        /**
         * <pre>
         *触发器标志
         * </pre>
         *
         * <code>fixed32 triggeruserval = 4;</code>
         */
        public int getTriggeruserval() {
            return triggeruserval_;
        }
        /**
         * <pre>
         *触发器标志
         * </pre>
         *
         * <code>fixed32 triggeruserval = 4;</code>
         */
        private void setTriggeruserval(int value) {

            triggeruserval_ = value;
        }
        /**
         * <pre>
         *触发器标志
         * </pre>
         *
         * <code>fixed32 triggeruserval = 4;</code>
         */
        private void clearTriggeruserval() {

            triggeruserval_ = 0;
        }

        public static final int RES_FIELD_NUMBER = 5;
        private com.google.protobuf.Internal.IntList res_;
        /**
         * <pre>
         *有效资源个数,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 res = 5;</code>
         */
        public java.util.List<java.lang.Integer>
        getResList() {
            return res_;
        }
        /**
         * <pre>
         *有效资源个数,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 res = 5;</code>
         */
        public int getResCount() {
            return res_.size();
        }
        /**
         * <pre>
         *有效资源个数,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 res = 5;</code>
         */
        public int getRes(int index) {
            return res_.getInt(index);
        }
        private void ensureResIsMutable() {
            if (!res_.isModifiable()) {
                res_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(res_);
            }
        }
        /**
         * <pre>
         *有效资源个数,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 res = 5;</code>
         */
        private void setRes(
                int index, int value) {
            ensureResIsMutable();
            res_.setInt(index, value);
        }
        /**
         * <pre>
         *有效资源个数,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 res = 5;</code>
         */
        private void addRes(int value) {
            ensureResIsMutable();
            res_.addInt(value);
        }
        /**
         * <pre>
         *有效资源个数,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 res = 5;</code>
         */
        private void addAllRes(
                java.lang.Iterable<? extends java.lang.Integer> values) {
            ensureResIsMutable();
            com.google.protobuf.AbstractMessageLite.addAll(
                    values, res_);
        }
        /**
         * <pre>
         *有效资源个数,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 res = 5;</code>
         */
        private void clearRes() {
            res_ = emptyIntList();
        }

        public static final int DEVICEID_FIELD_NUMBER = 6;
        private com.google.protobuf.Internal.IntList deviceid_;
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 6;</code>
         */
        public java.util.List<java.lang.Integer>
        getDeviceidList() {
            return deviceid_;
        }
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 6;</code>
         */
        public int getDeviceidCount() {
            return deviceid_.size();
        }
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 6;</code>
         */
        public int getDeviceid(int index) {
            return deviceid_.getInt(index);
        }
        private void ensureDeviceidIsMutable() {
            if (!deviceid_.isModifiable()) {
                deviceid_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(deviceid_);
            }
        }
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 6;</code>
         */
        private void setDeviceid(
                int index, int value) {
            ensureDeviceidIsMutable();
            deviceid_.setInt(index, value);
        }
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 6;</code>
         */
        private void addDeviceid(int value) {
            ensureDeviceidIsMutable();
            deviceid_.addInt(value);
        }
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 6;</code>
         */
        private void addAllDeviceid(
                java.lang.Iterable<? extends java.lang.Integer> values) {
            ensureDeviceidIsMutable();
            com.google.protobuf.AbstractMessageLite.addAll(
                    values, deviceid_);
        }
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 6;</code>
         */
        private void clearDeviceid() {
            deviceid_ = emptyIntList();
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (playflag_ != 0) {
                output.writeFixed32(1, playflag_);
            }
            if (pos_ != 0) {
                output.writeFixed32(2, pos_);
            }
            if (mediaid_ != 0) {
                output.writeFixed32(3, mediaid_);
            }
            if (triggeruserval_ != 0) {
                output.writeFixed32(4, triggeruserval_);
            }
            for (int i = 0; i < res_.size(); i++) {
                output.writeFixed32(5, res_.getInt(i));
            }
            for (int i = 0; i < deviceid_.size(); i++) {
                output.writeFixed32(6, deviceid_.getInt(i));
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (playflag_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(1, playflag_);
            }
            if (pos_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(2, pos_);
            }
            if (mediaid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(3, mediaid_);
            }
            if (triggeruserval_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(4, triggeruserval_);
            }
            {
                int dataSize = 0;
                dataSize = 4 * getResList().size();
                size += dataSize;
                size += 1 * getResList().size();
            }
            {
                int dataSize = 0;
                dataSize = 4 * getDeviceidList().size();
                size += dataSize;
                size += 1 * getDeviceidList().size();
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoMediaPlay parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoMediaPlay parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoMediaPlay parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoMediaPlay parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoMediaPlay parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoMediaPlay parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoMediaPlay parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoMediaPlay parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoMediaPlay parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoMediaPlay parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoMediaPlay parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoMediaPlay parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoMediaPlay prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *媒体播放操作
         *call
         *type:Pb_TYPE_MEET_INTERFACE_MEDIAPLAY
         *method: start
         * </pre>
         *
         * Protobuf type {@code pbui_Type_MeetDoMediaPlay}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoMediaPlay, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Type_MeetDoMediaPlay)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoMediaPlayOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoMediaPlay.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <pre>
             *播放标志 参见 Pb_MeetPlayFlag
             * </pre>
             *
             * <code>fixed32 playflag = 1;</code>
             */
            public int getPlayflag() {
                return instance.getPlayflag();
            }
            /**
             * <pre>
             *播放标志 参见 Pb_MeetPlayFlag
             * </pre>
             *
             * <code>fixed32 playflag = 1;</code>
             */
            public Builder setPlayflag(int value) {
                copyOnWrite();
                instance.setPlayflag(value);
                return this;
            }
            /**
             * <pre>
             *播放标志 参见 Pb_MeetPlayFlag
             * </pre>
             *
             * <code>fixed32 playflag = 1;</code>
             */
            public Builder clearPlayflag() {
                copyOnWrite();
                instance.clearPlayflag();
                return this;
            }

            /**
             * <pre>
             *指定开始播放的百分比位置
             * </pre>
             *
             * <code>fixed32 pos = 2;</code>
             */
            public int getPos() {
                return instance.getPos();
            }
            /**
             * <pre>
             *指定开始播放的百分比位置
             * </pre>
             *
             * <code>fixed32 pos = 2;</code>
             */
            public Builder setPos(int value) {
                copyOnWrite();
                instance.setPos(value);
                return this;
            }
            /**
             * <pre>
             *指定开始播放的百分比位置
             * </pre>
             *
             * <code>fixed32 pos = 2;</code>
             */
            public Builder clearPos() {
                copyOnWrite();
                instance.clearPos();
                return this;
            }

            /**
             * <pre>
             *媒体ID
             * </pre>
             *
             * <code>fixed32 mediaid = 3;</code>
             */
            public int getMediaid() {
                return instance.getMediaid();
            }
            /**
             * <pre>
             *媒体ID
             * </pre>
             *
             * <code>fixed32 mediaid = 3;</code>
             */
            public Builder setMediaid(int value) {
                copyOnWrite();
                instance.setMediaid(value);
                return this;
            }
            /**
             * <pre>
             *媒体ID
             * </pre>
             *
             * <code>fixed32 mediaid = 3;</code>
             */
            public Builder clearMediaid() {
                copyOnWrite();
                instance.clearMediaid();
                return this;
            }

            /**
             * <pre>
             *触发器标志
             * </pre>
             *
             * <code>fixed32 triggeruserval = 4;</code>
             */
            public int getTriggeruserval() {
                return instance.getTriggeruserval();
            }
            /**
             * <pre>
             *触发器标志
             * </pre>
             *
             * <code>fixed32 triggeruserval = 4;</code>
             */
            public Builder setTriggeruserval(int value) {
                copyOnWrite();
                instance.setTriggeruserval(value);
                return this;
            }
            /**
             * <pre>
             *触发器标志
             * </pre>
             *
             * <code>fixed32 triggeruserval = 4;</code>
             */
            public Builder clearTriggeruserval() {
                copyOnWrite();
                instance.clearTriggeruserval();
                return this;
            }

            /**
             * <pre>
             *有效资源个数,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 res = 5;</code>
             */
            public java.util.List<java.lang.Integer>
            getResList() {
                return java.util.Collections.unmodifiableList(
                        instance.getResList());
            }
            /**
             * <pre>
             *有效资源个数,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 res = 5;</code>
             */
            public int getResCount() {
                return instance.getResCount();
            }
            /**
             * <pre>
             *有效资源个数,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 res = 5;</code>
             */
            public int getRes(int index) {
                return instance.getRes(index);
            }
            /**
             * <pre>
             *有效资源个数,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 res = 5;</code>
             */
            public Builder setRes(
                    int index, int value) {
                copyOnWrite();
                instance.setRes(index, value);
                return this;
            }
            /**
             * <pre>
             *有效资源个数,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 res = 5;</code>
             */
            public Builder addRes(int value) {
                copyOnWrite();
                instance.addRes(value);
                return this;
            }
            /**
             * <pre>
             *有效资源个数,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 res = 5;</code>
             */
            public Builder addAllRes(
                    java.lang.Iterable<? extends java.lang.Integer> values) {
                copyOnWrite();
                instance.addAllRes(values);
                return this;
            }
            /**
             * <pre>
             *有效资源个数,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 res = 5;</code>
             */
            public Builder clearRes() {
                copyOnWrite();
                instance.clearRes();
                return this;
            }

            /**
             * <pre>
             *通知的目标设备,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 deviceid = 6;</code>
             */
            public java.util.List<java.lang.Integer>
            getDeviceidList() {
                return java.util.Collections.unmodifiableList(
                        instance.getDeviceidList());
            }
            /**
             * <pre>
             *通知的目标设备,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 deviceid = 6;</code>
             */
            public int getDeviceidCount() {
                return instance.getDeviceidCount();
            }
            /**
             * <pre>
             *通知的目标设备,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 deviceid = 6;</code>
             */
            public int getDeviceid(int index) {
                return instance.getDeviceid(index);
            }
            /**
             * <pre>
             *通知的目标设备,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 deviceid = 6;</code>
             */
            public Builder setDeviceid(
                    int index, int value) {
                copyOnWrite();
                instance.setDeviceid(index, value);
                return this;
            }
            /**
             * <pre>
             *通知的目标设备,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 deviceid = 6;</code>
             */
            public Builder addDeviceid(int value) {
                copyOnWrite();
                instance.addDeviceid(value);
                return this;
            }
            /**
             * <pre>
             *通知的目标设备,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 deviceid = 6;</code>
             */
            public Builder addAllDeviceid(
                    java.lang.Iterable<? extends java.lang.Integer> values) {
                copyOnWrite();
                instance.addAllDeviceid(values);
                return this;
            }
            /**
             * <pre>
             *通知的目标设备,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 deviceid = 6;</code>
             */
            public Builder clearDeviceid() {
                copyOnWrite();
                instance.clearDeviceid();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Type_MeetDoMediaPlay)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoMediaPlay();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    res_.makeImmutable();
                    deviceid_.makeImmutable();
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoMediaPlay other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoMediaPlay) arg1;
                    playflag_ = visitor.visitInt(playflag_ != 0, playflag_,
                            other.playflag_ != 0, other.playflag_);
                    pos_ = visitor.visitInt(pos_ != 0, pos_,
                            other.pos_ != 0, other.pos_);
                    mediaid_ = visitor.visitInt(mediaid_ != 0, mediaid_,
                            other.mediaid_ != 0, other.mediaid_);
                    triggeruserval_ = visitor.visitInt(triggeruserval_ != 0, triggeruserval_,
                            other.triggeruserval_ != 0, other.triggeruserval_);
                    res_= visitor.visitIntList(res_, other.res_);
                    deviceid_= visitor.visitIntList(deviceid_, other.deviceid_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                        bitField0_ |= other.bitField0_;
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 13: {

                                    playflag_ = input.readFixed32();
                                    break;
                                }
                                case 21: {

                                    pos_ = input.readFixed32();
                                    break;
                                }
                                case 29: {

                                    mediaid_ = input.readFixed32();
                                    break;
                                }
                                case 37: {

                                    triggeruserval_ = input.readFixed32();
                                    break;
                                }
                                case 45: {
                                    if (!res_.isModifiable()) {
                                        res_ =
                                                com.google.protobuf.GeneratedMessageLite.mutableCopy(res_);
                                    }
                                    res_.addInt(input.readFixed32());
                                    break;
                                }
                                case 42: {
                                    int length = input.readRawVarint32();
                                    int limit = input.pushLimit(length);
                                    if (!res_.isModifiable() && input.getBytesUntilLimit() > 0) {
                                        final int currentSize = res_.size();
                                        res_ = res_.mutableCopyWithCapacity(
                                                currentSize + (length/4));
                                    }
                                    while (input.getBytesUntilLimit() > 0) {
                                        res_.addInt(input.readFixed32());
                                    }
                                    input.popLimit(limit);
                                    break;
                                }
                                case 53: {
                                    if (!deviceid_.isModifiable()) {
                                        deviceid_ =
                                                com.google.protobuf.GeneratedMessageLite.mutableCopy(deviceid_);
                                    }
                                    deviceid_.addInt(input.readFixed32());
                                    break;
                                }
                                case 50: {
                                    int length = input.readRawVarint32();
                                    int limit = input.pushLimit(length);
                                    if (!deviceid_.isModifiable() && input.getBytesUntilLimit() > 0) {
                                        final int currentSize = deviceid_.size();
                                        deviceid_ = deviceid_.mutableCopyWithCapacity(
                                                currentSize + (length/4));
                                    }
                                    while (input.getBytesUntilLimit() > 0) {
                                        deviceid_.addInt(input.readFixed32());
                                    }
                                    input.popLimit(limit);
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoMediaPlay.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Type_MeetDoMediaPlay)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoMediaPlay DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Type_MeetDoMediaPlay();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoMediaPlay getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Type_MeetDoMediaPlay> PARSER;

        public static com.google.protobuf.Parser<pbui_Type_MeetDoMediaPlay> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Type_MeetDoSetPlayPosOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Type_MeetDoSetPlayPos)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <pre>
         *资源索引号
         * </pre>
         *
         * <code>fixed32 resindex = 1;</code>
         */
        int getResindex();

        /**
         * <pre>
         *指定开始播放的百分比位置
         * </pre>
         *
         * <code>fixed32 pos = 2;</code>
         */
        int getPos();

        /**
         * <pre>
         *触发器标志
         * </pre>
         *
         * <code>fixed32 triggeruserval = 3;</code>
         */
        int getTriggeruserval();

        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 4;</code>
         */
        java.util.List<java.lang.Integer> getDeviceidList();
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 4;</code>
         */
        int getDeviceidCount();
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 4;</code>
         */
        int getDeviceid(int index);
    }
    /**
     * <pre>
     *设置播放位置
     *call
     *type:Pb_TYPE_MEET_INTERFACE_MEDIAPLAY
     *method: move
     * </pre>
     *
     * Protobuf type {@code pbui_Type_MeetDoSetPlayPos}
     */
    public  static final class pbui_Type_MeetDoSetPlayPos extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Type_MeetDoSetPlayPos, pbui_Type_MeetDoSetPlayPos.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Type_MeetDoSetPlayPos)
            pbui_Type_MeetDoSetPlayPosOrBuilder {
        private pbui_Type_MeetDoSetPlayPos() {
            deviceid_ = emptyIntList();
        }
        private int bitField0_;
        public static final int RESINDEX_FIELD_NUMBER = 1;
        private int resindex_;
        /**
         * <pre>
         *资源索引号
         * </pre>
         *
         * <code>fixed32 resindex = 1;</code>
         */
        public int getResindex() {
            return resindex_;
        }
        /**
         * <pre>
         *资源索引号
         * </pre>
         *
         * <code>fixed32 resindex = 1;</code>
         */
        private void setResindex(int value) {

            resindex_ = value;
        }
        /**
         * <pre>
         *资源索引号
         * </pre>
         *
         * <code>fixed32 resindex = 1;</code>
         */
        private void clearResindex() {

            resindex_ = 0;
        }

        public static final int POS_FIELD_NUMBER = 2;
        private int pos_;
        /**
         * <pre>
         *指定开始播放的百分比位置
         * </pre>
         *
         * <code>fixed32 pos = 2;</code>
         */
        public int getPos() {
            return pos_;
        }
        /**
         * <pre>
         *指定开始播放的百分比位置
         * </pre>
         *
         * <code>fixed32 pos = 2;</code>
         */
        private void setPos(int value) {

            pos_ = value;
        }
        /**
         * <pre>
         *指定开始播放的百分比位置
         * </pre>
         *
         * <code>fixed32 pos = 2;</code>
         */
        private void clearPos() {

            pos_ = 0;
        }

        public static final int TRIGGERUSERVAL_FIELD_NUMBER = 3;
        private int triggeruserval_;
        /**
         * <pre>
         *触发器标志
         * </pre>
         *
         * <code>fixed32 triggeruserval = 3;</code>
         */
        public int getTriggeruserval() {
            return triggeruserval_;
        }
        /**
         * <pre>
         *触发器标志
         * </pre>
         *
         * <code>fixed32 triggeruserval = 3;</code>
         */
        private void setTriggeruserval(int value) {

            triggeruserval_ = value;
        }
        /**
         * <pre>
         *触发器标志
         * </pre>
         *
         * <code>fixed32 triggeruserval = 3;</code>
         */
        private void clearTriggeruserval() {

            triggeruserval_ = 0;
        }

        public static final int DEVICEID_FIELD_NUMBER = 4;
        private com.google.protobuf.Internal.IntList deviceid_;
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 4;</code>
         */
        public java.util.List<java.lang.Integer>
        getDeviceidList() {
            return deviceid_;
        }
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 4;</code>
         */
        public int getDeviceidCount() {
            return deviceid_.size();
        }
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 4;</code>
         */
        public int getDeviceid(int index) {
            return deviceid_.getInt(index);
        }
        private void ensureDeviceidIsMutable() {
            if (!deviceid_.isModifiable()) {
                deviceid_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(deviceid_);
            }
        }
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 4;</code>
         */
        private void setDeviceid(
                int index, int value) {
            ensureDeviceidIsMutable();
            deviceid_.setInt(index, value);
        }
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 4;</code>
         */
        private void addDeviceid(int value) {
            ensureDeviceidIsMutable();
            deviceid_.addInt(value);
        }
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 4;</code>
         */
        private void addAllDeviceid(
                java.lang.Iterable<? extends java.lang.Integer> values) {
            ensureDeviceidIsMutable();
            com.google.protobuf.AbstractMessageLite.addAll(
                    values, deviceid_);
        }
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 4;</code>
         */
        private void clearDeviceid() {
            deviceid_ = emptyIntList();
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (resindex_ != 0) {
                output.writeFixed32(1, resindex_);
            }
            if (pos_ != 0) {
                output.writeFixed32(2, pos_);
            }
            if (triggeruserval_ != 0) {
                output.writeFixed32(3, triggeruserval_);
            }
            for (int i = 0; i < deviceid_.size(); i++) {
                output.writeFixed32(4, deviceid_.getInt(i));
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (resindex_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(1, resindex_);
            }
            if (pos_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(2, pos_);
            }
            if (triggeruserval_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(3, triggeruserval_);
            }
            {
                int dataSize = 0;
                dataSize = 4 * getDeviceidList().size();
                size += dataSize;
                size += 1 * getDeviceidList().size();
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoSetPlayPos parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoSetPlayPos parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoSetPlayPos parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoSetPlayPos parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoSetPlayPos parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoSetPlayPos parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoSetPlayPos parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoSetPlayPos parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoSetPlayPos parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoSetPlayPos parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoSetPlayPos parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoSetPlayPos parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoSetPlayPos prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *设置播放位置
         *call
         *type:Pb_TYPE_MEET_INTERFACE_MEDIAPLAY
         *method: move
         * </pre>
         *
         * Protobuf type {@code pbui_Type_MeetDoSetPlayPos}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoSetPlayPos, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Type_MeetDoSetPlayPos)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoSetPlayPosOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoSetPlayPos.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <pre>
             *资源索引号
             * </pre>
             *
             * <code>fixed32 resindex = 1;</code>
             */
            public int getResindex() {
                return instance.getResindex();
            }
            /**
             * <pre>
             *资源索引号
             * </pre>
             *
             * <code>fixed32 resindex = 1;</code>
             */
            public Builder setResindex(int value) {
                copyOnWrite();
                instance.setResindex(value);
                return this;
            }
            /**
             * <pre>
             *资源索引号
             * </pre>
             *
             * <code>fixed32 resindex = 1;</code>
             */
            public Builder clearResindex() {
                copyOnWrite();
                instance.clearResindex();
                return this;
            }

            /**
             * <pre>
             *指定开始播放的百分比位置
             * </pre>
             *
             * <code>fixed32 pos = 2;</code>
             */
            public int getPos() {
                return instance.getPos();
            }
            /**
             * <pre>
             *指定开始播放的百分比位置
             * </pre>
             *
             * <code>fixed32 pos = 2;</code>
             */
            public Builder setPos(int value) {
                copyOnWrite();
                instance.setPos(value);
                return this;
            }
            /**
             * <pre>
             *指定开始播放的百分比位置
             * </pre>
             *
             * <code>fixed32 pos = 2;</code>
             */
            public Builder clearPos() {
                copyOnWrite();
                instance.clearPos();
                return this;
            }

            /**
             * <pre>
             *触发器标志
             * </pre>
             *
             * <code>fixed32 triggeruserval = 3;</code>
             */
            public int getTriggeruserval() {
                return instance.getTriggeruserval();
            }
            /**
             * <pre>
             *触发器标志
             * </pre>
             *
             * <code>fixed32 triggeruserval = 3;</code>
             */
            public Builder setTriggeruserval(int value) {
                copyOnWrite();
                instance.setTriggeruserval(value);
                return this;
            }
            /**
             * <pre>
             *触发器标志
             * </pre>
             *
             * <code>fixed32 triggeruserval = 3;</code>
             */
            public Builder clearTriggeruserval() {
                copyOnWrite();
                instance.clearTriggeruserval();
                return this;
            }

            /**
             * <pre>
             *通知的目标设备,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 deviceid = 4;</code>
             */
            public java.util.List<java.lang.Integer>
            getDeviceidList() {
                return java.util.Collections.unmodifiableList(
                        instance.getDeviceidList());
            }
            /**
             * <pre>
             *通知的目标设备,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 deviceid = 4;</code>
             */
            public int getDeviceidCount() {
                return instance.getDeviceidCount();
            }
            /**
             * <pre>
             *通知的目标设备,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 deviceid = 4;</code>
             */
            public int getDeviceid(int index) {
                return instance.getDeviceid(index);
            }
            /**
             * <pre>
             *通知的目标设备,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 deviceid = 4;</code>
             */
            public Builder setDeviceid(
                    int index, int value) {
                copyOnWrite();
                instance.setDeviceid(index, value);
                return this;
            }
            /**
             * <pre>
             *通知的目标设备,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 deviceid = 4;</code>
             */
            public Builder addDeviceid(int value) {
                copyOnWrite();
                instance.addDeviceid(value);
                return this;
            }
            /**
             * <pre>
             *通知的目标设备,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 deviceid = 4;</code>
             */
            public Builder addAllDeviceid(
                    java.lang.Iterable<? extends java.lang.Integer> values) {
                copyOnWrite();
                instance.addAllDeviceid(values);
                return this;
            }
            /**
             * <pre>
             *通知的目标设备,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 deviceid = 4;</code>
             */
            public Builder clearDeviceid() {
                copyOnWrite();
                instance.clearDeviceid();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Type_MeetDoSetPlayPos)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoSetPlayPos();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    deviceid_.makeImmutable();
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoSetPlayPos other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoSetPlayPos) arg1;
                    resindex_ = visitor.visitInt(resindex_ != 0, resindex_,
                            other.resindex_ != 0, other.resindex_);
                    pos_ = visitor.visitInt(pos_ != 0, pos_,
                            other.pos_ != 0, other.pos_);
                    triggeruserval_ = visitor.visitInt(triggeruserval_ != 0, triggeruserval_,
                            other.triggeruserval_ != 0, other.triggeruserval_);
                    deviceid_= visitor.visitIntList(deviceid_, other.deviceid_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                        bitField0_ |= other.bitField0_;
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 13: {

                                    resindex_ = input.readFixed32();
                                    break;
                                }
                                case 21: {

                                    pos_ = input.readFixed32();
                                    break;
                                }
                                case 29: {

                                    triggeruserval_ = input.readFixed32();
                                    break;
                                }
                                case 37: {
                                    if (!deviceid_.isModifiable()) {
                                        deviceid_ =
                                                com.google.protobuf.GeneratedMessageLite.mutableCopy(deviceid_);
                                    }
                                    deviceid_.addInt(input.readFixed32());
                                    break;
                                }
                                case 34: {
                                    int length = input.readRawVarint32();
                                    int limit = input.pushLimit(length);
                                    if (!deviceid_.isModifiable() && input.getBytesUntilLimit() > 0) {
                                        final int currentSize = deviceid_.size();
                                        deviceid_ = deviceid_.mutableCopyWithCapacity(
                                                currentSize + (length/4));
                                    }
                                    while (input.getBytesUntilLimit() > 0) {
                                        deviceid_.addInt(input.readFixed32());
                                    }
                                    input.popLimit(limit);
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoSetPlayPos.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Type_MeetDoSetPlayPos)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoSetPlayPos DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Type_MeetDoSetPlayPos();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoSetPlayPos getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Type_MeetDoSetPlayPos> PARSER;

        public static com.google.protobuf.Parser<pbui_Type_MeetDoSetPlayPos> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Type_MeetDoPlayControlOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Type_MeetDoPlayControl)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <pre>
         *资源索引号
         * </pre>
         *
         * <code>fixed32 resindex = 1;</code>
         */
        int getResindex();

        /**
         * <pre>
         *触发器标志
         * </pre>
         *
         * <code>fixed32 triggeruserval = 2;</code>
         */
        int getTriggeruserval();

        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 3;</code>
         */
        java.util.List<java.lang.Integer> getDeviceidList();
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 3;</code>
         */
        int getDeviceidCount();
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 3;</code>
         */
        int getDeviceid(int index);
    }
    /**
     * <pre>
     *设置播放暂停 恢复
     *call
     *type:Pb_TYPE_MEET_INTERFACE_MEDIAPLAY
     *method: pause play
     * </pre>
     *
     * Protobuf type {@code pbui_Type_MeetDoPlayControl}
     */
    public  static final class pbui_Type_MeetDoPlayControl extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Type_MeetDoPlayControl, pbui_Type_MeetDoPlayControl.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Type_MeetDoPlayControl)
            pbui_Type_MeetDoPlayControlOrBuilder {
        private pbui_Type_MeetDoPlayControl() {
            deviceid_ = emptyIntList();
        }
        private int bitField0_;
        public static final int RESINDEX_FIELD_NUMBER = 1;
        private int resindex_;
        /**
         * <pre>
         *资源索引号
         * </pre>
         *
         * <code>fixed32 resindex = 1;</code>
         */
        public int getResindex() {
            return resindex_;
        }
        /**
         * <pre>
         *资源索引号
         * </pre>
         *
         * <code>fixed32 resindex = 1;</code>
         */
        private void setResindex(int value) {

            resindex_ = value;
        }
        /**
         * <pre>
         *资源索引号
         * </pre>
         *
         * <code>fixed32 resindex = 1;</code>
         */
        private void clearResindex() {

            resindex_ = 0;
        }

        public static final int TRIGGERUSERVAL_FIELD_NUMBER = 2;
        private int triggeruserval_;
        /**
         * <pre>
         *触发器标志
         * </pre>
         *
         * <code>fixed32 triggeruserval = 2;</code>
         */
        public int getTriggeruserval() {
            return triggeruserval_;
        }
        /**
         * <pre>
         *触发器标志
         * </pre>
         *
         * <code>fixed32 triggeruserval = 2;</code>
         */
        private void setTriggeruserval(int value) {

            triggeruserval_ = value;
        }
        /**
         * <pre>
         *触发器标志
         * </pre>
         *
         * <code>fixed32 triggeruserval = 2;</code>
         */
        private void clearTriggeruserval() {

            triggeruserval_ = 0;
        }

        public static final int DEVICEID_FIELD_NUMBER = 3;
        private com.google.protobuf.Internal.IntList deviceid_;
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 3;</code>
         */
        public java.util.List<java.lang.Integer>
        getDeviceidList() {
            return deviceid_;
        }
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 3;</code>
         */
        public int getDeviceidCount() {
            return deviceid_.size();
        }
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 3;</code>
         */
        public int getDeviceid(int index) {
            return deviceid_.getInt(index);
        }
        private void ensureDeviceidIsMutable() {
            if (!deviceid_.isModifiable()) {
                deviceid_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(deviceid_);
            }
        }
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 3;</code>
         */
        private void setDeviceid(
                int index, int value) {
            ensureDeviceidIsMutable();
            deviceid_.setInt(index, value);
        }
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 3;</code>
         */
        private void addDeviceid(int value) {
            ensureDeviceidIsMutable();
            deviceid_.addInt(value);
        }
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 3;</code>
         */
        private void addAllDeviceid(
                java.lang.Iterable<? extends java.lang.Integer> values) {
            ensureDeviceidIsMutable();
            com.google.protobuf.AbstractMessageLite.addAll(
                    values, deviceid_);
        }
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 3;</code>
         */
        private void clearDeviceid() {
            deviceid_ = emptyIntList();
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (resindex_ != 0) {
                output.writeFixed32(1, resindex_);
            }
            if (triggeruserval_ != 0) {
                output.writeFixed32(2, triggeruserval_);
            }
            for (int i = 0; i < deviceid_.size(); i++) {
                output.writeFixed32(3, deviceid_.getInt(i));
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (resindex_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(1, resindex_);
            }
            if (triggeruserval_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(2, triggeruserval_);
            }
            {
                int dataSize = 0;
                dataSize = 4 * getDeviceidList().size();
                size += dataSize;
                size += 1 * getDeviceidList().size();
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoPlayControl parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoPlayControl parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoPlayControl parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoPlayControl parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoPlayControl parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoPlayControl parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoPlayControl parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoPlayControl parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoPlayControl parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoPlayControl parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoPlayControl parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoPlayControl parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoPlayControl prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *设置播放暂停 恢复
         *call
         *type:Pb_TYPE_MEET_INTERFACE_MEDIAPLAY
         *method: pause play
         * </pre>
         *
         * Protobuf type {@code pbui_Type_MeetDoPlayControl}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoPlayControl, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Type_MeetDoPlayControl)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoPlayControlOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoPlayControl.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <pre>
             *资源索引号
             * </pre>
             *
             * <code>fixed32 resindex = 1;</code>
             */
            public int getResindex() {
                return instance.getResindex();
            }
            /**
             * <pre>
             *资源索引号
             * </pre>
             *
             * <code>fixed32 resindex = 1;</code>
             */
            public Builder setResindex(int value) {
                copyOnWrite();
                instance.setResindex(value);
                return this;
            }
            /**
             * <pre>
             *资源索引号
             * </pre>
             *
             * <code>fixed32 resindex = 1;</code>
             */
            public Builder clearResindex() {
                copyOnWrite();
                instance.clearResindex();
                return this;
            }

            /**
             * <pre>
             *触发器标志
             * </pre>
             *
             * <code>fixed32 triggeruserval = 2;</code>
             */
            public int getTriggeruserval() {
                return instance.getTriggeruserval();
            }
            /**
             * <pre>
             *触发器标志
             * </pre>
             *
             * <code>fixed32 triggeruserval = 2;</code>
             */
            public Builder setTriggeruserval(int value) {
                copyOnWrite();
                instance.setTriggeruserval(value);
                return this;
            }
            /**
             * <pre>
             *触发器标志
             * </pre>
             *
             * <code>fixed32 triggeruserval = 2;</code>
             */
            public Builder clearTriggeruserval() {
                copyOnWrite();
                instance.clearTriggeruserval();
                return this;
            }

            /**
             * <pre>
             *通知的目标设备,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 deviceid = 3;</code>
             */
            public java.util.List<java.lang.Integer>
            getDeviceidList() {
                return java.util.Collections.unmodifiableList(
                        instance.getDeviceidList());
            }
            /**
             * <pre>
             *通知的目标设备,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 deviceid = 3;</code>
             */
            public int getDeviceidCount() {
                return instance.getDeviceidCount();
            }
            /**
             * <pre>
             *通知的目标设备,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 deviceid = 3;</code>
             */
            public int getDeviceid(int index) {
                return instance.getDeviceid(index);
            }
            /**
             * <pre>
             *通知的目标设备,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 deviceid = 3;</code>
             */
            public Builder setDeviceid(
                    int index, int value) {
                copyOnWrite();
                instance.setDeviceid(index, value);
                return this;
            }
            /**
             * <pre>
             *通知的目标设备,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 deviceid = 3;</code>
             */
            public Builder addDeviceid(int value) {
                copyOnWrite();
                instance.addDeviceid(value);
                return this;
            }
            /**
             * <pre>
             *通知的目标设备,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 deviceid = 3;</code>
             */
            public Builder addAllDeviceid(
                    java.lang.Iterable<? extends java.lang.Integer> values) {
                copyOnWrite();
                instance.addAllDeviceid(values);
                return this;
            }
            /**
             * <pre>
             *通知的目标设备,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 deviceid = 3;</code>
             */
            public Builder clearDeviceid() {
                copyOnWrite();
                instance.clearDeviceid();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Type_MeetDoPlayControl)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoPlayControl();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    deviceid_.makeImmutable();
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoPlayControl other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoPlayControl) arg1;
                    resindex_ = visitor.visitInt(resindex_ != 0, resindex_,
                            other.resindex_ != 0, other.resindex_);
                    triggeruserval_ = visitor.visitInt(triggeruserval_ != 0, triggeruserval_,
                            other.triggeruserval_ != 0, other.triggeruserval_);
                    deviceid_= visitor.visitIntList(deviceid_, other.deviceid_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                        bitField0_ |= other.bitField0_;
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 13: {

                                    resindex_ = input.readFixed32();
                                    break;
                                }
                                case 21: {

                                    triggeruserval_ = input.readFixed32();
                                    break;
                                }
                                case 29: {
                                    if (!deviceid_.isModifiable()) {
                                        deviceid_ =
                                                com.google.protobuf.GeneratedMessageLite.mutableCopy(deviceid_);
                                    }
                                    deviceid_.addInt(input.readFixed32());
                                    break;
                                }
                                case 26: {
                                    int length = input.readRawVarint32();
                                    int limit = input.pushLimit(length);
                                    if (!deviceid_.isModifiable() && input.getBytesUntilLimit() > 0) {
                                        final int currentSize = deviceid_.size();
                                        deviceid_ = deviceid_.mutableCopyWithCapacity(
                                                currentSize + (length/4));
                                    }
                                    while (input.getBytesUntilLimit() > 0) {
                                        deviceid_.addInt(input.readFixed32());
                                    }
                                    input.popLimit(limit);
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoPlayControl.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Type_MeetDoPlayControl)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoPlayControl DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Type_MeetDoPlayControl();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoPlayControl getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Type_MeetDoPlayControl> PARSER;

        public static com.google.protobuf.Parser<pbui_Type_MeetDoPlayControl> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Item_MeetMediaPlayDetailInfoOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Item_MeetMediaPlayDetailInfo)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <pre>
         *触发器ID
         * </pre>
         *
         * <code>fixed32 trrigerid = 1;</code>
         */
        int getTrrigerid();

        /**
         * <pre>
         *媒体ID
         * </pre>
         *
         * <code>fixed32 mediaid = 2;</code>
         */
        int getMediaid();
    }
    /**
     * <pre>
     *查询媒体播放
     * </pre>
     *
     * Protobuf type {@code pbui_Item_MeetMediaPlayDetailInfo}
     */
    public  static final class pbui_Item_MeetMediaPlayDetailInfo extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Item_MeetMediaPlayDetailInfo, pbui_Item_MeetMediaPlayDetailInfo.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Item_MeetMediaPlayDetailInfo)
            pbui_Item_MeetMediaPlayDetailInfoOrBuilder {
        private pbui_Item_MeetMediaPlayDetailInfo() {
        }
        public static final int TRRIGERID_FIELD_NUMBER = 1;
        private int trrigerid_;
        /**
         * <pre>
         *触发器ID
         * </pre>
         *
         * <code>fixed32 trrigerid = 1;</code>
         */
        public int getTrrigerid() {
            return trrigerid_;
        }
        /**
         * <pre>
         *触发器ID
         * </pre>
         *
         * <code>fixed32 trrigerid = 1;</code>
         */
        private void setTrrigerid(int value) {

            trrigerid_ = value;
        }
        /**
         * <pre>
         *触发器ID
         * </pre>
         *
         * <code>fixed32 trrigerid = 1;</code>
         */
        private void clearTrrigerid() {

            trrigerid_ = 0;
        }

        public static final int MEDIAID_FIELD_NUMBER = 2;
        private int mediaid_;
        /**
         * <pre>
         *媒体ID
         * </pre>
         *
         * <code>fixed32 mediaid = 2;</code>
         */
        public int getMediaid() {
            return mediaid_;
        }
        /**
         * <pre>
         *媒体ID
         * </pre>
         *
         * <code>fixed32 mediaid = 2;</code>
         */
        private void setMediaid(int value) {

            mediaid_ = value;
        }
        /**
         * <pre>
         *媒体ID
         * </pre>
         *
         * <code>fixed32 mediaid = 2;</code>
         */
        private void clearMediaid() {

            mediaid_ = 0;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (trrigerid_ != 0) {
                output.writeFixed32(1, trrigerid_);
            }
            if (mediaid_ != 0) {
                output.writeFixed32(2, mediaid_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (trrigerid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(1, trrigerid_);
            }
            if (mediaid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(2, mediaid_);
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMediaPlayDetailInfo parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMediaPlayDetailInfo parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMediaPlayDetailInfo parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMediaPlayDetailInfo parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMediaPlayDetailInfo parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMediaPlayDetailInfo parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMediaPlayDetailInfo parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMediaPlayDetailInfo parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMediaPlayDetailInfo parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMediaPlayDetailInfo parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMediaPlayDetailInfo parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMediaPlayDetailInfo parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMediaPlayDetailInfo prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *查询媒体播放
         * </pre>
         *
         * Protobuf type {@code pbui_Item_MeetMediaPlayDetailInfo}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMediaPlayDetailInfo, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Item_MeetMediaPlayDetailInfo)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMediaPlayDetailInfoOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMediaPlayDetailInfo.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <pre>
             *触发器ID
             * </pre>
             *
             * <code>fixed32 trrigerid = 1;</code>
             */
            public int getTrrigerid() {
                return instance.getTrrigerid();
            }
            /**
             * <pre>
             *触发器ID
             * </pre>
             *
             * <code>fixed32 trrigerid = 1;</code>
             */
            public Builder setTrrigerid(int value) {
                copyOnWrite();
                instance.setTrrigerid(value);
                return this;
            }
            /**
             * <pre>
             *触发器ID
             * </pre>
             *
             * <code>fixed32 trrigerid = 1;</code>
             */
            public Builder clearTrrigerid() {
                copyOnWrite();
                instance.clearTrrigerid();
                return this;
            }

            /**
             * <pre>
             *媒体ID
             * </pre>
             *
             * <code>fixed32 mediaid = 2;</code>
             */
            public int getMediaid() {
                return instance.getMediaid();
            }
            /**
             * <pre>
             *媒体ID
             * </pre>
             *
             * <code>fixed32 mediaid = 2;</code>
             */
            public Builder setMediaid(int value) {
                copyOnWrite();
                instance.setMediaid(value);
                return this;
            }
            /**
             * <pre>
             *媒体ID
             * </pre>
             *
             * <code>fixed32 mediaid = 2;</code>
             */
            public Builder clearMediaid() {
                copyOnWrite();
                instance.clearMediaid();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Item_MeetMediaPlayDetailInfo)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMediaPlayDetailInfo();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMediaPlayDetailInfo other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMediaPlayDetailInfo) arg1;
                    trrigerid_ = visitor.visitInt(trrigerid_ != 0, trrigerid_,
                            other.trrigerid_ != 0, other.trrigerid_);
                    mediaid_ = visitor.visitInt(mediaid_ != 0, mediaid_,
                            other.mediaid_ != 0, other.mediaid_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 13: {

                                    trrigerid_ = input.readFixed32();
                                    break;
                                }
                                case 21: {

                                    mediaid_ = input.readFixed32();
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMediaPlayDetailInfo.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Item_MeetMediaPlayDetailInfo)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMediaPlayDetailInfo DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Item_MeetMediaPlayDetailInfo();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMediaPlayDetailInfo getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Item_MeetMediaPlayDetailInfo> PARSER;

        public static com.google.protobuf.Parser<pbui_Item_MeetMediaPlayDetailInfo> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Type_MeetMediaPlayDetailInfoOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Type_MeetMediaPlayDetailInfo)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <code>repeated .pbui_Item_MeetMediaPlayDetailInfo item = 1;</code>
         */
        java.util.List<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMediaPlayDetailInfo>
        getItemList();
        /**
         * <code>repeated .pbui_Item_MeetMediaPlayDetailInfo item = 1;</code>
         */
        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMediaPlayDetailInfo getItem(int index);
        /**
         * <code>repeated .pbui_Item_MeetMediaPlayDetailInfo item = 1;</code>
         */
        int getItemCount();
    }
    /**
     * <pre>
     *查询媒体播放
     *call
     *type:Pb_TYPE_MEET_INTERFACE_MEDIAPLAY
     *method: query
     * </pre>
     *
     * Protobuf type {@code pbui_Type_MeetMediaPlayDetailInfo}
     */
    public  static final class pbui_Type_MeetMediaPlayDetailInfo extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Type_MeetMediaPlayDetailInfo, pbui_Type_MeetMediaPlayDetailInfo.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Type_MeetMediaPlayDetailInfo)
            pbui_Type_MeetMediaPlayDetailInfoOrBuilder {
        private pbui_Type_MeetMediaPlayDetailInfo() {
            item_ = emptyProtobufList();
        }
        public static final int ITEM_FIELD_NUMBER = 1;
        private com.google.protobuf.Internal.ProtobufList<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMediaPlayDetailInfo> item_;
        /**
         * <code>repeated .pbui_Item_MeetMediaPlayDetailInfo item = 1;</code>
         */
        public java.util.List<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMediaPlayDetailInfo> getItemList() {
            return item_;
        }
        /**
         * <code>repeated .pbui_Item_MeetMediaPlayDetailInfo item = 1;</code>
         */
        public java.util.List<? extends com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMediaPlayDetailInfoOrBuilder>
        getItemOrBuilderList() {
            return item_;
        }
        /**
         * <code>repeated .pbui_Item_MeetMediaPlayDetailInfo item = 1;</code>
         */
        public int getItemCount() {
            return item_.size();
        }
        /**
         * <code>repeated .pbui_Item_MeetMediaPlayDetailInfo item = 1;</code>
         */
        public com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMediaPlayDetailInfo getItem(int index) {
            return item_.get(index);
        }
        /**
         * <code>repeated .pbui_Item_MeetMediaPlayDetailInfo item = 1;</code>
         */
        public com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMediaPlayDetailInfoOrBuilder getItemOrBuilder(
                int index) {
            return item_.get(index);
        }
        private void ensureItemIsMutable() {
            if (!item_.isModifiable()) {
                item_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(item_);
            }
        }

        /**
         * <code>repeated .pbui_Item_MeetMediaPlayDetailInfo item = 1;</code>
         */
        private void setItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMediaPlayDetailInfo value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensureItemIsMutable();
            item_.set(index, value);
        }
        /**
         * <code>repeated .pbui_Item_MeetMediaPlayDetailInfo item = 1;</code>
         */
        private void setItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMediaPlayDetailInfo.Builder builderForValue) {
            ensureItemIsMutable();
            item_.set(index, builderForValue.build());
        }
        /**
         * <code>repeated .pbui_Item_MeetMediaPlayDetailInfo item = 1;</code>
         */
        private void addItem(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMediaPlayDetailInfo value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensureItemIsMutable();
            item_.add(value);
        }
        /**
         * <code>repeated .pbui_Item_MeetMediaPlayDetailInfo item = 1;</code>
         */
        private void addItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMediaPlayDetailInfo value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensureItemIsMutable();
            item_.add(index, value);
        }
        /**
         * <code>repeated .pbui_Item_MeetMediaPlayDetailInfo item = 1;</code>
         */
        private void addItem(
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMediaPlayDetailInfo.Builder builderForValue) {
            ensureItemIsMutable();
            item_.add(builderForValue.build());
        }
        /**
         * <code>repeated .pbui_Item_MeetMediaPlayDetailInfo item = 1;</code>
         */
        private void addItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMediaPlayDetailInfo.Builder builderForValue) {
            ensureItemIsMutable();
            item_.add(index, builderForValue.build());
        }
        /**
         * <code>repeated .pbui_Item_MeetMediaPlayDetailInfo item = 1;</code>
         */
        private void addAllItem(
                java.lang.Iterable<? extends com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMediaPlayDetailInfo> values) {
            ensureItemIsMutable();
            com.google.protobuf.AbstractMessageLite.addAll(
                    values, item_);
        }
        /**
         * <code>repeated .pbui_Item_MeetMediaPlayDetailInfo item = 1;</code>
         */
        private void clearItem() {
            item_ = emptyProtobufList();
        }
        /**
         * <code>repeated .pbui_Item_MeetMediaPlayDetailInfo item = 1;</code>
         */
        private void removeItem(int index) {
            ensureItemIsMutable();
            item_.remove(index);
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            for (int i = 0; i < item_.size(); i++) {
                output.writeMessage(1, item_.get(i));
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            for (int i = 0; i < item_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, item_.get(i));
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetMediaPlayDetailInfo parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetMediaPlayDetailInfo parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetMediaPlayDetailInfo parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetMediaPlayDetailInfo parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetMediaPlayDetailInfo parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetMediaPlayDetailInfo parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetMediaPlayDetailInfo parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetMediaPlayDetailInfo parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetMediaPlayDetailInfo parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetMediaPlayDetailInfo parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetMediaPlayDetailInfo parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetMediaPlayDetailInfo parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetMediaPlayDetailInfo prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *查询媒体播放
         *call
         *type:Pb_TYPE_MEET_INTERFACE_MEDIAPLAY
         *method: query
         * </pre>
         *
         * Protobuf type {@code pbui_Type_MeetMediaPlayDetailInfo}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetMediaPlayDetailInfo, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Type_MeetMediaPlayDetailInfo)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetMediaPlayDetailInfoOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetMediaPlayDetailInfo.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <code>repeated .pbui_Item_MeetMediaPlayDetailInfo item = 1;</code>
             */
            public java.util.List<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMediaPlayDetailInfo> getItemList() {
                return java.util.Collections.unmodifiableList(
                        instance.getItemList());
            }
            /**
             * <code>repeated .pbui_Item_MeetMediaPlayDetailInfo item = 1;</code>
             */
            public int getItemCount() {
                return instance.getItemCount();
            }/**
             * <code>repeated .pbui_Item_MeetMediaPlayDetailInfo item = 1;</code>
             */
            public com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMediaPlayDetailInfo getItem(int index) {
                return instance.getItem(index);
            }
            /**
             * <code>repeated .pbui_Item_MeetMediaPlayDetailInfo item = 1;</code>
             */
            public Builder setItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMediaPlayDetailInfo value) {
                copyOnWrite();
                instance.setItem(index, value);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetMediaPlayDetailInfo item = 1;</code>
             */
            public Builder setItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMediaPlayDetailInfo.Builder builderForValue) {
                copyOnWrite();
                instance.setItem(index, builderForValue);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetMediaPlayDetailInfo item = 1;</code>
             */
            public Builder addItem(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMediaPlayDetailInfo value) {
                copyOnWrite();
                instance.addItem(value);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetMediaPlayDetailInfo item = 1;</code>
             */
            public Builder addItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMediaPlayDetailInfo value) {
                copyOnWrite();
                instance.addItem(index, value);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetMediaPlayDetailInfo item = 1;</code>
             */
            public Builder addItem(
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMediaPlayDetailInfo.Builder builderForValue) {
                copyOnWrite();
                instance.addItem(builderForValue);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetMediaPlayDetailInfo item = 1;</code>
             */
            public Builder addItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMediaPlayDetailInfo.Builder builderForValue) {
                copyOnWrite();
                instance.addItem(index, builderForValue);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetMediaPlayDetailInfo item = 1;</code>
             */
            public Builder addAllItem(
                    java.lang.Iterable<? extends com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMediaPlayDetailInfo> values) {
                copyOnWrite();
                instance.addAllItem(values);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetMediaPlayDetailInfo item = 1;</code>
             */
            public Builder clearItem() {
                copyOnWrite();
                instance.clearItem();
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetMediaPlayDetailInfo item = 1;</code>
             */
            public Builder removeItem(int index) {
                copyOnWrite();
                instance.removeItem(index);
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Type_MeetMediaPlayDetailInfo)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetMediaPlayDetailInfo();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    item_.makeImmutable();
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetMediaPlayDetailInfo other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetMediaPlayDetailInfo) arg1;
                    item_= visitor.visitList(item_, other.item_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 10: {
                                    if (!item_.isModifiable()) {
                                        item_ =
                                                com.google.protobuf.GeneratedMessageLite.mutableCopy(item_);
                                    }
                                    item_.add(
                                            input.readMessage(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetMediaPlayDetailInfo.parser(), extensionRegistry));
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetMediaPlayDetailInfo.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Type_MeetMediaPlayDetailInfo)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetMediaPlayDetailInfo DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Type_MeetMediaPlayDetailInfo();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetMediaPlayDetailInfo getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Type_MeetMediaPlayDetailInfo> PARSER;

        public static com.google.protobuf.Parser<pbui_Type_MeetMediaPlayDetailInfo> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Type_FilePushOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Type_FilePush)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <pre>
         *媒体ID
         * </pre>
         *
         * <code>fixed32 mediaid = 1;</code>
         */
        int getMediaid();

        /**
         * <pre>
         *参见该文件中的triggeruserval定义
         * </pre>
         *
         * <code>fixed32 triggeruserval = 2;</code>
         */
        int getTriggeruserval();
    }
    /**
     * <pre>
     *文件推送
     *type:Pb_TYPE_MEET_INTERFACE_FILEPUSH
     *method: notify
     *当为询问模式时，回调函数返回1表示同意播放
     * </pre>
     *
     * Protobuf type {@code pbui_Type_FilePush}
     */
    public  static final class pbui_Type_FilePush extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Type_FilePush, pbui_Type_FilePush.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Type_FilePush)
            pbui_Type_FilePushOrBuilder {
        private pbui_Type_FilePush() {
        }
        public static final int MEDIAID_FIELD_NUMBER = 1;
        private int mediaid_;
        /**
         * <pre>
         *媒体ID
         * </pre>
         *
         * <code>fixed32 mediaid = 1;</code>
         */
        public int getMediaid() {
            return mediaid_;
        }
        /**
         * <pre>
         *媒体ID
         * </pre>
         *
         * <code>fixed32 mediaid = 1;</code>
         */
        private void setMediaid(int value) {

            mediaid_ = value;
        }
        /**
         * <pre>
         *媒体ID
         * </pre>
         *
         * <code>fixed32 mediaid = 1;</code>
         */
        private void clearMediaid() {

            mediaid_ = 0;
        }

        public static final int TRIGGERUSERVAL_FIELD_NUMBER = 2;
        private int triggeruserval_;
        /**
         * <pre>
         *参见该文件中的triggeruserval定义
         * </pre>
         *
         * <code>fixed32 triggeruserval = 2;</code>
         */
        public int getTriggeruserval() {
            return triggeruserval_;
        }
        /**
         * <pre>
         *参见该文件中的triggeruserval定义
         * </pre>
         *
         * <code>fixed32 triggeruserval = 2;</code>
         */
        private void setTriggeruserval(int value) {

            triggeruserval_ = value;
        }
        /**
         * <pre>
         *参见该文件中的triggeruserval定义
         * </pre>
         *
         * <code>fixed32 triggeruserval = 2;</code>
         */
        private void clearTriggeruserval() {

            triggeruserval_ = 0;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (mediaid_ != 0) {
                output.writeFixed32(1, mediaid_);
            }
            if (triggeruserval_ != 0) {
                output.writeFixed32(2, triggeruserval_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (mediaid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(1, mediaid_);
            }
            if (triggeruserval_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(2, triggeruserval_);
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_FilePush parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_FilePush parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_FilePush parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_FilePush parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_FilePush parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_FilePush parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_FilePush parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_FilePush parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_FilePush parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_FilePush parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_FilePush parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_FilePush parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_FilePush prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *文件推送
         *type:Pb_TYPE_MEET_INTERFACE_FILEPUSH
         *method: notify
         *当为询问模式时，回调函数返回1表示同意播放
         * </pre>
         *
         * Protobuf type {@code pbui_Type_FilePush}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_FilePush, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Type_FilePush)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_FilePushOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_FilePush.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <pre>
             *媒体ID
             * </pre>
             *
             * <code>fixed32 mediaid = 1;</code>
             */
            public int getMediaid() {
                return instance.getMediaid();
            }
            /**
             * <pre>
             *媒体ID
             * </pre>
             *
             * <code>fixed32 mediaid = 1;</code>
             */
            public Builder setMediaid(int value) {
                copyOnWrite();
                instance.setMediaid(value);
                return this;
            }
            /**
             * <pre>
             *媒体ID
             * </pre>
             *
             * <code>fixed32 mediaid = 1;</code>
             */
            public Builder clearMediaid() {
                copyOnWrite();
                instance.clearMediaid();
                return this;
            }

            /**
             * <pre>
             *参见该文件中的triggeruserval定义
             * </pre>
             *
             * <code>fixed32 triggeruserval = 2;</code>
             */
            public int getTriggeruserval() {
                return instance.getTriggeruserval();
            }
            /**
             * <pre>
             *参见该文件中的triggeruserval定义
             * </pre>
             *
             * <code>fixed32 triggeruserval = 2;</code>
             */
            public Builder setTriggeruserval(int value) {
                copyOnWrite();
                instance.setTriggeruserval(value);
                return this;
            }
            /**
             * <pre>
             *参见该文件中的triggeruserval定义
             * </pre>
             *
             * <code>fixed32 triggeruserval = 2;</code>
             */
            public Builder clearTriggeruserval() {
                copyOnWrite();
                instance.clearTriggeruserval();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Type_FilePush)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_FilePush();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_FilePush other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_FilePush) arg1;
                    mediaid_ = visitor.visitInt(mediaid_ != 0, mediaid_,
                            other.mediaid_ != 0, other.mediaid_);
                    triggeruserval_ = visitor.visitInt(triggeruserval_ != 0, triggeruserval_,
                            other.triggeruserval_ != 0, other.triggeruserval_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 13: {

                                    mediaid_ = input.readFixed32();
                                    break;
                                }
                                case 21: {

                                    triggeruserval_ = input.readFixed32();
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_FilePush.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Type_FilePush)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_FilePush DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Type_FilePush();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_FilePush getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Type_FilePush> PARSER;

        public static com.google.protobuf.Parser<pbui_Type_FilePush> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Type_DoFilePushOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Type_DoFilePush)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <pre>
         *媒体ID
         * </pre>
         *
         * <code>fixed32 mediaid = 1;</code>
         */
        int getMediaid();

        /**
         * <pre>
         *参见该文件中的triggeruserval定义
         * </pre>
         *
         * <code>fixed32 triggeruserval = 2;</code>
         */
        int getTriggeruserval();

        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 3;</code>
         */
        java.util.List<java.lang.Integer> getDeviceidList();
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 3;</code>
         */
        int getDeviceidCount();
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 3;</code>
         */
        int getDeviceid(int index);
    }
    /**
     * <pre>
     *文件推送
     *type:Pb_TYPE_MEET_INTERFACE_MEDIAPLAY
     *method: push
     * </pre>
     *
     * Protobuf type {@code pbui_Type_DoFilePush}
     */
    public  static final class pbui_Type_DoFilePush extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Type_DoFilePush, pbui_Type_DoFilePush.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Type_DoFilePush)
            pbui_Type_DoFilePushOrBuilder {
        private pbui_Type_DoFilePush() {
            deviceid_ = emptyIntList();
        }
        private int bitField0_;
        public static final int MEDIAID_FIELD_NUMBER = 1;
        private int mediaid_;
        /**
         * <pre>
         *媒体ID
         * </pre>
         *
         * <code>fixed32 mediaid = 1;</code>
         */
        public int getMediaid() {
            return mediaid_;
        }
        /**
         * <pre>
         *媒体ID
         * </pre>
         *
         * <code>fixed32 mediaid = 1;</code>
         */
        private void setMediaid(int value) {

            mediaid_ = value;
        }
        /**
         * <pre>
         *媒体ID
         * </pre>
         *
         * <code>fixed32 mediaid = 1;</code>
         */
        private void clearMediaid() {

            mediaid_ = 0;
        }

        public static final int TRIGGERUSERVAL_FIELD_NUMBER = 2;
        private int triggeruserval_;
        /**
         * <pre>
         *参见该文件中的triggeruserval定义
         * </pre>
         *
         * <code>fixed32 triggeruserval = 2;</code>
         */
        public int getTriggeruserval() {
            return triggeruserval_;
        }
        /**
         * <pre>
         *参见该文件中的triggeruserval定义
         * </pre>
         *
         * <code>fixed32 triggeruserval = 2;</code>
         */
        private void setTriggeruserval(int value) {

            triggeruserval_ = value;
        }
        /**
         * <pre>
         *参见该文件中的triggeruserval定义
         * </pre>
         *
         * <code>fixed32 triggeruserval = 2;</code>
         */
        private void clearTriggeruserval() {

            triggeruserval_ = 0;
        }

        public static final int DEVICEID_FIELD_NUMBER = 3;
        private com.google.protobuf.Internal.IntList deviceid_;
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 3;</code>
         */
        public java.util.List<java.lang.Integer>
        getDeviceidList() {
            return deviceid_;
        }
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 3;</code>
         */
        public int getDeviceidCount() {
            return deviceid_.size();
        }
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 3;</code>
         */
        public int getDeviceid(int index) {
            return deviceid_.getInt(index);
        }
        private void ensureDeviceidIsMutable() {
            if (!deviceid_.isModifiable()) {
                deviceid_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(deviceid_);
            }
        }
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 3;</code>
         */
        private void setDeviceid(
                int index, int value) {
            ensureDeviceidIsMutable();
            deviceid_.setInt(index, value);
        }
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 3;</code>
         */
        private void addDeviceid(int value) {
            ensureDeviceidIsMutable();
            deviceid_.addInt(value);
        }
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 3;</code>
         */
        private void addAllDeviceid(
                java.lang.Iterable<? extends java.lang.Integer> values) {
            ensureDeviceidIsMutable();
            com.google.protobuf.AbstractMessageLite.addAll(
                    values, deviceid_);
        }
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 3;</code>
         */
        private void clearDeviceid() {
            deviceid_ = emptyIntList();
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (mediaid_ != 0) {
                output.writeFixed32(1, mediaid_);
            }
            if (triggeruserval_ != 0) {
                output.writeFixed32(2, triggeruserval_);
            }
            for (int i = 0; i < deviceid_.size(); i++) {
                output.writeFixed32(3, deviceid_.getInt(i));
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (mediaid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(1, mediaid_);
            }
            if (triggeruserval_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(2, triggeruserval_);
            }
            {
                int dataSize = 0;
                dataSize = 4 * getDeviceidList().size();
                size += dataSize;
                size += 1 * getDeviceidList().size();
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoFilePush parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoFilePush parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoFilePush parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoFilePush parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoFilePush parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoFilePush parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoFilePush parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoFilePush parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoFilePush parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoFilePush parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoFilePush parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoFilePush parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoFilePush prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *文件推送
         *type:Pb_TYPE_MEET_INTERFACE_MEDIAPLAY
         *method: push
         * </pre>
         *
         * Protobuf type {@code pbui_Type_DoFilePush}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoFilePush, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Type_DoFilePush)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoFilePushOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoFilePush.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <pre>
             *媒体ID
             * </pre>
             *
             * <code>fixed32 mediaid = 1;</code>
             */
            public int getMediaid() {
                return instance.getMediaid();
            }
            /**
             * <pre>
             *媒体ID
             * </pre>
             *
             * <code>fixed32 mediaid = 1;</code>
             */
            public Builder setMediaid(int value) {
                copyOnWrite();
                instance.setMediaid(value);
                return this;
            }
            /**
             * <pre>
             *媒体ID
             * </pre>
             *
             * <code>fixed32 mediaid = 1;</code>
             */
            public Builder clearMediaid() {
                copyOnWrite();
                instance.clearMediaid();
                return this;
            }

            /**
             * <pre>
             *参见该文件中的triggeruserval定义
             * </pre>
             *
             * <code>fixed32 triggeruserval = 2;</code>
             */
            public int getTriggeruserval() {
                return instance.getTriggeruserval();
            }
            /**
             * <pre>
             *参见该文件中的triggeruserval定义
             * </pre>
             *
             * <code>fixed32 triggeruserval = 2;</code>
             */
            public Builder setTriggeruserval(int value) {
                copyOnWrite();
                instance.setTriggeruserval(value);
                return this;
            }
            /**
             * <pre>
             *参见该文件中的triggeruserval定义
             * </pre>
             *
             * <code>fixed32 triggeruserval = 2;</code>
             */
            public Builder clearTriggeruserval() {
                copyOnWrite();
                instance.clearTriggeruserval();
                return this;
            }

            /**
             * <pre>
             *通知的目标设备,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 deviceid = 3;</code>
             */
            public java.util.List<java.lang.Integer>
            getDeviceidList() {
                return java.util.Collections.unmodifiableList(
                        instance.getDeviceidList());
            }
            /**
             * <pre>
             *通知的目标设备,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 deviceid = 3;</code>
             */
            public int getDeviceidCount() {
                return instance.getDeviceidCount();
            }
            /**
             * <pre>
             *通知的目标设备,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 deviceid = 3;</code>
             */
            public int getDeviceid(int index) {
                return instance.getDeviceid(index);
            }
            /**
             * <pre>
             *通知的目标设备,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 deviceid = 3;</code>
             */
            public Builder setDeviceid(
                    int index, int value) {
                copyOnWrite();
                instance.setDeviceid(index, value);
                return this;
            }
            /**
             * <pre>
             *通知的目标设备,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 deviceid = 3;</code>
             */
            public Builder addDeviceid(int value) {
                copyOnWrite();
                instance.addDeviceid(value);
                return this;
            }
            /**
             * <pre>
             *通知的目标设备,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 deviceid = 3;</code>
             */
            public Builder addAllDeviceid(
                    java.lang.Iterable<? extends java.lang.Integer> values) {
                copyOnWrite();
                instance.addAllDeviceid(values);
                return this;
            }
            /**
             * <pre>
             *通知的目标设备,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 deviceid = 3;</code>
             */
            public Builder clearDeviceid() {
                copyOnWrite();
                instance.clearDeviceid();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Type_DoFilePush)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoFilePush();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    deviceid_.makeImmutable();
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoFilePush other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoFilePush) arg1;
                    mediaid_ = visitor.visitInt(mediaid_ != 0, mediaid_,
                            other.mediaid_ != 0, other.mediaid_);
                    triggeruserval_ = visitor.visitInt(triggeruserval_ != 0, triggeruserval_,
                            other.triggeruserval_ != 0, other.triggeruserval_);
                    deviceid_= visitor.visitIntList(deviceid_, other.deviceid_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                        bitField0_ |= other.bitField0_;
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 13: {

                                    mediaid_ = input.readFixed32();
                                    break;
                                }
                                case 21: {

                                    triggeruserval_ = input.readFixed32();
                                    break;
                                }
                                case 29: {
                                    if (!deviceid_.isModifiable()) {
                                        deviceid_ =
                                                com.google.protobuf.GeneratedMessageLite.mutableCopy(deviceid_);
                                    }
                                    deviceid_.addInt(input.readFixed32());
                                    break;
                                }
                                case 26: {
                                    int length = input.readRawVarint32();
                                    int limit = input.pushLimit(length);
                                    if (!deviceid_.isModifiable() && input.getBytesUntilLimit() > 0) {
                                        final int currentSize = deviceid_.size();
                                        deviceid_ = deviceid_.mutableCopyWithCapacity(
                                                currentSize + (length/4));
                                    }
                                    while (input.getBytesUntilLimit() > 0) {
                                        deviceid_.addInt(input.readFixed32());
                                    }
                                    input.popLimit(limit);
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoFilePush.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Type_DoFilePush)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoFilePush DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Type_DoFilePush();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoFilePush getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Type_DoFilePush> PARSER;

        public static com.google.protobuf.Parser<pbui_Type_DoFilePush> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Type_ReqStreamPushOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Type_ReqStreamPush)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <pre>
         *参见该文件中的triggeruserval定义
         * </pre>
         *
         * <code>fixed32 triggeruserval = 1;</code>
         */
        int getTriggeruserval();

        /**
         * <pre>
         *发起请求的设备ID
         * </pre>
         *
         * <code>fixed32 deviceid = 2;</code>
         */
        int getDeviceid();

        /**
         * <pre>
         *发起请求的人员ID
         * </pre>
         *
         * <code>fixed32 memberid = 3;</code>
         */
        int getMemberid();

        /**
         * <pre>
         *本设备子通道号
         * </pre>
         *
         * <code>fixed32 substreamindex = 4;</code>
         */
        int getSubstreamindex();
    }
    /**
     * <pre>
     *请求播放流通道通知
     *type:Pb_TYPE_MEET_INTERFACE_REQUESTSTREAMPUSH
     *method: notify
     *当为询问模式时，回调函数返回1表示同意播放
     * </pre>
     *
     * Protobuf type {@code pbui_Type_ReqStreamPush}
     */
    public  static final class pbui_Type_ReqStreamPush extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Type_ReqStreamPush, pbui_Type_ReqStreamPush.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Type_ReqStreamPush)
            pbui_Type_ReqStreamPushOrBuilder {
        private pbui_Type_ReqStreamPush() {
        }
        public static final int TRIGGERUSERVAL_FIELD_NUMBER = 1;
        private int triggeruserval_;
        /**
         * <pre>
         *参见该文件中的triggeruserval定义
         * </pre>
         *
         * <code>fixed32 triggeruserval = 1;</code>
         */
        public int getTriggeruserval() {
            return triggeruserval_;
        }
        /**
         * <pre>
         *参见该文件中的triggeruserval定义
         * </pre>
         *
         * <code>fixed32 triggeruserval = 1;</code>
         */
        private void setTriggeruserval(int value) {

            triggeruserval_ = value;
        }
        /**
         * <pre>
         *参见该文件中的triggeruserval定义
         * </pre>
         *
         * <code>fixed32 triggeruserval = 1;</code>
         */
        private void clearTriggeruserval() {

            triggeruserval_ = 0;
        }

        public static final int DEVICEID_FIELD_NUMBER = 2;
        private int deviceid_;
        /**
         * <pre>
         *发起请求的设备ID
         * </pre>
         *
         * <code>fixed32 deviceid = 2;</code>
         */
        public int getDeviceid() {
            return deviceid_;
        }
        /**
         * <pre>
         *发起请求的设备ID
         * </pre>
         *
         * <code>fixed32 deviceid = 2;</code>
         */
        private void setDeviceid(int value) {

            deviceid_ = value;
        }
        /**
         * <pre>
         *发起请求的设备ID
         * </pre>
         *
         * <code>fixed32 deviceid = 2;</code>
         */
        private void clearDeviceid() {

            deviceid_ = 0;
        }

        public static final int MEMBERID_FIELD_NUMBER = 3;
        private int memberid_;
        /**
         * <pre>
         *发起请求的人员ID
         * </pre>
         *
         * <code>fixed32 memberid = 3;</code>
         */
        public int getMemberid() {
            return memberid_;
        }
        /**
         * <pre>
         *发起请求的人员ID
         * </pre>
         *
         * <code>fixed32 memberid = 3;</code>
         */
        private void setMemberid(int value) {

            memberid_ = value;
        }
        /**
         * <pre>
         *发起请求的人员ID
         * </pre>
         *
         * <code>fixed32 memberid = 3;</code>
         */
        private void clearMemberid() {

            memberid_ = 0;
        }

        public static final int SUBSTREAMINDEX_FIELD_NUMBER = 4;
        private int substreamindex_;
        /**
         * <pre>
         *本设备子通道号
         * </pre>
         *
         * <code>fixed32 substreamindex = 4;</code>
         */
        public int getSubstreamindex() {
            return substreamindex_;
        }
        /**
         * <pre>
         *本设备子通道号
         * </pre>
         *
         * <code>fixed32 substreamindex = 4;</code>
         */
        private void setSubstreamindex(int value) {

            substreamindex_ = value;
        }
        /**
         * <pre>
         *本设备子通道号
         * </pre>
         *
         * <code>fixed32 substreamindex = 4;</code>
         */
        private void clearSubstreamindex() {

            substreamindex_ = 0;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (triggeruserval_ != 0) {
                output.writeFixed32(1, triggeruserval_);
            }
            if (deviceid_ != 0) {
                output.writeFixed32(2, deviceid_);
            }
            if (memberid_ != 0) {
                output.writeFixed32(3, memberid_);
            }
            if (substreamindex_ != 0) {
                output.writeFixed32(4, substreamindex_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (triggeruserval_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(1, triggeruserval_);
            }
            if (deviceid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(2, deviceid_);
            }
            if (memberid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(3, memberid_);
            }
            if (substreamindex_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(4, substreamindex_);
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_ReqStreamPush parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_ReqStreamPush parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_ReqStreamPush parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_ReqStreamPush parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_ReqStreamPush parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_ReqStreamPush parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_ReqStreamPush parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_ReqStreamPush parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_ReqStreamPush parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_ReqStreamPush parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_ReqStreamPush parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_ReqStreamPush parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_ReqStreamPush prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *请求播放流通道通知
         *type:Pb_TYPE_MEET_INTERFACE_REQUESTSTREAMPUSH
         *method: notify
         *当为询问模式时，回调函数返回1表示同意播放
         * </pre>
         *
         * Protobuf type {@code pbui_Type_ReqStreamPush}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_ReqStreamPush, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Type_ReqStreamPush)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_ReqStreamPushOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_ReqStreamPush.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <pre>
             *参见该文件中的triggeruserval定义
             * </pre>
             *
             * <code>fixed32 triggeruserval = 1;</code>
             */
            public int getTriggeruserval() {
                return instance.getTriggeruserval();
            }
            /**
             * <pre>
             *参见该文件中的triggeruserval定义
             * </pre>
             *
             * <code>fixed32 triggeruserval = 1;</code>
             */
            public Builder setTriggeruserval(int value) {
                copyOnWrite();
                instance.setTriggeruserval(value);
                return this;
            }
            /**
             * <pre>
             *参见该文件中的triggeruserval定义
             * </pre>
             *
             * <code>fixed32 triggeruserval = 1;</code>
             */
            public Builder clearTriggeruserval() {
                copyOnWrite();
                instance.clearTriggeruserval();
                return this;
            }

            /**
             * <pre>
             *发起请求的设备ID
             * </pre>
             *
             * <code>fixed32 deviceid = 2;</code>
             */
            public int getDeviceid() {
                return instance.getDeviceid();
            }
            /**
             * <pre>
             *发起请求的设备ID
             * </pre>
             *
             * <code>fixed32 deviceid = 2;</code>
             */
            public Builder setDeviceid(int value) {
                copyOnWrite();
                instance.setDeviceid(value);
                return this;
            }
            /**
             * <pre>
             *发起请求的设备ID
             * </pre>
             *
             * <code>fixed32 deviceid = 2;</code>
             */
            public Builder clearDeviceid() {
                copyOnWrite();
                instance.clearDeviceid();
                return this;
            }

            /**
             * <pre>
             *发起请求的人员ID
             * </pre>
             *
             * <code>fixed32 memberid = 3;</code>
             */
            public int getMemberid() {
                return instance.getMemberid();
            }
            /**
             * <pre>
             *发起请求的人员ID
             * </pre>
             *
             * <code>fixed32 memberid = 3;</code>
             */
            public Builder setMemberid(int value) {
                copyOnWrite();
                instance.setMemberid(value);
                return this;
            }
            /**
             * <pre>
             *发起请求的人员ID
             * </pre>
             *
             * <code>fixed32 memberid = 3;</code>
             */
            public Builder clearMemberid() {
                copyOnWrite();
                instance.clearMemberid();
                return this;
            }

            /**
             * <pre>
             *本设备子通道号
             * </pre>
             *
             * <code>fixed32 substreamindex = 4;</code>
             */
            public int getSubstreamindex() {
                return instance.getSubstreamindex();
            }
            /**
             * <pre>
             *本设备子通道号
             * </pre>
             *
             * <code>fixed32 substreamindex = 4;</code>
             */
            public Builder setSubstreamindex(int value) {
                copyOnWrite();
                instance.setSubstreamindex(value);
                return this;
            }
            /**
             * <pre>
             *本设备子通道号
             * </pre>
             *
             * <code>fixed32 substreamindex = 4;</code>
             */
            public Builder clearSubstreamindex() {
                copyOnWrite();
                instance.clearSubstreamindex();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Type_ReqStreamPush)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_ReqStreamPush();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_ReqStreamPush other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_ReqStreamPush) arg1;
                    triggeruserval_ = visitor.visitInt(triggeruserval_ != 0, triggeruserval_,
                            other.triggeruserval_ != 0, other.triggeruserval_);
                    deviceid_ = visitor.visitInt(deviceid_ != 0, deviceid_,
                            other.deviceid_ != 0, other.deviceid_);
                    memberid_ = visitor.visitInt(memberid_ != 0, memberid_,
                            other.memberid_ != 0, other.memberid_);
                    substreamindex_ = visitor.visitInt(substreamindex_ != 0, substreamindex_,
                            other.substreamindex_ != 0, other.substreamindex_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 13: {

                                    triggeruserval_ = input.readFixed32();
                                    break;
                                }
                                case 21: {

                                    deviceid_ = input.readFixed32();
                                    break;
                                }
                                case 29: {

                                    memberid_ = input.readFixed32();
                                    break;
                                }
                                case 37: {

                                    substreamindex_ = input.readFixed32();
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_ReqStreamPush.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Type_ReqStreamPush)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_ReqStreamPush DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Type_ReqStreamPush();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_ReqStreamPush getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Type_ReqStreamPush> PARSER;

        public static com.google.protobuf.Parser<pbui_Type_ReqStreamPush> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Type_DoReqStreamPushOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Type_DoReqStreamPush)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <pre>
         *参见该文件中的triggeruserval定义
         * </pre>
         *
         * <code>fixed32 triggeruserval = 1;</code>
         */
        int getTriggeruserval();

        /**
         * <pre>
         *处理该请求的设备ID
         * </pre>
         *
         * <code>fixed32 handledeviceid = 2;</code>
         */
        int getHandledeviceid();

        /**
         * <pre>
         *本设备子通道号
         * </pre>
         *
         * <code>fixed32 substreamindex = 3;</code>
         */
        int getSubstreamindex();

        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 4;</code>
         */
        java.util.List<java.lang.Integer> getDeviceidList();
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 4;</code>
         */
        int getDeviceidCount();
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 4;</code>
         */
        int getDeviceid(int index);
    }
    /**
     * <pre>
     *请求播放流通道
     *type:Pb_TYPE_MEET_INTERFACE_STREAMPLAY
     *method: requestpush
     * </pre>
     *
     * Protobuf type {@code pbui_Type_DoReqStreamPush}
     */
    public  static final class pbui_Type_DoReqStreamPush extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Type_DoReqStreamPush, pbui_Type_DoReqStreamPush.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Type_DoReqStreamPush)
            pbui_Type_DoReqStreamPushOrBuilder {
        private pbui_Type_DoReqStreamPush() {
            deviceid_ = emptyIntList();
        }
        private int bitField0_;
        public static final int TRIGGERUSERVAL_FIELD_NUMBER = 1;
        private int triggeruserval_;
        /**
         * <pre>
         *参见该文件中的triggeruserval定义
         * </pre>
         *
         * <code>fixed32 triggeruserval = 1;</code>
         */
        public int getTriggeruserval() {
            return triggeruserval_;
        }
        /**
         * <pre>
         *参见该文件中的triggeruserval定义
         * </pre>
         *
         * <code>fixed32 triggeruserval = 1;</code>
         */
        private void setTriggeruserval(int value) {

            triggeruserval_ = value;
        }
        /**
         * <pre>
         *参见该文件中的triggeruserval定义
         * </pre>
         *
         * <code>fixed32 triggeruserval = 1;</code>
         */
        private void clearTriggeruserval() {

            triggeruserval_ = 0;
        }

        public static final int HANDLEDEVICEID_FIELD_NUMBER = 2;
        private int handledeviceid_;
        /**
         * <pre>
         *处理该请求的设备ID
         * </pre>
         *
         * <code>fixed32 handledeviceid = 2;</code>
         */
        public int getHandledeviceid() {
            return handledeviceid_;
        }
        /**
         * <pre>
         *处理该请求的设备ID
         * </pre>
         *
         * <code>fixed32 handledeviceid = 2;</code>
         */
        private void setHandledeviceid(int value) {

            handledeviceid_ = value;
        }
        /**
         * <pre>
         *处理该请求的设备ID
         * </pre>
         *
         * <code>fixed32 handledeviceid = 2;</code>
         */
        private void clearHandledeviceid() {

            handledeviceid_ = 0;
        }

        public static final int SUBSTREAMINDEX_FIELD_NUMBER = 3;
        private int substreamindex_;
        /**
         * <pre>
         *本设备子通道号
         * </pre>
         *
         * <code>fixed32 substreamindex = 3;</code>
         */
        public int getSubstreamindex() {
            return substreamindex_;
        }
        /**
         * <pre>
         *本设备子通道号
         * </pre>
         *
         * <code>fixed32 substreamindex = 3;</code>
         */
        private void setSubstreamindex(int value) {

            substreamindex_ = value;
        }
        /**
         * <pre>
         *本设备子通道号
         * </pre>
         *
         * <code>fixed32 substreamindex = 3;</code>
         */
        private void clearSubstreamindex() {

            substreamindex_ = 0;
        }

        public static final int DEVICEID_FIELD_NUMBER = 4;
        private com.google.protobuf.Internal.IntList deviceid_;
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 4;</code>
         */
        public java.util.List<java.lang.Integer>
        getDeviceidList() {
            return deviceid_;
        }
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 4;</code>
         */
        public int getDeviceidCount() {
            return deviceid_.size();
        }
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 4;</code>
         */
        public int getDeviceid(int index) {
            return deviceid_.getInt(index);
        }
        private void ensureDeviceidIsMutable() {
            if (!deviceid_.isModifiable()) {
                deviceid_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(deviceid_);
            }
        }
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 4;</code>
         */
        private void setDeviceid(
                int index, int value) {
            ensureDeviceidIsMutable();
            deviceid_.setInt(index, value);
        }
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 4;</code>
         */
        private void addDeviceid(int value) {
            ensureDeviceidIsMutable();
            deviceid_.addInt(value);
        }
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 4;</code>
         */
        private void addAllDeviceid(
                java.lang.Iterable<? extends java.lang.Integer> values) {
            ensureDeviceidIsMutable();
            com.google.protobuf.AbstractMessageLite.addAll(
                    values, deviceid_);
        }
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 4;</code>
         */
        private void clearDeviceid() {
            deviceid_ = emptyIntList();
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (triggeruserval_ != 0) {
                output.writeFixed32(1, triggeruserval_);
            }
            if (handledeviceid_ != 0) {
                output.writeFixed32(2, handledeviceid_);
            }
            if (substreamindex_ != 0) {
                output.writeFixed32(3, substreamindex_);
            }
            for (int i = 0; i < deviceid_.size(); i++) {
                output.writeFixed32(4, deviceid_.getInt(i));
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (triggeruserval_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(1, triggeruserval_);
            }
            if (handledeviceid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(2, handledeviceid_);
            }
            if (substreamindex_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(3, substreamindex_);
            }
            {
                int dataSize = 0;
                dataSize = 4 * getDeviceidList().size();
                size += dataSize;
                size += 1 * getDeviceidList().size();
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoReqStreamPush parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoReqStreamPush parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoReqStreamPush parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoReqStreamPush parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoReqStreamPush parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoReqStreamPush parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoReqStreamPush parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoReqStreamPush parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoReqStreamPush parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoReqStreamPush parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoReqStreamPush parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoReqStreamPush parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoReqStreamPush prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *请求播放流通道
         *type:Pb_TYPE_MEET_INTERFACE_STREAMPLAY
         *method: requestpush
         * </pre>
         *
         * Protobuf type {@code pbui_Type_DoReqStreamPush}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoReqStreamPush, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Type_DoReqStreamPush)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoReqStreamPushOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoReqStreamPush.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <pre>
             *参见该文件中的triggeruserval定义
             * </pre>
             *
             * <code>fixed32 triggeruserval = 1;</code>
             */
            public int getTriggeruserval() {
                return instance.getTriggeruserval();
            }
            /**
             * <pre>
             *参见该文件中的triggeruserval定义
             * </pre>
             *
             * <code>fixed32 triggeruserval = 1;</code>
             */
            public Builder setTriggeruserval(int value) {
                copyOnWrite();
                instance.setTriggeruserval(value);
                return this;
            }
            /**
             * <pre>
             *参见该文件中的triggeruserval定义
             * </pre>
             *
             * <code>fixed32 triggeruserval = 1;</code>
             */
            public Builder clearTriggeruserval() {
                copyOnWrite();
                instance.clearTriggeruserval();
                return this;
            }

            /**
             * <pre>
             *处理该请求的设备ID
             * </pre>
             *
             * <code>fixed32 handledeviceid = 2;</code>
             */
            public int getHandledeviceid() {
                return instance.getHandledeviceid();
            }
            /**
             * <pre>
             *处理该请求的设备ID
             * </pre>
             *
             * <code>fixed32 handledeviceid = 2;</code>
             */
            public Builder setHandledeviceid(int value) {
                copyOnWrite();
                instance.setHandledeviceid(value);
                return this;
            }
            /**
             * <pre>
             *处理该请求的设备ID
             * </pre>
             *
             * <code>fixed32 handledeviceid = 2;</code>
             */
            public Builder clearHandledeviceid() {
                copyOnWrite();
                instance.clearHandledeviceid();
                return this;
            }

            /**
             * <pre>
             *本设备子通道号
             * </pre>
             *
             * <code>fixed32 substreamindex = 3;</code>
             */
            public int getSubstreamindex() {
                return instance.getSubstreamindex();
            }
            /**
             * <pre>
             *本设备子通道号
             * </pre>
             *
             * <code>fixed32 substreamindex = 3;</code>
             */
            public Builder setSubstreamindex(int value) {
                copyOnWrite();
                instance.setSubstreamindex(value);
                return this;
            }
            /**
             * <pre>
             *本设备子通道号
             * </pre>
             *
             * <code>fixed32 substreamindex = 3;</code>
             */
            public Builder clearSubstreamindex() {
                copyOnWrite();
                instance.clearSubstreamindex();
                return this;
            }

            /**
             * <pre>
             *通知的目标设备,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 deviceid = 4;</code>
             */
            public java.util.List<java.lang.Integer>
            getDeviceidList() {
                return java.util.Collections.unmodifiableList(
                        instance.getDeviceidList());
            }
            /**
             * <pre>
             *通知的目标设备,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 deviceid = 4;</code>
             */
            public int getDeviceidCount() {
                return instance.getDeviceidCount();
            }
            /**
             * <pre>
             *通知的目标设备,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 deviceid = 4;</code>
             */
            public int getDeviceid(int index) {
                return instance.getDeviceid(index);
            }
            /**
             * <pre>
             *通知的目标设备,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 deviceid = 4;</code>
             */
            public Builder setDeviceid(
                    int index, int value) {
                copyOnWrite();
                instance.setDeviceid(index, value);
                return this;
            }
            /**
             * <pre>
             *通知的目标设备,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 deviceid = 4;</code>
             */
            public Builder addDeviceid(int value) {
                copyOnWrite();
                instance.addDeviceid(value);
                return this;
            }
            /**
             * <pre>
             *通知的目标设备,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 deviceid = 4;</code>
             */
            public Builder addAllDeviceid(
                    java.lang.Iterable<? extends java.lang.Integer> values) {
                copyOnWrite();
                instance.addAllDeviceid(values);
                return this;
            }
            /**
             * <pre>
             *通知的目标设备,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 deviceid = 4;</code>
             */
            public Builder clearDeviceid() {
                copyOnWrite();
                instance.clearDeviceid();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Type_DoReqStreamPush)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoReqStreamPush();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    deviceid_.makeImmutable();
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoReqStreamPush other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoReqStreamPush) arg1;
                    triggeruserval_ = visitor.visitInt(triggeruserval_ != 0, triggeruserval_,
                            other.triggeruserval_ != 0, other.triggeruserval_);
                    handledeviceid_ = visitor.visitInt(handledeviceid_ != 0, handledeviceid_,
                            other.handledeviceid_ != 0, other.handledeviceid_);
                    substreamindex_ = visitor.visitInt(substreamindex_ != 0, substreamindex_,
                            other.substreamindex_ != 0, other.substreamindex_);
                    deviceid_= visitor.visitIntList(deviceid_, other.deviceid_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                        bitField0_ |= other.bitField0_;
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 13: {

                                    triggeruserval_ = input.readFixed32();
                                    break;
                                }
                                case 21: {

                                    handledeviceid_ = input.readFixed32();
                                    break;
                                }
                                case 29: {

                                    substreamindex_ = input.readFixed32();
                                    break;
                                }
                                case 37: {
                                    if (!deviceid_.isModifiable()) {
                                        deviceid_ =
                                                com.google.protobuf.GeneratedMessageLite.mutableCopy(deviceid_);
                                    }
                                    deviceid_.addInt(input.readFixed32());
                                    break;
                                }
                                case 34: {
                                    int length = input.readRawVarint32();
                                    int limit = input.pushLimit(length);
                                    if (!deviceid_.isModifiable() && input.getBytesUntilLimit() > 0) {
                                        final int currentSize = deviceid_.size();
                                        deviceid_ = deviceid_.mutableCopyWithCapacity(
                                                currentSize + (length/4));
                                    }
                                    while (input.getBytesUntilLimit() > 0) {
                                        deviceid_.addInt(input.readFixed32());
                                    }
                                    input.popLimit(limit);
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoReqStreamPush.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Type_DoReqStreamPush)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoReqStreamPush DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Type_DoReqStreamPush();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoReqStreamPush getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Type_DoReqStreamPush> PARSER;

        public static com.google.protobuf.Parser<pbui_Type_DoReqStreamPush> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Type_StreamPushOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Type_StreamPush)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <pre>
         *参见该文件中的triggeruserval定义
         * </pre>
         *
         * <code>fixed32 triggeruserval = 1;</code>
         */
        int getTriggeruserval();

        /**
         * <pre>
         *发起请求的设备ID
         * </pre>
         *
         * <code>fixed32 deviceid = 2;</code>
         */
        int getDeviceid();

        /**
         * <pre>
         *本设备子通道号
         * </pre>
         *
         * <code>fixed32 substreamindex = 3;</code>
         */
        int getSubstreamindex();
    }
    /**
     * <pre>
     *推送流通知
     *type:Pb_TYPE_MEET_INTERFACE_STREAMPUSH
     *method: notify
     *当为询问模式时，回调函数返回1表示同意播放
     * </pre>
     *
     * Protobuf type {@code pbui_Type_StreamPush}
     */
    public  static final class pbui_Type_StreamPush extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Type_StreamPush, pbui_Type_StreamPush.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Type_StreamPush)
            pbui_Type_StreamPushOrBuilder {
        private pbui_Type_StreamPush() {
        }
        public static final int TRIGGERUSERVAL_FIELD_NUMBER = 1;
        private int triggeruserval_;
        /**
         * <pre>
         *参见该文件中的triggeruserval定义
         * </pre>
         *
         * <code>fixed32 triggeruserval = 1;</code>
         */
        public int getTriggeruserval() {
            return triggeruserval_;
        }
        /**
         * <pre>
         *参见该文件中的triggeruserval定义
         * </pre>
         *
         * <code>fixed32 triggeruserval = 1;</code>
         */
        private void setTriggeruserval(int value) {

            triggeruserval_ = value;
        }
        /**
         * <pre>
         *参见该文件中的triggeruserval定义
         * </pre>
         *
         * <code>fixed32 triggeruserval = 1;</code>
         */
        private void clearTriggeruserval() {

            triggeruserval_ = 0;
        }

        public static final int DEVICEID_FIELD_NUMBER = 2;
        private int deviceid_;
        /**
         * <pre>
         *发起请求的设备ID
         * </pre>
         *
         * <code>fixed32 deviceid = 2;</code>
         */
        public int getDeviceid() {
            return deviceid_;
        }
        /**
         * <pre>
         *发起请求的设备ID
         * </pre>
         *
         * <code>fixed32 deviceid = 2;</code>
         */
        private void setDeviceid(int value) {

            deviceid_ = value;
        }
        /**
         * <pre>
         *发起请求的设备ID
         * </pre>
         *
         * <code>fixed32 deviceid = 2;</code>
         */
        private void clearDeviceid() {

            deviceid_ = 0;
        }

        public static final int SUBSTREAMINDEX_FIELD_NUMBER = 3;
        private int substreamindex_;
        /**
         * <pre>
         *本设备子通道号
         * </pre>
         *
         * <code>fixed32 substreamindex = 3;</code>
         */
        public int getSubstreamindex() {
            return substreamindex_;
        }
        /**
         * <pre>
         *本设备子通道号
         * </pre>
         *
         * <code>fixed32 substreamindex = 3;</code>
         */
        private void setSubstreamindex(int value) {

            substreamindex_ = value;
        }
        /**
         * <pre>
         *本设备子通道号
         * </pre>
         *
         * <code>fixed32 substreamindex = 3;</code>
         */
        private void clearSubstreamindex() {

            substreamindex_ = 0;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (triggeruserval_ != 0) {
                output.writeFixed32(1, triggeruserval_);
            }
            if (deviceid_ != 0) {
                output.writeFixed32(2, deviceid_);
            }
            if (substreamindex_ != 0) {
                output.writeFixed32(3, substreamindex_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (triggeruserval_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(1, triggeruserval_);
            }
            if (deviceid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(2, deviceid_);
            }
            if (substreamindex_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(3, substreamindex_);
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_StreamPush parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_StreamPush parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_StreamPush parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_StreamPush parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_StreamPush parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_StreamPush parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_StreamPush parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_StreamPush parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_StreamPush parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_StreamPush parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_StreamPush parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_StreamPush parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_StreamPush prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *推送流通知
         *type:Pb_TYPE_MEET_INTERFACE_STREAMPUSH
         *method: notify
         *当为询问模式时，回调函数返回1表示同意播放
         * </pre>
         *
         * Protobuf type {@code pbui_Type_StreamPush}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_StreamPush, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Type_StreamPush)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_StreamPushOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_StreamPush.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <pre>
             *参见该文件中的triggeruserval定义
             * </pre>
             *
             * <code>fixed32 triggeruserval = 1;</code>
             */
            public int getTriggeruserval() {
                return instance.getTriggeruserval();
            }
            /**
             * <pre>
             *参见该文件中的triggeruserval定义
             * </pre>
             *
             * <code>fixed32 triggeruserval = 1;</code>
             */
            public Builder setTriggeruserval(int value) {
                copyOnWrite();
                instance.setTriggeruserval(value);
                return this;
            }
            /**
             * <pre>
             *参见该文件中的triggeruserval定义
             * </pre>
             *
             * <code>fixed32 triggeruserval = 1;</code>
             */
            public Builder clearTriggeruserval() {
                copyOnWrite();
                instance.clearTriggeruserval();
                return this;
            }

            /**
             * <pre>
             *发起请求的设备ID
             * </pre>
             *
             * <code>fixed32 deviceid = 2;</code>
             */
            public int getDeviceid() {
                return instance.getDeviceid();
            }
            /**
             * <pre>
             *发起请求的设备ID
             * </pre>
             *
             * <code>fixed32 deviceid = 2;</code>
             */
            public Builder setDeviceid(int value) {
                copyOnWrite();
                instance.setDeviceid(value);
                return this;
            }
            /**
             * <pre>
             *发起请求的设备ID
             * </pre>
             *
             * <code>fixed32 deviceid = 2;</code>
             */
            public Builder clearDeviceid() {
                copyOnWrite();
                instance.clearDeviceid();
                return this;
            }

            /**
             * <pre>
             *本设备子通道号
             * </pre>
             *
             * <code>fixed32 substreamindex = 3;</code>
             */
            public int getSubstreamindex() {
                return instance.getSubstreamindex();
            }
            /**
             * <pre>
             *本设备子通道号
             * </pre>
             *
             * <code>fixed32 substreamindex = 3;</code>
             */
            public Builder setSubstreamindex(int value) {
                copyOnWrite();
                instance.setSubstreamindex(value);
                return this;
            }
            /**
             * <pre>
             *本设备子通道号
             * </pre>
             *
             * <code>fixed32 substreamindex = 3;</code>
             */
            public Builder clearSubstreamindex() {
                copyOnWrite();
                instance.clearSubstreamindex();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Type_StreamPush)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_StreamPush();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_StreamPush other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_StreamPush) arg1;
                    triggeruserval_ = visitor.visitInt(triggeruserval_ != 0, triggeruserval_,
                            other.triggeruserval_ != 0, other.triggeruserval_);
                    deviceid_ = visitor.visitInt(deviceid_ != 0, deviceid_,
                            other.deviceid_ != 0, other.deviceid_);
                    substreamindex_ = visitor.visitInt(substreamindex_ != 0, substreamindex_,
                            other.substreamindex_ != 0, other.substreamindex_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 13: {

                                    triggeruserval_ = input.readFixed32();
                                    break;
                                }
                                case 21: {

                                    deviceid_ = input.readFixed32();
                                    break;
                                }
                                case 29: {

                                    substreamindex_ = input.readFixed32();
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_StreamPush.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Type_StreamPush)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_StreamPush DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Type_StreamPush();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_StreamPush getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Type_StreamPush> PARSER;

        public static com.google.protobuf.Parser<pbui_Type_StreamPush> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Type_DoStreamPushOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Type_DoStreamPush)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <pre>
         *参见该文件中的triggeruserval定义
         * </pre>
         *
         * <code>fixed32 triggeruserval = 1;</code>
         */
        int getTriggeruserval();

        /**
         * <pre>
         *发起请求的设备ID
         * </pre>
         *
         * <code>fixed32 srcdeviceid = 2;</code>
         */
        int getSrcdeviceid();

        /**
         * <pre>
         *本设备子通道号
         * </pre>
         *
         * <code>fixed32 substreamindex = 3;</code>
         */
        int getSubstreamindex();

        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 4;</code>
         */
        java.util.List<java.lang.Integer> getDeviceidList();
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 4;</code>
         */
        int getDeviceidCount();
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 4;</code>
         */
        int getDeviceid(int index);
    }
    /**
     * <pre>
     *推送流
     *type:Pb_TYPE_MEET_INTERFACE_STREAMPLAY
     *method: push
     * </pre>
     *
     * Protobuf type {@code pbui_Type_DoStreamPush}
     */
    public  static final class pbui_Type_DoStreamPush extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Type_DoStreamPush, pbui_Type_DoStreamPush.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Type_DoStreamPush)
            pbui_Type_DoStreamPushOrBuilder {
        private pbui_Type_DoStreamPush() {
            deviceid_ = emptyIntList();
        }
        private int bitField0_;
        public static final int TRIGGERUSERVAL_FIELD_NUMBER = 1;
        private int triggeruserval_;
        /**
         * <pre>
         *参见该文件中的triggeruserval定义
         * </pre>
         *
         * <code>fixed32 triggeruserval = 1;</code>
         */
        public int getTriggeruserval() {
            return triggeruserval_;
        }
        /**
         * <pre>
         *参见该文件中的triggeruserval定义
         * </pre>
         *
         * <code>fixed32 triggeruserval = 1;</code>
         */
        private void setTriggeruserval(int value) {

            triggeruserval_ = value;
        }
        /**
         * <pre>
         *参见该文件中的triggeruserval定义
         * </pre>
         *
         * <code>fixed32 triggeruserval = 1;</code>
         */
        private void clearTriggeruserval() {

            triggeruserval_ = 0;
        }

        public static final int SRCDEVICEID_FIELD_NUMBER = 2;
        private int srcdeviceid_;
        /**
         * <pre>
         *发起请求的设备ID
         * </pre>
         *
         * <code>fixed32 srcdeviceid = 2;</code>
         */
        public int getSrcdeviceid() {
            return srcdeviceid_;
        }
        /**
         * <pre>
         *发起请求的设备ID
         * </pre>
         *
         * <code>fixed32 srcdeviceid = 2;</code>
         */
        private void setSrcdeviceid(int value) {

            srcdeviceid_ = value;
        }
        /**
         * <pre>
         *发起请求的设备ID
         * </pre>
         *
         * <code>fixed32 srcdeviceid = 2;</code>
         */
        private void clearSrcdeviceid() {

            srcdeviceid_ = 0;
        }

        public static final int SUBSTREAMINDEX_FIELD_NUMBER = 3;
        private int substreamindex_;
        /**
         * <pre>
         *本设备子通道号
         * </pre>
         *
         * <code>fixed32 substreamindex = 3;</code>
         */
        public int getSubstreamindex() {
            return substreamindex_;
        }
        /**
         * <pre>
         *本设备子通道号
         * </pre>
         *
         * <code>fixed32 substreamindex = 3;</code>
         */
        private void setSubstreamindex(int value) {

            substreamindex_ = value;
        }
        /**
         * <pre>
         *本设备子通道号
         * </pre>
         *
         * <code>fixed32 substreamindex = 3;</code>
         */
        private void clearSubstreamindex() {

            substreamindex_ = 0;
        }

        public static final int DEVICEID_FIELD_NUMBER = 4;
        private com.google.protobuf.Internal.IntList deviceid_;
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 4;</code>
         */
        public java.util.List<java.lang.Integer>
        getDeviceidList() {
            return deviceid_;
        }
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 4;</code>
         */
        public int getDeviceidCount() {
            return deviceid_.size();
        }
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 4;</code>
         */
        public int getDeviceid(int index) {
            return deviceid_.getInt(index);
        }
        private void ensureDeviceidIsMutable() {
            if (!deviceid_.isModifiable()) {
                deviceid_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(deviceid_);
            }
        }
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 4;</code>
         */
        private void setDeviceid(
                int index, int value) {
            ensureDeviceidIsMutable();
            deviceid_.setInt(index, value);
        }
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 4;</code>
         */
        private void addDeviceid(int value) {
            ensureDeviceidIsMutable();
            deviceid_.addInt(value);
        }
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 4;</code>
         */
        private void addAllDeviceid(
                java.lang.Iterable<? extends java.lang.Integer> values) {
            ensureDeviceidIsMutable();
            com.google.protobuf.AbstractMessageLite.addAll(
                    values, deviceid_);
        }
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 4;</code>
         */
        private void clearDeviceid() {
            deviceid_ = emptyIntList();
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (triggeruserval_ != 0) {
                output.writeFixed32(1, triggeruserval_);
            }
            if (srcdeviceid_ != 0) {
                output.writeFixed32(2, srcdeviceid_);
            }
            if (substreamindex_ != 0) {
                output.writeFixed32(3, substreamindex_);
            }
            for (int i = 0; i < deviceid_.size(); i++) {
                output.writeFixed32(4, deviceid_.getInt(i));
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (triggeruserval_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(1, triggeruserval_);
            }
            if (srcdeviceid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(2, srcdeviceid_);
            }
            if (substreamindex_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(3, substreamindex_);
            }
            {
                int dataSize = 0;
                dataSize = 4 * getDeviceidList().size();
                size += dataSize;
                size += 1 * getDeviceidList().size();
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoStreamPush parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoStreamPush parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoStreamPush parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoStreamPush parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoStreamPush parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoStreamPush parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoStreamPush parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoStreamPush parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoStreamPush parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoStreamPush parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoStreamPush parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoStreamPush parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoStreamPush prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *推送流
         *type:Pb_TYPE_MEET_INTERFACE_STREAMPLAY
         *method: push
         * </pre>
         *
         * Protobuf type {@code pbui_Type_DoStreamPush}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoStreamPush, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Type_DoStreamPush)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoStreamPushOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoStreamPush.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <pre>
             *参见该文件中的triggeruserval定义
             * </pre>
             *
             * <code>fixed32 triggeruserval = 1;</code>
             */
            public int getTriggeruserval() {
                return instance.getTriggeruserval();
            }
            /**
             * <pre>
             *参见该文件中的triggeruserval定义
             * </pre>
             *
             * <code>fixed32 triggeruserval = 1;</code>
             */
            public Builder setTriggeruserval(int value) {
                copyOnWrite();
                instance.setTriggeruserval(value);
                return this;
            }
            /**
             * <pre>
             *参见该文件中的triggeruserval定义
             * </pre>
             *
             * <code>fixed32 triggeruserval = 1;</code>
             */
            public Builder clearTriggeruserval() {
                copyOnWrite();
                instance.clearTriggeruserval();
                return this;
            }

            /**
             * <pre>
             *发起请求的设备ID
             * </pre>
             *
             * <code>fixed32 srcdeviceid = 2;</code>
             */
            public int getSrcdeviceid() {
                return instance.getSrcdeviceid();
            }
            /**
             * <pre>
             *发起请求的设备ID
             * </pre>
             *
             * <code>fixed32 srcdeviceid = 2;</code>
             */
            public Builder setSrcdeviceid(int value) {
                copyOnWrite();
                instance.setSrcdeviceid(value);
                return this;
            }
            /**
             * <pre>
             *发起请求的设备ID
             * </pre>
             *
             * <code>fixed32 srcdeviceid = 2;</code>
             */
            public Builder clearSrcdeviceid() {
                copyOnWrite();
                instance.clearSrcdeviceid();
                return this;
            }

            /**
             * <pre>
             *本设备子通道号
             * </pre>
             *
             * <code>fixed32 substreamindex = 3;</code>
             */
            public int getSubstreamindex() {
                return instance.getSubstreamindex();
            }
            /**
             * <pre>
             *本设备子通道号
             * </pre>
             *
             * <code>fixed32 substreamindex = 3;</code>
             */
            public Builder setSubstreamindex(int value) {
                copyOnWrite();
                instance.setSubstreamindex(value);
                return this;
            }
            /**
             * <pre>
             *本设备子通道号
             * </pre>
             *
             * <code>fixed32 substreamindex = 3;</code>
             */
            public Builder clearSubstreamindex() {
                copyOnWrite();
                instance.clearSubstreamindex();
                return this;
            }

            /**
             * <pre>
             *通知的目标设备,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 deviceid = 4;</code>
             */
            public java.util.List<java.lang.Integer>
            getDeviceidList() {
                return java.util.Collections.unmodifiableList(
                        instance.getDeviceidList());
            }
            /**
             * <pre>
             *通知的目标设备,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 deviceid = 4;</code>
             */
            public int getDeviceidCount() {
                return instance.getDeviceidCount();
            }
            /**
             * <pre>
             *通知的目标设备,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 deviceid = 4;</code>
             */
            public int getDeviceid(int index) {
                return instance.getDeviceid(index);
            }
            /**
             * <pre>
             *通知的目标设备,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 deviceid = 4;</code>
             */
            public Builder setDeviceid(
                    int index, int value) {
                copyOnWrite();
                instance.setDeviceid(index, value);
                return this;
            }
            /**
             * <pre>
             *通知的目标设备,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 deviceid = 4;</code>
             */
            public Builder addDeviceid(int value) {
                copyOnWrite();
                instance.addDeviceid(value);
                return this;
            }
            /**
             * <pre>
             *通知的目标设备,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 deviceid = 4;</code>
             */
            public Builder addAllDeviceid(
                    java.lang.Iterable<? extends java.lang.Integer> values) {
                copyOnWrite();
                instance.addAllDeviceid(values);
                return this;
            }
            /**
             * <pre>
             *通知的目标设备,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 deviceid = 4;</code>
             */
            public Builder clearDeviceid() {
                copyOnWrite();
                instance.clearDeviceid();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Type_DoStreamPush)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoStreamPush();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    deviceid_.makeImmutable();
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoStreamPush other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoStreamPush) arg1;
                    triggeruserval_ = visitor.visitInt(triggeruserval_ != 0, triggeruserval_,
                            other.triggeruserval_ != 0, other.triggeruserval_);
                    srcdeviceid_ = visitor.visitInt(srcdeviceid_ != 0, srcdeviceid_,
                            other.srcdeviceid_ != 0, other.srcdeviceid_);
                    substreamindex_ = visitor.visitInt(substreamindex_ != 0, substreamindex_,
                            other.substreamindex_ != 0, other.substreamindex_);
                    deviceid_= visitor.visitIntList(deviceid_, other.deviceid_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                        bitField0_ |= other.bitField0_;
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 13: {

                                    triggeruserval_ = input.readFixed32();
                                    break;
                                }
                                case 21: {

                                    srcdeviceid_ = input.readFixed32();
                                    break;
                                }
                                case 29: {

                                    substreamindex_ = input.readFixed32();
                                    break;
                                }
                                case 37: {
                                    if (!deviceid_.isModifiable()) {
                                        deviceid_ =
                                                com.google.protobuf.GeneratedMessageLite.mutableCopy(deviceid_);
                                    }
                                    deviceid_.addInt(input.readFixed32());
                                    break;
                                }
                                case 34: {
                                    int length = input.readRawVarint32();
                                    int limit = input.pushLimit(length);
                                    if (!deviceid_.isModifiable() && input.getBytesUntilLimit() > 0) {
                                        final int currentSize = deviceid_.size();
                                        deviceid_ = deviceid_.mutableCopyWithCapacity(
                                                currentSize + (length/4));
                                    }
                                    while (input.getBytesUntilLimit() > 0) {
                                        deviceid_.addInt(input.readFixed32());
                                    }
                                    input.popLimit(limit);
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoStreamPush.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Type_DoStreamPush)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoStreamPush DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Type_DoStreamPush();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_DoStreamPush getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Type_DoStreamPush> PARSER;

        public static com.google.protobuf.Parser<pbui_Type_DoStreamPush> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Type_MeetStreamPlayOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Type_MeetStreamPlay)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <pre>
         *触发器ID
         * </pre>
         *
         * <code>fixed32 triggerid = 1;</code>
         */
        int getTriggerid();

        /**
         * <pre>
         *创建执行该触发器的设备ID
         * </pre>
         *
         * <code>fixed32 createdeviceid = 2;</code>
         */
        int getCreatedeviceid();

        /**
         * <pre>
         *流源设备ID
         * </pre>
         *
         * <code>fixed32 deviceid = 3;</code>
         */
        int getDeviceid();

        /**
         * <pre>
         *流源设备子通道ID
         * </pre>
         *
         * <code>fixed32 subid = 4;</code>
         */
        int getSubid();

        /**
         * <pre>
         *播放所用的资源ID
         * </pre>
         *
         * <code>fixed32 res = 5;</code>
         */
        int getRes();

        /**
         * <pre>
         *参见该文件中的triggeruserval定义
         * </pre>
         *
         * <code>fixed32 triggeruserval = 6;</code>
         */
        int getTriggeruserval();
    }
    /**
     * <pre>
     *流播放通知
     *type:Pb_TYPE_MEET_INTERFACE_STREAMPLAY
     *callback
     *method: notify
     * </pre>
     *
     * Protobuf type {@code pbui_Type_MeetStreamPlay}
     */
    public  static final class pbui_Type_MeetStreamPlay extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Type_MeetStreamPlay, pbui_Type_MeetStreamPlay.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Type_MeetStreamPlay)
            pbui_Type_MeetStreamPlayOrBuilder {
        private pbui_Type_MeetStreamPlay() {
        }
        public static final int TRIGGERID_FIELD_NUMBER = 1;
        private int triggerid_;
        /**
         * <pre>
         *触发器ID
         * </pre>
         *
         * <code>fixed32 triggerid = 1;</code>
         */
        public int getTriggerid() {
            return triggerid_;
        }
        /**
         * <pre>
         *触发器ID
         * </pre>
         *
         * <code>fixed32 triggerid = 1;</code>
         */
        private void setTriggerid(int value) {

            triggerid_ = value;
        }
        /**
         * <pre>
         *触发器ID
         * </pre>
         *
         * <code>fixed32 triggerid = 1;</code>
         */
        private void clearTriggerid() {

            triggerid_ = 0;
        }

        public static final int CREATEDEVICEID_FIELD_NUMBER = 2;
        private int createdeviceid_;
        /**
         * <pre>
         *创建执行该触发器的设备ID
         * </pre>
         *
         * <code>fixed32 createdeviceid = 2;</code>
         */
        public int getCreatedeviceid() {
            return createdeviceid_;
        }
        /**
         * <pre>
         *创建执行该触发器的设备ID
         * </pre>
         *
         * <code>fixed32 createdeviceid = 2;</code>
         */
        private void setCreatedeviceid(int value) {

            createdeviceid_ = value;
        }
        /**
         * <pre>
         *创建执行该触发器的设备ID
         * </pre>
         *
         * <code>fixed32 createdeviceid = 2;</code>
         */
        private void clearCreatedeviceid() {

            createdeviceid_ = 0;
        }

        public static final int DEVICEID_FIELD_NUMBER = 3;
        private int deviceid_;
        /**
         * <pre>
         *流源设备ID
         * </pre>
         *
         * <code>fixed32 deviceid = 3;</code>
         */
        public int getDeviceid() {
            return deviceid_;
        }
        /**
         * <pre>
         *流源设备ID
         * </pre>
         *
         * <code>fixed32 deviceid = 3;</code>
         */
        private void setDeviceid(int value) {

            deviceid_ = value;
        }
        /**
         * <pre>
         *流源设备ID
         * </pre>
         *
         * <code>fixed32 deviceid = 3;</code>
         */
        private void clearDeviceid() {

            deviceid_ = 0;
        }

        public static final int SUBID_FIELD_NUMBER = 4;
        private int subid_;
        /**
         * <pre>
         *流源设备子通道ID
         * </pre>
         *
         * <code>fixed32 subid = 4;</code>
         */
        public int getSubid() {
            return subid_;
        }
        /**
         * <pre>
         *流源设备子通道ID
         * </pre>
         *
         * <code>fixed32 subid = 4;</code>
         */
        private void setSubid(int value) {

            subid_ = value;
        }
        /**
         * <pre>
         *流源设备子通道ID
         * </pre>
         *
         * <code>fixed32 subid = 4;</code>
         */
        private void clearSubid() {

            subid_ = 0;
        }

        public static final int RES_FIELD_NUMBER = 5;
        private int res_;
        /**
         * <pre>
         *播放所用的资源ID
         * </pre>
         *
         * <code>fixed32 res = 5;</code>
         */
        public int getRes() {
            return res_;
        }
        /**
         * <pre>
         *播放所用的资源ID
         * </pre>
         *
         * <code>fixed32 res = 5;</code>
         */
        private void setRes(int value) {

            res_ = value;
        }
        /**
         * <pre>
         *播放所用的资源ID
         * </pre>
         *
         * <code>fixed32 res = 5;</code>
         */
        private void clearRes() {

            res_ = 0;
        }

        public static final int TRIGGERUSERVAL_FIELD_NUMBER = 6;
        private int triggeruserval_;
        /**
         * <pre>
         *参见该文件中的triggeruserval定义
         * </pre>
         *
         * <code>fixed32 triggeruserval = 6;</code>
         */
        public int getTriggeruserval() {
            return triggeruserval_;
        }
        /**
         * <pre>
         *参见该文件中的triggeruserval定义
         * </pre>
         *
         * <code>fixed32 triggeruserval = 6;</code>
         */
        private void setTriggeruserval(int value) {

            triggeruserval_ = value;
        }
        /**
         * <pre>
         *参见该文件中的triggeruserval定义
         * </pre>
         *
         * <code>fixed32 triggeruserval = 6;</code>
         */
        private void clearTriggeruserval() {

            triggeruserval_ = 0;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (triggerid_ != 0) {
                output.writeFixed32(1, triggerid_);
            }
            if (createdeviceid_ != 0) {
                output.writeFixed32(2, createdeviceid_);
            }
            if (deviceid_ != 0) {
                output.writeFixed32(3, deviceid_);
            }
            if (subid_ != 0) {
                output.writeFixed32(4, subid_);
            }
            if (res_ != 0) {
                output.writeFixed32(5, res_);
            }
            if (triggeruserval_ != 0) {
                output.writeFixed32(6, triggeruserval_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (triggerid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(1, triggerid_);
            }
            if (createdeviceid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(2, createdeviceid_);
            }
            if (deviceid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(3, deviceid_);
            }
            if (subid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(4, subid_);
            }
            if (res_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(5, res_);
            }
            if (triggeruserval_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(6, triggeruserval_);
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStreamPlay parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStreamPlay parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStreamPlay parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStreamPlay parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStreamPlay parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStreamPlay parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStreamPlay parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStreamPlay parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStreamPlay parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStreamPlay parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStreamPlay parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStreamPlay parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStreamPlay prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *流播放通知
         *type:Pb_TYPE_MEET_INTERFACE_STREAMPLAY
         *callback
         *method: notify
         * </pre>
         *
         * Protobuf type {@code pbui_Type_MeetStreamPlay}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStreamPlay, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Type_MeetStreamPlay)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStreamPlayOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStreamPlay.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <pre>
             *触发器ID
             * </pre>
             *
             * <code>fixed32 triggerid = 1;</code>
             */
            public int getTriggerid() {
                return instance.getTriggerid();
            }
            /**
             * <pre>
             *触发器ID
             * </pre>
             *
             * <code>fixed32 triggerid = 1;</code>
             */
            public Builder setTriggerid(int value) {
                copyOnWrite();
                instance.setTriggerid(value);
                return this;
            }
            /**
             * <pre>
             *触发器ID
             * </pre>
             *
             * <code>fixed32 triggerid = 1;</code>
             */
            public Builder clearTriggerid() {
                copyOnWrite();
                instance.clearTriggerid();
                return this;
            }

            /**
             * <pre>
             *创建执行该触发器的设备ID
             * </pre>
             *
             * <code>fixed32 createdeviceid = 2;</code>
             */
            public int getCreatedeviceid() {
                return instance.getCreatedeviceid();
            }
            /**
             * <pre>
             *创建执行该触发器的设备ID
             * </pre>
             *
             * <code>fixed32 createdeviceid = 2;</code>
             */
            public Builder setCreatedeviceid(int value) {
                copyOnWrite();
                instance.setCreatedeviceid(value);
                return this;
            }
            /**
             * <pre>
             *创建执行该触发器的设备ID
             * </pre>
             *
             * <code>fixed32 createdeviceid = 2;</code>
             */
            public Builder clearCreatedeviceid() {
                copyOnWrite();
                instance.clearCreatedeviceid();
                return this;
            }

            /**
             * <pre>
             *流源设备ID
             * </pre>
             *
             * <code>fixed32 deviceid = 3;</code>
             */
            public int getDeviceid() {
                return instance.getDeviceid();
            }
            /**
             * <pre>
             *流源设备ID
             * </pre>
             *
             * <code>fixed32 deviceid = 3;</code>
             */
            public Builder setDeviceid(int value) {
                copyOnWrite();
                instance.setDeviceid(value);
                return this;
            }
            /**
             * <pre>
             *流源设备ID
             * </pre>
             *
             * <code>fixed32 deviceid = 3;</code>
             */
            public Builder clearDeviceid() {
                copyOnWrite();
                instance.clearDeviceid();
                return this;
            }

            /**
             * <pre>
             *流源设备子通道ID
             * </pre>
             *
             * <code>fixed32 subid = 4;</code>
             */
            public int getSubid() {
                return instance.getSubid();
            }
            /**
             * <pre>
             *流源设备子通道ID
             * </pre>
             *
             * <code>fixed32 subid = 4;</code>
             */
            public Builder setSubid(int value) {
                copyOnWrite();
                instance.setSubid(value);
                return this;
            }
            /**
             * <pre>
             *流源设备子通道ID
             * </pre>
             *
             * <code>fixed32 subid = 4;</code>
             */
            public Builder clearSubid() {
                copyOnWrite();
                instance.clearSubid();
                return this;
            }

            /**
             * <pre>
             *播放所用的资源ID
             * </pre>
             *
             * <code>fixed32 res = 5;</code>
             */
            public int getRes() {
                return instance.getRes();
            }
            /**
             * <pre>
             *播放所用的资源ID
             * </pre>
             *
             * <code>fixed32 res = 5;</code>
             */
            public Builder setRes(int value) {
                copyOnWrite();
                instance.setRes(value);
                return this;
            }
            /**
             * <pre>
             *播放所用的资源ID
             * </pre>
             *
             * <code>fixed32 res = 5;</code>
             */
            public Builder clearRes() {
                copyOnWrite();
                instance.clearRes();
                return this;
            }

            /**
             * <pre>
             *参见该文件中的triggeruserval定义
             * </pre>
             *
             * <code>fixed32 triggeruserval = 6;</code>
             */
            public int getTriggeruserval() {
                return instance.getTriggeruserval();
            }
            /**
             * <pre>
             *参见该文件中的triggeruserval定义
             * </pre>
             *
             * <code>fixed32 triggeruserval = 6;</code>
             */
            public Builder setTriggeruserval(int value) {
                copyOnWrite();
                instance.setTriggeruserval(value);
                return this;
            }
            /**
             * <pre>
             *参见该文件中的triggeruserval定义
             * </pre>
             *
             * <code>fixed32 triggeruserval = 6;</code>
             */
            public Builder clearTriggeruserval() {
                copyOnWrite();
                instance.clearTriggeruserval();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Type_MeetStreamPlay)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStreamPlay();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStreamPlay other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStreamPlay) arg1;
                    triggerid_ = visitor.visitInt(triggerid_ != 0, triggerid_,
                            other.triggerid_ != 0, other.triggerid_);
                    createdeviceid_ = visitor.visitInt(createdeviceid_ != 0, createdeviceid_,
                            other.createdeviceid_ != 0, other.createdeviceid_);
                    deviceid_ = visitor.visitInt(deviceid_ != 0, deviceid_,
                            other.deviceid_ != 0, other.deviceid_);
                    subid_ = visitor.visitInt(subid_ != 0, subid_,
                            other.subid_ != 0, other.subid_);
                    res_ = visitor.visitInt(res_ != 0, res_,
                            other.res_ != 0, other.res_);
                    triggeruserval_ = visitor.visitInt(triggeruserval_ != 0, triggeruserval_,
                            other.triggeruserval_ != 0, other.triggeruserval_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 13: {

                                    triggerid_ = input.readFixed32();
                                    break;
                                }
                                case 21: {

                                    createdeviceid_ = input.readFixed32();
                                    break;
                                }
                                case 29: {

                                    deviceid_ = input.readFixed32();
                                    break;
                                }
                                case 37: {

                                    subid_ = input.readFixed32();
                                    break;
                                }
                                case 45: {

                                    res_ = input.readFixed32();
                                    break;
                                }
                                case 53: {

                                    triggeruserval_ = input.readFixed32();
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStreamPlay.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Type_MeetStreamPlay)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStreamPlay DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Type_MeetStreamPlay();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStreamPlay getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Type_MeetStreamPlay> PARSER;

        public static com.google.protobuf.Parser<pbui_Type_MeetStreamPlay> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Type_MeetDoStreamPlayOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Type_MeetDoStreamPlay)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <pre>
         *设备ID
         * </pre>
         *
         * <code>fixed32 srcdeviceid = 1;</code>
         */
        int getSrcdeviceid();

        /**
         * <pre>
         *设备子通道
         * </pre>
         *
         * <code>fixed32 subid = 2;</code>
         */
        int getSubid();

        /**
         * <pre>
         *触发器标志
         * </pre>
         *
         * <code>fixed32 triggeruserval = 3;</code>
         */
        int getTriggeruserval();

        /**
         * <pre>
         *播放所用的资源,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 res = 4;</code>
         */
        java.util.List<java.lang.Integer> getResList();
        /**
         * <pre>
         *播放所用的资源,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 res = 4;</code>
         */
        int getResCount();
        /**
         * <pre>
         *播放所用的资源,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 res = 4;</code>
         */
        int getRes(int index);

        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 5;</code>
         */
        java.util.List<java.lang.Integer> getDeviceidList();
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 5;</code>
         */
        int getDeviceidCount();
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 5;</code>
         */
        int getDeviceid(int index);
    }
    /**
     * <pre>
     *流播放
     *type:Pb_TYPE_MEET_INTERFACE_STREAMPLAY
     *call
     *method: start
     * </pre>
     *
     * Protobuf type {@code pbui_Type_MeetDoStreamPlay}
     */
    public  static final class pbui_Type_MeetDoStreamPlay extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Type_MeetDoStreamPlay, pbui_Type_MeetDoStreamPlay.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Type_MeetDoStreamPlay)
            pbui_Type_MeetDoStreamPlayOrBuilder {
        private pbui_Type_MeetDoStreamPlay() {
            res_ = emptyIntList();
            deviceid_ = emptyIntList();
        }
        private int bitField0_;
        public static final int SRCDEVICEID_FIELD_NUMBER = 1;
        private int srcdeviceid_;
        /**
         * <pre>
         *设备ID
         * </pre>
         *
         * <code>fixed32 srcdeviceid = 1;</code>
         */
        public int getSrcdeviceid() {
            return srcdeviceid_;
        }
        /**
         * <pre>
         *设备ID
         * </pre>
         *
         * <code>fixed32 srcdeviceid = 1;</code>
         */
        private void setSrcdeviceid(int value) {

            srcdeviceid_ = value;
        }
        /**
         * <pre>
         *设备ID
         * </pre>
         *
         * <code>fixed32 srcdeviceid = 1;</code>
         */
        private void clearSrcdeviceid() {

            srcdeviceid_ = 0;
        }

        public static final int SUBID_FIELD_NUMBER = 2;
        private int subid_;
        /**
         * <pre>
         *设备子通道
         * </pre>
         *
         * <code>fixed32 subid = 2;</code>
         */
        public int getSubid() {
            return subid_;
        }
        /**
         * <pre>
         *设备子通道
         * </pre>
         *
         * <code>fixed32 subid = 2;</code>
         */
        private void setSubid(int value) {

            subid_ = value;
        }
        /**
         * <pre>
         *设备子通道
         * </pre>
         *
         * <code>fixed32 subid = 2;</code>
         */
        private void clearSubid() {

            subid_ = 0;
        }

        public static final int TRIGGERUSERVAL_FIELD_NUMBER = 3;
        private int triggeruserval_;
        /**
         * <pre>
         *触发器标志
         * </pre>
         *
         * <code>fixed32 triggeruserval = 3;</code>
         */
        public int getTriggeruserval() {
            return triggeruserval_;
        }
        /**
         * <pre>
         *触发器标志
         * </pre>
         *
         * <code>fixed32 triggeruserval = 3;</code>
         */
        private void setTriggeruserval(int value) {

            triggeruserval_ = value;
        }
        /**
         * <pre>
         *触发器标志
         * </pre>
         *
         * <code>fixed32 triggeruserval = 3;</code>
         */
        private void clearTriggeruserval() {

            triggeruserval_ = 0;
        }

        public static final int RES_FIELD_NUMBER = 4;
        private com.google.protobuf.Internal.IntList res_;
        /**
         * <pre>
         *播放所用的资源,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 res = 4;</code>
         */
        public java.util.List<java.lang.Integer>
        getResList() {
            return res_;
        }
        /**
         * <pre>
         *播放所用的资源,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 res = 4;</code>
         */
        public int getResCount() {
            return res_.size();
        }
        /**
         * <pre>
         *播放所用的资源,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 res = 4;</code>
         */
        public int getRes(int index) {
            return res_.getInt(index);
        }
        private void ensureResIsMutable() {
            if (!res_.isModifiable()) {
                res_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(res_);
            }
        }
        /**
         * <pre>
         *播放所用的资源,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 res = 4;</code>
         */
        private void setRes(
                int index, int value) {
            ensureResIsMutable();
            res_.setInt(index, value);
        }
        /**
         * <pre>
         *播放所用的资源,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 res = 4;</code>
         */
        private void addRes(int value) {
            ensureResIsMutable();
            res_.addInt(value);
        }
        /**
         * <pre>
         *播放所用的资源,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 res = 4;</code>
         */
        private void addAllRes(
                java.lang.Iterable<? extends java.lang.Integer> values) {
            ensureResIsMutable();
            com.google.protobuf.AbstractMessageLite.addAll(
                    values, res_);
        }
        /**
         * <pre>
         *播放所用的资源,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 res = 4;</code>
         */
        private void clearRes() {
            res_ = emptyIntList();
        }

        public static final int DEVICEID_FIELD_NUMBER = 5;
        private com.google.protobuf.Internal.IntList deviceid_;
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 5;</code>
         */
        public java.util.List<java.lang.Integer>
        getDeviceidList() {
            return deviceid_;
        }
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 5;</code>
         */
        public int getDeviceidCount() {
            return deviceid_.size();
        }
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 5;</code>
         */
        public int getDeviceid(int index) {
            return deviceid_.getInt(index);
        }
        private void ensureDeviceidIsMutable() {
            if (!deviceid_.isModifiable()) {
                deviceid_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(deviceid_);
            }
        }
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 5;</code>
         */
        private void setDeviceid(
                int index, int value) {
            ensureDeviceidIsMutable();
            deviceid_.setInt(index, value);
        }
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 5;</code>
         */
        private void addDeviceid(int value) {
            ensureDeviceidIsMutable();
            deviceid_.addInt(value);
        }
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 5;</code>
         */
        private void addAllDeviceid(
                java.lang.Iterable<? extends java.lang.Integer> values) {
            ensureDeviceidIsMutable();
            com.google.protobuf.AbstractMessageLite.addAll(
                    values, deviceid_);
        }
        /**
         * <pre>
         *通知的目标设备,为0表示全部
         * </pre>
         *
         * <code>repeated fixed32 deviceid = 5;</code>
         */
        private void clearDeviceid() {
            deviceid_ = emptyIntList();
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (srcdeviceid_ != 0) {
                output.writeFixed32(1, srcdeviceid_);
            }
            if (subid_ != 0) {
                output.writeFixed32(2, subid_);
            }
            if (triggeruserval_ != 0) {
                output.writeFixed32(3, triggeruserval_);
            }
            for (int i = 0; i < res_.size(); i++) {
                output.writeFixed32(4, res_.getInt(i));
            }
            for (int i = 0; i < deviceid_.size(); i++) {
                output.writeFixed32(5, deviceid_.getInt(i));
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (srcdeviceid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(1, srcdeviceid_);
            }
            if (subid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(2, subid_);
            }
            if (triggeruserval_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(3, triggeruserval_);
            }
            {
                int dataSize = 0;
                dataSize = 4 * getResList().size();
                size += dataSize;
                size += 1 * getResList().size();
            }
            {
                int dataSize = 0;
                dataSize = 4 * getDeviceidList().size();
                size += dataSize;
                size += 1 * getDeviceidList().size();
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoStreamPlay parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoStreamPlay parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoStreamPlay parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoStreamPlay parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoStreamPlay parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoStreamPlay parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoStreamPlay parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoStreamPlay parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoStreamPlay parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoStreamPlay parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoStreamPlay parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoStreamPlay parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoStreamPlay prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *流播放
         *type:Pb_TYPE_MEET_INTERFACE_STREAMPLAY
         *call
         *method: start
         * </pre>
         *
         * Protobuf type {@code pbui_Type_MeetDoStreamPlay}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoStreamPlay, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Type_MeetDoStreamPlay)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoStreamPlayOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoStreamPlay.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <pre>
             *设备ID
             * </pre>
             *
             * <code>fixed32 srcdeviceid = 1;</code>
             */
            public int getSrcdeviceid() {
                return instance.getSrcdeviceid();
            }
            /**
             * <pre>
             *设备ID
             * </pre>
             *
             * <code>fixed32 srcdeviceid = 1;</code>
             */
            public Builder setSrcdeviceid(int value) {
                copyOnWrite();
                instance.setSrcdeviceid(value);
                return this;
            }
            /**
             * <pre>
             *设备ID
             * </pre>
             *
             * <code>fixed32 srcdeviceid = 1;</code>
             */
            public Builder clearSrcdeviceid() {
                copyOnWrite();
                instance.clearSrcdeviceid();
                return this;
            }

            /**
             * <pre>
             *设备子通道
             * </pre>
             *
             * <code>fixed32 subid = 2;</code>
             */
            public int getSubid() {
                return instance.getSubid();
            }
            /**
             * <pre>
             *设备子通道
             * </pre>
             *
             * <code>fixed32 subid = 2;</code>
             */
            public Builder setSubid(int value) {
                copyOnWrite();
                instance.setSubid(value);
                return this;
            }
            /**
             * <pre>
             *设备子通道
             * </pre>
             *
             * <code>fixed32 subid = 2;</code>
             */
            public Builder clearSubid() {
                copyOnWrite();
                instance.clearSubid();
                return this;
            }

            /**
             * <pre>
             *触发器标志
             * </pre>
             *
             * <code>fixed32 triggeruserval = 3;</code>
             */
            public int getTriggeruserval() {
                return instance.getTriggeruserval();
            }
            /**
             * <pre>
             *触发器标志
             * </pre>
             *
             * <code>fixed32 triggeruserval = 3;</code>
             */
            public Builder setTriggeruserval(int value) {
                copyOnWrite();
                instance.setTriggeruserval(value);
                return this;
            }
            /**
             * <pre>
             *触发器标志
             * </pre>
             *
             * <code>fixed32 triggeruserval = 3;</code>
             */
            public Builder clearTriggeruserval() {
                copyOnWrite();
                instance.clearTriggeruserval();
                return this;
            }

            /**
             * <pre>
             *播放所用的资源,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 res = 4;</code>
             */
            public java.util.List<java.lang.Integer>
            getResList() {
                return java.util.Collections.unmodifiableList(
                        instance.getResList());
            }
            /**
             * <pre>
             *播放所用的资源,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 res = 4;</code>
             */
            public int getResCount() {
                return instance.getResCount();
            }
            /**
             * <pre>
             *播放所用的资源,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 res = 4;</code>
             */
            public int getRes(int index) {
                return instance.getRes(index);
            }
            /**
             * <pre>
             *播放所用的资源,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 res = 4;</code>
             */
            public Builder setRes(
                    int index, int value) {
                copyOnWrite();
                instance.setRes(index, value);
                return this;
            }
            /**
             * <pre>
             *播放所用的资源,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 res = 4;</code>
             */
            public Builder addRes(int value) {
                copyOnWrite();
                instance.addRes(value);
                return this;
            }
            /**
             * <pre>
             *播放所用的资源,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 res = 4;</code>
             */
            public Builder addAllRes(
                    java.lang.Iterable<? extends java.lang.Integer> values) {
                copyOnWrite();
                instance.addAllRes(values);
                return this;
            }
            /**
             * <pre>
             *播放所用的资源,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 res = 4;</code>
             */
            public Builder clearRes() {
                copyOnWrite();
                instance.clearRes();
                return this;
            }

            /**
             * <pre>
             *通知的目标设备,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 deviceid = 5;</code>
             */
            public java.util.List<java.lang.Integer>
            getDeviceidList() {
                return java.util.Collections.unmodifiableList(
                        instance.getDeviceidList());
            }
            /**
             * <pre>
             *通知的目标设备,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 deviceid = 5;</code>
             */
            public int getDeviceidCount() {
                return instance.getDeviceidCount();
            }
            /**
             * <pre>
             *通知的目标设备,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 deviceid = 5;</code>
             */
            public int getDeviceid(int index) {
                return instance.getDeviceid(index);
            }
            /**
             * <pre>
             *通知的目标设备,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 deviceid = 5;</code>
             */
            public Builder setDeviceid(
                    int index, int value) {
                copyOnWrite();
                instance.setDeviceid(index, value);
                return this;
            }
            /**
             * <pre>
             *通知的目标设备,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 deviceid = 5;</code>
             */
            public Builder addDeviceid(int value) {
                copyOnWrite();
                instance.addDeviceid(value);
                return this;
            }
            /**
             * <pre>
             *通知的目标设备,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 deviceid = 5;</code>
             */
            public Builder addAllDeviceid(
                    java.lang.Iterable<? extends java.lang.Integer> values) {
                copyOnWrite();
                instance.addAllDeviceid(values);
                return this;
            }
            /**
             * <pre>
             *通知的目标设备,为0表示全部
             * </pre>
             *
             * <code>repeated fixed32 deviceid = 5;</code>
             */
            public Builder clearDeviceid() {
                copyOnWrite();
                instance.clearDeviceid();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Type_MeetDoStreamPlay)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoStreamPlay();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    res_.makeImmutable();
                    deviceid_.makeImmutable();
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoStreamPlay other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoStreamPlay) arg1;
                    srcdeviceid_ = visitor.visitInt(srcdeviceid_ != 0, srcdeviceid_,
                            other.srcdeviceid_ != 0, other.srcdeviceid_);
                    subid_ = visitor.visitInt(subid_ != 0, subid_,
                            other.subid_ != 0, other.subid_);
                    triggeruserval_ = visitor.visitInt(triggeruserval_ != 0, triggeruserval_,
                            other.triggeruserval_ != 0, other.triggeruserval_);
                    res_= visitor.visitIntList(res_, other.res_);
                    deviceid_= visitor.visitIntList(deviceid_, other.deviceid_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                        bitField0_ |= other.bitField0_;
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 13: {

                                    srcdeviceid_ = input.readFixed32();
                                    break;
                                }
                                case 21: {

                                    subid_ = input.readFixed32();
                                    break;
                                }
                                case 29: {

                                    triggeruserval_ = input.readFixed32();
                                    break;
                                }
                                case 37: {
                                    if (!res_.isModifiable()) {
                                        res_ =
                                                com.google.protobuf.GeneratedMessageLite.mutableCopy(res_);
                                    }
                                    res_.addInt(input.readFixed32());
                                    break;
                                }
                                case 34: {
                                    int length = input.readRawVarint32();
                                    int limit = input.pushLimit(length);
                                    if (!res_.isModifiable() && input.getBytesUntilLimit() > 0) {
                                        final int currentSize = res_.size();
                                        res_ = res_.mutableCopyWithCapacity(
                                                currentSize + (length/4));
                                    }
                                    while (input.getBytesUntilLimit() > 0) {
                                        res_.addInt(input.readFixed32());
                                    }
                                    input.popLimit(limit);
                                    break;
                                }
                                case 45: {
                                    if (!deviceid_.isModifiable()) {
                                        deviceid_ =
                                                com.google.protobuf.GeneratedMessageLite.mutableCopy(deviceid_);
                                    }
                                    deviceid_.addInt(input.readFixed32());
                                    break;
                                }
                                case 42: {
                                    int length = input.readRawVarint32();
                                    int limit = input.pushLimit(length);
                                    if (!deviceid_.isModifiable() && input.getBytesUntilLimit() > 0) {
                                        final int currentSize = deviceid_.size();
                                        deviceid_ = deviceid_.mutableCopyWithCapacity(
                                                currentSize + (length/4));
                                    }
                                    while (input.getBytesUntilLimit() > 0) {
                                        deviceid_.addInt(input.readFixed32());
                                    }
                                    input.popLimit(limit);
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoStreamPlay.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Type_MeetDoStreamPlay)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoStreamPlay DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Type_MeetDoStreamPlay();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoStreamPlay getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Type_MeetDoStreamPlay> PARSER;

        public static com.google.protobuf.Parser<pbui_Type_MeetDoStreamPlay> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Item_MeetStreamPlayDetailInfoOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Item_MeetStreamPlayDetailInfo)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <pre>
         *触发器ID
         * </pre>
         *
         * <code>fixed32 trrigerid = 1;</code>
         */
        int getTrrigerid();

        /**
         * <pre>
         *设备ID
         * </pre>
         *
         * <code>fixed32 deviceid = 2;</code>
         */
        int getDeviceid();

        /**
         * <pre>
         *设备子通道
         * </pre>
         *
         * <code>fixed32 subid = 3;</code>
         */
        int getSubid();
    }
    /**
     * <pre>
     *查询流播放
     * </pre>
     *
     * Protobuf type {@code pbui_Item_MeetStreamPlayDetailInfo}
     */
    public  static final class pbui_Item_MeetStreamPlayDetailInfo extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Item_MeetStreamPlayDetailInfo, pbui_Item_MeetStreamPlayDetailInfo.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Item_MeetStreamPlayDetailInfo)
            pbui_Item_MeetStreamPlayDetailInfoOrBuilder {
        private pbui_Item_MeetStreamPlayDetailInfo() {
        }
        public static final int TRRIGERID_FIELD_NUMBER = 1;
        private int trrigerid_;
        /**
         * <pre>
         *触发器ID
         * </pre>
         *
         * <code>fixed32 trrigerid = 1;</code>
         */
        public int getTrrigerid() {
            return trrigerid_;
        }
        /**
         * <pre>
         *触发器ID
         * </pre>
         *
         * <code>fixed32 trrigerid = 1;</code>
         */
        private void setTrrigerid(int value) {

            trrigerid_ = value;
        }
        /**
         * <pre>
         *触发器ID
         * </pre>
         *
         * <code>fixed32 trrigerid = 1;</code>
         */
        private void clearTrrigerid() {

            trrigerid_ = 0;
        }

        public static final int DEVICEID_FIELD_NUMBER = 2;
        private int deviceid_;
        /**
         * <pre>
         *设备ID
         * </pre>
         *
         * <code>fixed32 deviceid = 2;</code>
         */
        public int getDeviceid() {
            return deviceid_;
        }
        /**
         * <pre>
         *设备ID
         * </pre>
         *
         * <code>fixed32 deviceid = 2;</code>
         */
        private void setDeviceid(int value) {

            deviceid_ = value;
        }
        /**
         * <pre>
         *设备ID
         * </pre>
         *
         * <code>fixed32 deviceid = 2;</code>
         */
        private void clearDeviceid() {

            deviceid_ = 0;
        }

        public static final int SUBID_FIELD_NUMBER = 3;
        private int subid_;
        /**
         * <pre>
         *设备子通道
         * </pre>
         *
         * <code>fixed32 subid = 3;</code>
         */
        public int getSubid() {
            return subid_;
        }
        /**
         * <pre>
         *设备子通道
         * </pre>
         *
         * <code>fixed32 subid = 3;</code>
         */
        private void setSubid(int value) {

            subid_ = value;
        }
        /**
         * <pre>
         *设备子通道
         * </pre>
         *
         * <code>fixed32 subid = 3;</code>
         */
        private void clearSubid() {

            subid_ = 0;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (trrigerid_ != 0) {
                output.writeFixed32(1, trrigerid_);
            }
            if (deviceid_ != 0) {
                output.writeFixed32(2, deviceid_);
            }
            if (subid_ != 0) {
                output.writeFixed32(3, subid_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (trrigerid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(1, trrigerid_);
            }
            if (deviceid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(2, deviceid_);
            }
            if (subid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(3, subid_);
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetStreamPlayDetailInfo parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetStreamPlayDetailInfo parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetStreamPlayDetailInfo parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetStreamPlayDetailInfo parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetStreamPlayDetailInfo parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetStreamPlayDetailInfo parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetStreamPlayDetailInfo parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetStreamPlayDetailInfo parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetStreamPlayDetailInfo parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetStreamPlayDetailInfo parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetStreamPlayDetailInfo parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetStreamPlayDetailInfo parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetStreamPlayDetailInfo prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *查询流播放
         * </pre>
         *
         * Protobuf type {@code pbui_Item_MeetStreamPlayDetailInfo}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetStreamPlayDetailInfo, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Item_MeetStreamPlayDetailInfo)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetStreamPlayDetailInfoOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetStreamPlayDetailInfo.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <pre>
             *触发器ID
             * </pre>
             *
             * <code>fixed32 trrigerid = 1;</code>
             */
            public int getTrrigerid() {
                return instance.getTrrigerid();
            }
            /**
             * <pre>
             *触发器ID
             * </pre>
             *
             * <code>fixed32 trrigerid = 1;</code>
             */
            public Builder setTrrigerid(int value) {
                copyOnWrite();
                instance.setTrrigerid(value);
                return this;
            }
            /**
             * <pre>
             *触发器ID
             * </pre>
             *
             * <code>fixed32 trrigerid = 1;</code>
             */
            public Builder clearTrrigerid() {
                copyOnWrite();
                instance.clearTrrigerid();
                return this;
            }

            /**
             * <pre>
             *设备ID
             * </pre>
             *
             * <code>fixed32 deviceid = 2;</code>
             */
            public int getDeviceid() {
                return instance.getDeviceid();
            }
            /**
             * <pre>
             *设备ID
             * </pre>
             *
             * <code>fixed32 deviceid = 2;</code>
             */
            public Builder setDeviceid(int value) {
                copyOnWrite();
                instance.setDeviceid(value);
                return this;
            }
            /**
             * <pre>
             *设备ID
             * </pre>
             *
             * <code>fixed32 deviceid = 2;</code>
             */
            public Builder clearDeviceid() {
                copyOnWrite();
                instance.clearDeviceid();
                return this;
            }

            /**
             * <pre>
             *设备子通道
             * </pre>
             *
             * <code>fixed32 subid = 3;</code>
             */
            public int getSubid() {
                return instance.getSubid();
            }
            /**
             * <pre>
             *设备子通道
             * </pre>
             *
             * <code>fixed32 subid = 3;</code>
             */
            public Builder setSubid(int value) {
                copyOnWrite();
                instance.setSubid(value);
                return this;
            }
            /**
             * <pre>
             *设备子通道
             * </pre>
             *
             * <code>fixed32 subid = 3;</code>
             */
            public Builder clearSubid() {
                copyOnWrite();
                instance.clearSubid();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Item_MeetStreamPlayDetailInfo)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetStreamPlayDetailInfo();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetStreamPlayDetailInfo other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetStreamPlayDetailInfo) arg1;
                    trrigerid_ = visitor.visitInt(trrigerid_ != 0, trrigerid_,
                            other.trrigerid_ != 0, other.trrigerid_);
                    deviceid_ = visitor.visitInt(deviceid_ != 0, deviceid_,
                            other.deviceid_ != 0, other.deviceid_);
                    subid_ = visitor.visitInt(subid_ != 0, subid_,
                            other.subid_ != 0, other.subid_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 13: {

                                    trrigerid_ = input.readFixed32();
                                    break;
                                }
                                case 21: {

                                    deviceid_ = input.readFixed32();
                                    break;
                                }
                                case 29: {

                                    subid_ = input.readFixed32();
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetStreamPlayDetailInfo.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Item_MeetStreamPlayDetailInfo)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetStreamPlayDetailInfo DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Item_MeetStreamPlayDetailInfo();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetStreamPlayDetailInfo getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Item_MeetStreamPlayDetailInfo> PARSER;

        public static com.google.protobuf.Parser<pbui_Item_MeetStreamPlayDetailInfo> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Type_MeetStreamPlayDetailInfoOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Type_MeetStreamPlayDetailInfo)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <code>repeated .pbui_Item_MeetStreamPlayDetailInfo item = 1;</code>
         */
        java.util.List<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetStreamPlayDetailInfo>
        getItemList();
        /**
         * <code>repeated .pbui_Item_MeetStreamPlayDetailInfo item = 1;</code>
         */
        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetStreamPlayDetailInfo getItem(int index);
        /**
         * <code>repeated .pbui_Item_MeetStreamPlayDetailInfo item = 1;</code>
         */
        int getItemCount();
    }
    /**
     * <pre>
     *type:Pb_TYPE_MEET_INTERFACE_STREAMPLAY
     *method: query/
     * </pre>
     *
     * Protobuf type {@code pbui_Type_MeetStreamPlayDetailInfo}
     */
    public  static final class pbui_Type_MeetStreamPlayDetailInfo extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Type_MeetStreamPlayDetailInfo, pbui_Type_MeetStreamPlayDetailInfo.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Type_MeetStreamPlayDetailInfo)
            pbui_Type_MeetStreamPlayDetailInfoOrBuilder {
        private pbui_Type_MeetStreamPlayDetailInfo() {
            item_ = emptyProtobufList();
        }
        public static final int ITEM_FIELD_NUMBER = 1;
        private com.google.protobuf.Internal.ProtobufList<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetStreamPlayDetailInfo> item_;
        /**
         * <code>repeated .pbui_Item_MeetStreamPlayDetailInfo item = 1;</code>
         */
        public java.util.List<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetStreamPlayDetailInfo> getItemList() {
            return item_;
        }
        /**
         * <code>repeated .pbui_Item_MeetStreamPlayDetailInfo item = 1;</code>
         */
        public java.util.List<? extends com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetStreamPlayDetailInfoOrBuilder>
        getItemOrBuilderList() {
            return item_;
        }
        /**
         * <code>repeated .pbui_Item_MeetStreamPlayDetailInfo item = 1;</code>
         */
        public int getItemCount() {
            return item_.size();
        }
        /**
         * <code>repeated .pbui_Item_MeetStreamPlayDetailInfo item = 1;</code>
         */
        public com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetStreamPlayDetailInfo getItem(int index) {
            return item_.get(index);
        }
        /**
         * <code>repeated .pbui_Item_MeetStreamPlayDetailInfo item = 1;</code>
         */
        public com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetStreamPlayDetailInfoOrBuilder getItemOrBuilder(
                int index) {
            return item_.get(index);
        }
        private void ensureItemIsMutable() {
            if (!item_.isModifiable()) {
                item_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(item_);
            }
        }

        /**
         * <code>repeated .pbui_Item_MeetStreamPlayDetailInfo item = 1;</code>
         */
        private void setItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetStreamPlayDetailInfo value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensureItemIsMutable();
            item_.set(index, value);
        }
        /**
         * <code>repeated .pbui_Item_MeetStreamPlayDetailInfo item = 1;</code>
         */
        private void setItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetStreamPlayDetailInfo.Builder builderForValue) {
            ensureItemIsMutable();
            item_.set(index, builderForValue.build());
        }
        /**
         * <code>repeated .pbui_Item_MeetStreamPlayDetailInfo item = 1;</code>
         */
        private void addItem(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetStreamPlayDetailInfo value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensureItemIsMutable();
            item_.add(value);
        }
        /**
         * <code>repeated .pbui_Item_MeetStreamPlayDetailInfo item = 1;</code>
         */
        private void addItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetStreamPlayDetailInfo value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensureItemIsMutable();
            item_.add(index, value);
        }
        /**
         * <code>repeated .pbui_Item_MeetStreamPlayDetailInfo item = 1;</code>
         */
        private void addItem(
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetStreamPlayDetailInfo.Builder builderForValue) {
            ensureItemIsMutable();
            item_.add(builderForValue.build());
        }
        /**
         * <code>repeated .pbui_Item_MeetStreamPlayDetailInfo item = 1;</code>
         */
        private void addItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetStreamPlayDetailInfo.Builder builderForValue) {
            ensureItemIsMutable();
            item_.add(index, builderForValue.build());
        }
        /**
         * <code>repeated .pbui_Item_MeetStreamPlayDetailInfo item = 1;</code>
         */
        private void addAllItem(
                java.lang.Iterable<? extends com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetStreamPlayDetailInfo> values) {
            ensureItemIsMutable();
            com.google.protobuf.AbstractMessageLite.addAll(
                    values, item_);
        }
        /**
         * <code>repeated .pbui_Item_MeetStreamPlayDetailInfo item = 1;</code>
         */
        private void clearItem() {
            item_ = emptyProtobufList();
        }
        /**
         * <code>repeated .pbui_Item_MeetStreamPlayDetailInfo item = 1;</code>
         */
        private void removeItem(int index) {
            ensureItemIsMutable();
            item_.remove(index);
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            for (int i = 0; i < item_.size(); i++) {
                output.writeMessage(1, item_.get(i));
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            for (int i = 0; i < item_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, item_.get(i));
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStreamPlayDetailInfo parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStreamPlayDetailInfo parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStreamPlayDetailInfo parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStreamPlayDetailInfo parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStreamPlayDetailInfo parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStreamPlayDetailInfo parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStreamPlayDetailInfo parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStreamPlayDetailInfo parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStreamPlayDetailInfo parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStreamPlayDetailInfo parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStreamPlayDetailInfo parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStreamPlayDetailInfo parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStreamPlayDetailInfo prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *type:Pb_TYPE_MEET_INTERFACE_STREAMPLAY
         *method: query/
         * </pre>
         *
         * Protobuf type {@code pbui_Type_MeetStreamPlayDetailInfo}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStreamPlayDetailInfo, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Type_MeetStreamPlayDetailInfo)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStreamPlayDetailInfoOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStreamPlayDetailInfo.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <code>repeated .pbui_Item_MeetStreamPlayDetailInfo item = 1;</code>
             */
            public java.util.List<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetStreamPlayDetailInfo> getItemList() {
                return java.util.Collections.unmodifiableList(
                        instance.getItemList());
            }
            /**
             * <code>repeated .pbui_Item_MeetStreamPlayDetailInfo item = 1;</code>
             */
            public int getItemCount() {
                return instance.getItemCount();
            }/**
             * <code>repeated .pbui_Item_MeetStreamPlayDetailInfo item = 1;</code>
             */
            public com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetStreamPlayDetailInfo getItem(int index) {
                return instance.getItem(index);
            }
            /**
             * <code>repeated .pbui_Item_MeetStreamPlayDetailInfo item = 1;</code>
             */
            public Builder setItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetStreamPlayDetailInfo value) {
                copyOnWrite();
                instance.setItem(index, value);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetStreamPlayDetailInfo item = 1;</code>
             */
            public Builder setItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetStreamPlayDetailInfo.Builder builderForValue) {
                copyOnWrite();
                instance.setItem(index, builderForValue);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetStreamPlayDetailInfo item = 1;</code>
             */
            public Builder addItem(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetStreamPlayDetailInfo value) {
                copyOnWrite();
                instance.addItem(value);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetStreamPlayDetailInfo item = 1;</code>
             */
            public Builder addItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetStreamPlayDetailInfo value) {
                copyOnWrite();
                instance.addItem(index, value);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetStreamPlayDetailInfo item = 1;</code>
             */
            public Builder addItem(
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetStreamPlayDetailInfo.Builder builderForValue) {
                copyOnWrite();
                instance.addItem(builderForValue);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetStreamPlayDetailInfo item = 1;</code>
             */
            public Builder addItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetStreamPlayDetailInfo.Builder builderForValue) {
                copyOnWrite();
                instance.addItem(index, builderForValue);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetStreamPlayDetailInfo item = 1;</code>
             */
            public Builder addAllItem(
                    java.lang.Iterable<? extends com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetStreamPlayDetailInfo> values) {
                copyOnWrite();
                instance.addAllItem(values);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetStreamPlayDetailInfo item = 1;</code>
             */
            public Builder clearItem() {
                copyOnWrite();
                instance.clearItem();
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetStreamPlayDetailInfo item = 1;</code>
             */
            public Builder removeItem(int index) {
                copyOnWrite();
                instance.removeItem(index);
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Type_MeetStreamPlayDetailInfo)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStreamPlayDetailInfo();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    item_.makeImmutable();
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStreamPlayDetailInfo other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStreamPlayDetailInfo) arg1;
                    item_= visitor.visitList(item_, other.item_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 10: {
                                    if (!item_.isModifiable()) {
                                        item_ =
                                                com.google.protobuf.GeneratedMessageLite.mutableCopy(item_);
                                    }
                                    item_.add(
                                            input.readMessage(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetStreamPlayDetailInfo.parser(), extensionRegistry));
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStreamPlayDetailInfo.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Type_MeetStreamPlayDetailInfo)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStreamPlayDetailInfo DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Type_MeetStreamPlayDetailInfo();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStreamPlayDetailInfo getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Type_MeetStreamPlayDetailInfo> PARSER;

        public static com.google.protobuf.Parser<pbui_Type_MeetStreamPlayDetailInfo> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Type_MeetDoReqStatisticOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Type_MeetDoReqStatistic)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <pre>
         *会议ID 为0表示查询当前会议
         * </pre>
         *
         * <code>fixed32 meetingid = 1;</code>
         */
        int getMeetingid();
    }
    /**
     * <pre>
     *查询会议统计
     *call
     *type:Pb_TYPE_MEET_INTERFACE_MEETSTATISTIC
     *method: query
     * </pre>
     *
     * Protobuf type {@code pbui_Type_MeetDoReqStatistic}
     */
    public  static final class pbui_Type_MeetDoReqStatistic extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Type_MeetDoReqStatistic, pbui_Type_MeetDoReqStatistic.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Type_MeetDoReqStatistic)
            pbui_Type_MeetDoReqStatisticOrBuilder {
        private pbui_Type_MeetDoReqStatistic() {
        }
        public static final int MEETINGID_FIELD_NUMBER = 1;
        private int meetingid_;
        /**
         * <pre>
         *会议ID 为0表示查询当前会议
         * </pre>
         *
         * <code>fixed32 meetingid = 1;</code>
         */
        public int getMeetingid() {
            return meetingid_;
        }
        /**
         * <pre>
         *会议ID 为0表示查询当前会议
         * </pre>
         *
         * <code>fixed32 meetingid = 1;</code>
         */
        private void setMeetingid(int value) {

            meetingid_ = value;
        }
        /**
         * <pre>
         *会议ID 为0表示查询当前会议
         * </pre>
         *
         * <code>fixed32 meetingid = 1;</code>
         */
        private void clearMeetingid() {

            meetingid_ = 0;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (meetingid_ != 0) {
                output.writeFixed32(1, meetingid_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (meetingid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(1, meetingid_);
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoReqStatistic parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoReqStatistic parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoReqStatistic parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoReqStatistic parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoReqStatistic parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoReqStatistic parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoReqStatistic parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoReqStatistic parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoReqStatistic parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoReqStatistic parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoReqStatistic parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoReqStatistic parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoReqStatistic prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *查询会议统计
         *call
         *type:Pb_TYPE_MEET_INTERFACE_MEETSTATISTIC
         *method: query
         * </pre>
         *
         * Protobuf type {@code pbui_Type_MeetDoReqStatistic}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoReqStatistic, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Type_MeetDoReqStatistic)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoReqStatisticOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoReqStatistic.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <pre>
             *会议ID 为0表示查询当前会议
             * </pre>
             *
             * <code>fixed32 meetingid = 1;</code>
             */
            public int getMeetingid() {
                return instance.getMeetingid();
            }
            /**
             * <pre>
             *会议ID 为0表示查询当前会议
             * </pre>
             *
             * <code>fixed32 meetingid = 1;</code>
             */
            public Builder setMeetingid(int value) {
                copyOnWrite();
                instance.setMeetingid(value);
                return this;
            }
            /**
             * <pre>
             *会议ID 为0表示查询当前会议
             * </pre>
             *
             * <code>fixed32 meetingid = 1;</code>
             */
            public Builder clearMeetingid() {
                copyOnWrite();
                instance.clearMeetingid();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Type_MeetDoReqStatistic)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoReqStatistic();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoReqStatistic other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoReqStatistic) arg1;
                    meetingid_ = visitor.visitInt(meetingid_ != 0, meetingid_,
                            other.meetingid_ != 0, other.meetingid_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 13: {

                                    meetingid_ = input.readFixed32();
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoReqStatistic.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Type_MeetDoReqStatistic)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoReqStatistic DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Type_MeetDoReqStatistic();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetDoReqStatistic getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Type_MeetDoReqStatistic> PARSER;

        public static com.google.protobuf.Parser<pbui_Type_MeetDoReqStatistic> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Type_MeetStatisticInfoOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Type_MeetStatisticInfo)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <pre>
         *会议ID
         * </pre>
         *
         * <code>fixed32 meetingid = 1;</code>
         */
        int getMeetingid();

        /**
         * <pre>
         *会议名称
         * </pre>
         *
         * <code>bytes meetname = 2;</code>
         */
        com.google.protobuf.ByteString getMeetname();

        /**
         * <pre>
         *流请求数
         * </pre>
         *
         * <code>fixed32 streamgetcount = 3;</code>
         */
        int getStreamgetcount();

        /**
         * <pre>
         *同屏请求数
         * </pre>
         *
         * <code>fixed32 screengetcount = 4;</code>
         */
        int getScreengetcount();

        /**
         * <pre>
         *文件请求数
         * </pre>
         *
         * <code>fixed32 filegetcount = 5;</code>
         */
        int getFilegetcount();

        /**
         * <pre>
         *交流次数
         * </pre>
         *
         * <code>fixed32 chatcount = 6;</code>
         */
        int getChatcount();

        /**
         * <pre>
         *服务请求数
         * </pre>
         *
         * <code>fixed32 servicegetcount = 7;</code>
         */
        int getServicegetcount();

        /**
         * <pre>
         *白板发起次数
         * </pre>
         *
         * <code>fixed32 whiteboardopencount = 8;</code>
         */
        int getWhiteboardopencount();

        /**
         * <pre>
         *白板交流次数
         * </pre>
         *
         * <code>fixed32 whiteboardusecount = 9;</code>
         */
        int getWhiteboardusecount();

        /**
         * <pre>
         *投票发起次数
         * </pre>
         *
         * <code>fixed32 votecount = 10;</code>
         */
        int getVotecount();

        /**
         * <pre>
         *选举发起次数
         * </pre>
         *
         * <code>fixed32 electioncount = 11;</code>
         */
        int getElectioncount();

        /**
         * <pre>
         *问卷调查发起次数
         * </pre>
         *
         * <code>fixed32 questioncount = 12;</code>
         */
        int getQuestioncount();

        /**
         * <pre>
         *公告发起次数
         * </pre>
         *
         * <code>fixed32 bulletcount = 13;</code>
         */
        int getBulletcount();

        /**
         * <pre>
         *创建时间 秒
         * </pre>
         *
         * <code>fixed64 addtime = 14;</code>
         */
        long getAddtime();
    }
    /**
     * <pre>
     *返回查询会议统计通知
     *callback
     *type:Pb_TYPE_MEET_INTERFACE_MEETSTATISTIC
     *method: notify
     * </pre>
     *
     * Protobuf type {@code pbui_Type_MeetStatisticInfo}
     */
    public  static final class pbui_Type_MeetStatisticInfo extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Type_MeetStatisticInfo, pbui_Type_MeetStatisticInfo.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Type_MeetStatisticInfo)
            pbui_Type_MeetStatisticInfoOrBuilder {
        private pbui_Type_MeetStatisticInfo() {
            meetname_ = com.google.protobuf.ByteString.EMPTY;
        }
        public static final int MEETINGID_FIELD_NUMBER = 1;
        private int meetingid_;
        /**
         * <pre>
         *会议ID
         * </pre>
         *
         * <code>fixed32 meetingid = 1;</code>
         */
        public int getMeetingid() {
            return meetingid_;
        }
        /**
         * <pre>
         *会议ID
         * </pre>
         *
         * <code>fixed32 meetingid = 1;</code>
         */
        private void setMeetingid(int value) {

            meetingid_ = value;
        }
        /**
         * <pre>
         *会议ID
         * </pre>
         *
         * <code>fixed32 meetingid = 1;</code>
         */
        private void clearMeetingid() {

            meetingid_ = 0;
        }

        public static final int MEETNAME_FIELD_NUMBER = 2;
        private com.google.protobuf.ByteString meetname_;
        /**
         * <pre>
         *会议名称
         * </pre>
         *
         * <code>bytes meetname = 2;</code>
         */
        public com.google.protobuf.ByteString getMeetname() {
            return meetname_;
        }
        /**
         * <pre>
         *会议名称
         * </pre>
         *
         * <code>bytes meetname = 2;</code>
         */
        private void setMeetname(com.google.protobuf.ByteString value) {
            if (value == null) {
                throw new NullPointerException();
            }

            meetname_ = value;
        }
        /**
         * <pre>
         *会议名称
         * </pre>
         *
         * <code>bytes meetname = 2;</code>
         */
        private void clearMeetname() {

            meetname_ = getDefaultInstance().getMeetname();
        }

        public static final int STREAMGETCOUNT_FIELD_NUMBER = 3;
        private int streamgetcount_;
        /**
         * <pre>
         *流请求数
         * </pre>
         *
         * <code>fixed32 streamgetcount = 3;</code>
         */
        public int getStreamgetcount() {
            return streamgetcount_;
        }
        /**
         * <pre>
         *流请求数
         * </pre>
         *
         * <code>fixed32 streamgetcount = 3;</code>
         */
        private void setStreamgetcount(int value) {

            streamgetcount_ = value;
        }
        /**
         * <pre>
         *流请求数
         * </pre>
         *
         * <code>fixed32 streamgetcount = 3;</code>
         */
        private void clearStreamgetcount() {

            streamgetcount_ = 0;
        }

        public static final int SCREENGETCOUNT_FIELD_NUMBER = 4;
        private int screengetcount_;
        /**
         * <pre>
         *同屏请求数
         * </pre>
         *
         * <code>fixed32 screengetcount = 4;</code>
         */
        public int getScreengetcount() {
            return screengetcount_;
        }
        /**
         * <pre>
         *同屏请求数
         * </pre>
         *
         * <code>fixed32 screengetcount = 4;</code>
         */
        private void setScreengetcount(int value) {

            screengetcount_ = value;
        }
        /**
         * <pre>
         *同屏请求数
         * </pre>
         *
         * <code>fixed32 screengetcount = 4;</code>
         */
        private void clearScreengetcount() {

            screengetcount_ = 0;
        }

        public static final int FILEGETCOUNT_FIELD_NUMBER = 5;
        private int filegetcount_;
        /**
         * <pre>
         *文件请求数
         * </pre>
         *
         * <code>fixed32 filegetcount = 5;</code>
         */
        public int getFilegetcount() {
            return filegetcount_;
        }
        /**
         * <pre>
         *文件请求数
         * </pre>
         *
         * <code>fixed32 filegetcount = 5;</code>
         */
        private void setFilegetcount(int value) {

            filegetcount_ = value;
        }
        /**
         * <pre>
         *文件请求数
         * </pre>
         *
         * <code>fixed32 filegetcount = 5;</code>
         */
        private void clearFilegetcount() {

            filegetcount_ = 0;
        }

        public static final int CHATCOUNT_FIELD_NUMBER = 6;
        private int chatcount_;
        /**
         * <pre>
         *交流次数
         * </pre>
         *
         * <code>fixed32 chatcount = 6;</code>
         */
        public int getChatcount() {
            return chatcount_;
        }
        /**
         * <pre>
         *交流次数
         * </pre>
         *
         * <code>fixed32 chatcount = 6;</code>
         */
        private void setChatcount(int value) {

            chatcount_ = value;
        }
        /**
         * <pre>
         *交流次数
         * </pre>
         *
         * <code>fixed32 chatcount = 6;</code>
         */
        private void clearChatcount() {

            chatcount_ = 0;
        }

        public static final int SERVICEGETCOUNT_FIELD_NUMBER = 7;
        private int servicegetcount_;
        /**
         * <pre>
         *服务请求数
         * </pre>
         *
         * <code>fixed32 servicegetcount = 7;</code>
         */
        public int getServicegetcount() {
            return servicegetcount_;
        }
        /**
         * <pre>
         *服务请求数
         * </pre>
         *
         * <code>fixed32 servicegetcount = 7;</code>
         */
        private void setServicegetcount(int value) {

            servicegetcount_ = value;
        }
        /**
         * <pre>
         *服务请求数
         * </pre>
         *
         * <code>fixed32 servicegetcount = 7;</code>
         */
        private void clearServicegetcount() {

            servicegetcount_ = 0;
        }

        public static final int WHITEBOARDOPENCOUNT_FIELD_NUMBER = 8;
        private int whiteboardopencount_;
        /**
         * <pre>
         *白板发起次数
         * </pre>
         *
         * <code>fixed32 whiteboardopencount = 8;</code>
         */
        public int getWhiteboardopencount() {
            return whiteboardopencount_;
        }
        /**
         * <pre>
         *白板发起次数
         * </pre>
         *
         * <code>fixed32 whiteboardopencount = 8;</code>
         */
        private void setWhiteboardopencount(int value) {

            whiteboardopencount_ = value;
        }
        /**
         * <pre>
         *白板发起次数
         * </pre>
         *
         * <code>fixed32 whiteboardopencount = 8;</code>
         */
        private void clearWhiteboardopencount() {

            whiteboardopencount_ = 0;
        }

        public static final int WHITEBOARDUSECOUNT_FIELD_NUMBER = 9;
        private int whiteboardusecount_;
        /**
         * <pre>
         *白板交流次数
         * </pre>
         *
         * <code>fixed32 whiteboardusecount = 9;</code>
         */
        public int getWhiteboardusecount() {
            return whiteboardusecount_;
        }
        /**
         * <pre>
         *白板交流次数
         * </pre>
         *
         * <code>fixed32 whiteboardusecount = 9;</code>
         */
        private void setWhiteboardusecount(int value) {

            whiteboardusecount_ = value;
        }
        /**
         * <pre>
         *白板交流次数
         * </pre>
         *
         * <code>fixed32 whiteboardusecount = 9;</code>
         */
        private void clearWhiteboardusecount() {

            whiteboardusecount_ = 0;
        }

        public static final int VOTECOUNT_FIELD_NUMBER = 10;
        private int votecount_;
        /**
         * <pre>
         *投票发起次数
         * </pre>
         *
         * <code>fixed32 votecount = 10;</code>
         */
        public int getVotecount() {
            return votecount_;
        }
        /**
         * <pre>
         *投票发起次数
         * </pre>
         *
         * <code>fixed32 votecount = 10;</code>
         */
        private void setVotecount(int value) {

            votecount_ = value;
        }
        /**
         * <pre>
         *投票发起次数
         * </pre>
         *
         * <code>fixed32 votecount = 10;</code>
         */
        private void clearVotecount() {

            votecount_ = 0;
        }

        public static final int ELECTIONCOUNT_FIELD_NUMBER = 11;
        private int electioncount_;
        /**
         * <pre>
         *选举发起次数
         * </pre>
         *
         * <code>fixed32 electioncount = 11;</code>
         */
        public int getElectioncount() {
            return electioncount_;
        }
        /**
         * <pre>
         *选举发起次数
         * </pre>
         *
         * <code>fixed32 electioncount = 11;</code>
         */
        private void setElectioncount(int value) {

            electioncount_ = value;
        }
        /**
         * <pre>
         *选举发起次数
         * </pre>
         *
         * <code>fixed32 electioncount = 11;</code>
         */
        private void clearElectioncount() {

            electioncount_ = 0;
        }

        public static final int QUESTIONCOUNT_FIELD_NUMBER = 12;
        private int questioncount_;
        /**
         * <pre>
         *问卷调查发起次数
         * </pre>
         *
         * <code>fixed32 questioncount = 12;</code>
         */
        public int getQuestioncount() {
            return questioncount_;
        }
        /**
         * <pre>
         *问卷调查发起次数
         * </pre>
         *
         * <code>fixed32 questioncount = 12;</code>
         */
        private void setQuestioncount(int value) {

            questioncount_ = value;
        }
        /**
         * <pre>
         *问卷调查发起次数
         * </pre>
         *
         * <code>fixed32 questioncount = 12;</code>
         */
        private void clearQuestioncount() {

            questioncount_ = 0;
        }

        public static final int BULLETCOUNT_FIELD_NUMBER = 13;
        private int bulletcount_;
        /**
         * <pre>
         *公告发起次数
         * </pre>
         *
         * <code>fixed32 bulletcount = 13;</code>
         */
        public int getBulletcount() {
            return bulletcount_;
        }
        /**
         * <pre>
         *公告发起次数
         * </pre>
         *
         * <code>fixed32 bulletcount = 13;</code>
         */
        private void setBulletcount(int value) {

            bulletcount_ = value;
        }
        /**
         * <pre>
         *公告发起次数
         * </pre>
         *
         * <code>fixed32 bulletcount = 13;</code>
         */
        private void clearBulletcount() {

            bulletcount_ = 0;
        }

        public static final int ADDTIME_FIELD_NUMBER = 14;
        private long addtime_;
        /**
         * <pre>
         *创建时间 秒
         * </pre>
         *
         * <code>fixed64 addtime = 14;</code>
         */
        public long getAddtime() {
            return addtime_;
        }
        /**
         * <pre>
         *创建时间 秒
         * </pre>
         *
         * <code>fixed64 addtime = 14;</code>
         */
        private void setAddtime(long value) {

            addtime_ = value;
        }
        /**
         * <pre>
         *创建时间 秒
         * </pre>
         *
         * <code>fixed64 addtime = 14;</code>
         */
        private void clearAddtime() {

            addtime_ = 0L;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (meetingid_ != 0) {
                output.writeFixed32(1, meetingid_);
            }
            if (!meetname_.isEmpty()) {
                output.writeBytes(2, meetname_);
            }
            if (streamgetcount_ != 0) {
                output.writeFixed32(3, streamgetcount_);
            }
            if (screengetcount_ != 0) {
                output.writeFixed32(4, screengetcount_);
            }
            if (filegetcount_ != 0) {
                output.writeFixed32(5, filegetcount_);
            }
            if (chatcount_ != 0) {
                output.writeFixed32(6, chatcount_);
            }
            if (servicegetcount_ != 0) {
                output.writeFixed32(7, servicegetcount_);
            }
            if (whiteboardopencount_ != 0) {
                output.writeFixed32(8, whiteboardopencount_);
            }
            if (whiteboardusecount_ != 0) {
                output.writeFixed32(9, whiteboardusecount_);
            }
            if (votecount_ != 0) {
                output.writeFixed32(10, votecount_);
            }
            if (electioncount_ != 0) {
                output.writeFixed32(11, electioncount_);
            }
            if (questioncount_ != 0) {
                output.writeFixed32(12, questioncount_);
            }
            if (bulletcount_ != 0) {
                output.writeFixed32(13, bulletcount_);
            }
            if (addtime_ != 0L) {
                output.writeFixed64(14, addtime_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (meetingid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(1, meetingid_);
            }
            if (!meetname_.isEmpty()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(2, meetname_);
            }
            if (streamgetcount_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(3, streamgetcount_);
            }
            if (screengetcount_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(4, screengetcount_);
            }
            if (filegetcount_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(5, filegetcount_);
            }
            if (chatcount_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(6, chatcount_);
            }
            if (servicegetcount_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(7, servicegetcount_);
            }
            if (whiteboardopencount_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(8, whiteboardopencount_);
            }
            if (whiteboardusecount_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(9, whiteboardusecount_);
            }
            if (votecount_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(10, votecount_);
            }
            if (electioncount_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(11, electioncount_);
            }
            if (questioncount_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(12, questioncount_);
            }
            if (bulletcount_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(13, bulletcount_);
            }
            if (addtime_ != 0L) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed64Size(14, addtime_);
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStatisticInfo parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStatisticInfo parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStatisticInfo parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStatisticInfo parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStatisticInfo parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStatisticInfo parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStatisticInfo parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStatisticInfo parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStatisticInfo parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStatisticInfo parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStatisticInfo parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStatisticInfo parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStatisticInfo prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *返回查询会议统计通知
         *callback
         *type:Pb_TYPE_MEET_INTERFACE_MEETSTATISTIC
         *method: notify
         * </pre>
         *
         * Protobuf type {@code pbui_Type_MeetStatisticInfo}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStatisticInfo, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Type_MeetStatisticInfo)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStatisticInfoOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStatisticInfo.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <pre>
             *会议ID
             * </pre>
             *
             * <code>fixed32 meetingid = 1;</code>
             */
            public int getMeetingid() {
                return instance.getMeetingid();
            }
            /**
             * <pre>
             *会议ID
             * </pre>
             *
             * <code>fixed32 meetingid = 1;</code>
             */
            public Builder setMeetingid(int value) {
                copyOnWrite();
                instance.setMeetingid(value);
                return this;
            }
            /**
             * <pre>
             *会议ID
             * </pre>
             *
             * <code>fixed32 meetingid = 1;</code>
             */
            public Builder clearMeetingid() {
                copyOnWrite();
                instance.clearMeetingid();
                return this;
            }

            /**
             * <pre>
             *会议名称
             * </pre>
             *
             * <code>bytes meetname = 2;</code>
             */
            public com.google.protobuf.ByteString getMeetname() {
                return instance.getMeetname();
            }
            /**
             * <pre>
             *会议名称
             * </pre>
             *
             * <code>bytes meetname = 2;</code>
             */
            public Builder setMeetname(com.google.protobuf.ByteString value) {
                copyOnWrite();
                instance.setMeetname(value);
                return this;
            }
            /**
             * <pre>
             *会议名称
             * </pre>
             *
             * <code>bytes meetname = 2;</code>
             */
            public Builder clearMeetname() {
                copyOnWrite();
                instance.clearMeetname();
                return this;
            }

            /**
             * <pre>
             *流请求数
             * </pre>
             *
             * <code>fixed32 streamgetcount = 3;</code>
             */
            public int getStreamgetcount() {
                return instance.getStreamgetcount();
            }
            /**
             * <pre>
             *流请求数
             * </pre>
             *
             * <code>fixed32 streamgetcount = 3;</code>
             */
            public Builder setStreamgetcount(int value) {
                copyOnWrite();
                instance.setStreamgetcount(value);
                return this;
            }
            /**
             * <pre>
             *流请求数
             * </pre>
             *
             * <code>fixed32 streamgetcount = 3;</code>
             */
            public Builder clearStreamgetcount() {
                copyOnWrite();
                instance.clearStreamgetcount();
                return this;
            }

            /**
             * <pre>
             *同屏请求数
             * </pre>
             *
             * <code>fixed32 screengetcount = 4;</code>
             */
            public int getScreengetcount() {
                return instance.getScreengetcount();
            }
            /**
             * <pre>
             *同屏请求数
             * </pre>
             *
             * <code>fixed32 screengetcount = 4;</code>
             */
            public Builder setScreengetcount(int value) {
                copyOnWrite();
                instance.setScreengetcount(value);
                return this;
            }
            /**
             * <pre>
             *同屏请求数
             * </pre>
             *
             * <code>fixed32 screengetcount = 4;</code>
             */
            public Builder clearScreengetcount() {
                copyOnWrite();
                instance.clearScreengetcount();
                return this;
            }

            /**
             * <pre>
             *文件请求数
             * </pre>
             *
             * <code>fixed32 filegetcount = 5;</code>
             */
            public int getFilegetcount() {
                return instance.getFilegetcount();
            }
            /**
             * <pre>
             *文件请求数
             * </pre>
             *
             * <code>fixed32 filegetcount = 5;</code>
             */
            public Builder setFilegetcount(int value) {
                copyOnWrite();
                instance.setFilegetcount(value);
                return this;
            }
            /**
             * <pre>
             *文件请求数
             * </pre>
             *
             * <code>fixed32 filegetcount = 5;</code>
             */
            public Builder clearFilegetcount() {
                copyOnWrite();
                instance.clearFilegetcount();
                return this;
            }

            /**
             * <pre>
             *交流次数
             * </pre>
             *
             * <code>fixed32 chatcount = 6;</code>
             */
            public int getChatcount() {
                return instance.getChatcount();
            }
            /**
             * <pre>
             *交流次数
             * </pre>
             *
             * <code>fixed32 chatcount = 6;</code>
             */
            public Builder setChatcount(int value) {
                copyOnWrite();
                instance.setChatcount(value);
                return this;
            }
            /**
             * <pre>
             *交流次数
             * </pre>
             *
             * <code>fixed32 chatcount = 6;</code>
             */
            public Builder clearChatcount() {
                copyOnWrite();
                instance.clearChatcount();
                return this;
            }

            /**
             * <pre>
             *服务请求数
             * </pre>
             *
             * <code>fixed32 servicegetcount = 7;</code>
             */
            public int getServicegetcount() {
                return instance.getServicegetcount();
            }
            /**
             * <pre>
             *服务请求数
             * </pre>
             *
             * <code>fixed32 servicegetcount = 7;</code>
             */
            public Builder setServicegetcount(int value) {
                copyOnWrite();
                instance.setServicegetcount(value);
                return this;
            }
            /**
             * <pre>
             *服务请求数
             * </pre>
             *
             * <code>fixed32 servicegetcount = 7;</code>
             */
            public Builder clearServicegetcount() {
                copyOnWrite();
                instance.clearServicegetcount();
                return this;
            }

            /**
             * <pre>
             *白板发起次数
             * </pre>
             *
             * <code>fixed32 whiteboardopencount = 8;</code>
             */
            public int getWhiteboardopencount() {
                return instance.getWhiteboardopencount();
            }
            /**
             * <pre>
             *白板发起次数
             * </pre>
             *
             * <code>fixed32 whiteboardopencount = 8;</code>
             */
            public Builder setWhiteboardopencount(int value) {
                copyOnWrite();
                instance.setWhiteboardopencount(value);
                return this;
            }
            /**
             * <pre>
             *白板发起次数
             * </pre>
             *
             * <code>fixed32 whiteboardopencount = 8;</code>
             */
            public Builder clearWhiteboardopencount() {
                copyOnWrite();
                instance.clearWhiteboardopencount();
                return this;
            }

            /**
             * <pre>
             *白板交流次数
             * </pre>
             *
             * <code>fixed32 whiteboardusecount = 9;</code>
             */
            public int getWhiteboardusecount() {
                return instance.getWhiteboardusecount();
            }
            /**
             * <pre>
             *白板交流次数
             * </pre>
             *
             * <code>fixed32 whiteboardusecount = 9;</code>
             */
            public Builder setWhiteboardusecount(int value) {
                copyOnWrite();
                instance.setWhiteboardusecount(value);
                return this;
            }
            /**
             * <pre>
             *白板交流次数
             * </pre>
             *
             * <code>fixed32 whiteboardusecount = 9;</code>
             */
            public Builder clearWhiteboardusecount() {
                copyOnWrite();
                instance.clearWhiteboardusecount();
                return this;
            }

            /**
             * <pre>
             *投票发起次数
             * </pre>
             *
             * <code>fixed32 votecount = 10;</code>
             */
            public int getVotecount() {
                return instance.getVotecount();
            }
            /**
             * <pre>
             *投票发起次数
             * </pre>
             *
             * <code>fixed32 votecount = 10;</code>
             */
            public Builder setVotecount(int value) {
                copyOnWrite();
                instance.setVotecount(value);
                return this;
            }
            /**
             * <pre>
             *投票发起次数
             * </pre>
             *
             * <code>fixed32 votecount = 10;</code>
             */
            public Builder clearVotecount() {
                copyOnWrite();
                instance.clearVotecount();
                return this;
            }

            /**
             * <pre>
             *选举发起次数
             * </pre>
             *
             * <code>fixed32 electioncount = 11;</code>
             */
            public int getElectioncount() {
                return instance.getElectioncount();
            }
            /**
             * <pre>
             *选举发起次数
             * </pre>
             *
             * <code>fixed32 electioncount = 11;</code>
             */
            public Builder setElectioncount(int value) {
                copyOnWrite();
                instance.setElectioncount(value);
                return this;
            }
            /**
             * <pre>
             *选举发起次数
             * </pre>
             *
             * <code>fixed32 electioncount = 11;</code>
             */
            public Builder clearElectioncount() {
                copyOnWrite();
                instance.clearElectioncount();
                return this;
            }

            /**
             * <pre>
             *问卷调查发起次数
             * </pre>
             *
             * <code>fixed32 questioncount = 12;</code>
             */
            public int getQuestioncount() {
                return instance.getQuestioncount();
            }
            /**
             * <pre>
             *问卷调查发起次数
             * </pre>
             *
             * <code>fixed32 questioncount = 12;</code>
             */
            public Builder setQuestioncount(int value) {
                copyOnWrite();
                instance.setQuestioncount(value);
                return this;
            }
            /**
             * <pre>
             *问卷调查发起次数
             * </pre>
             *
             * <code>fixed32 questioncount = 12;</code>
             */
            public Builder clearQuestioncount() {
                copyOnWrite();
                instance.clearQuestioncount();
                return this;
            }

            /**
             * <pre>
             *公告发起次数
             * </pre>
             *
             * <code>fixed32 bulletcount = 13;</code>
             */
            public int getBulletcount() {
                return instance.getBulletcount();
            }
            /**
             * <pre>
             *公告发起次数
             * </pre>
             *
             * <code>fixed32 bulletcount = 13;</code>
             */
            public Builder setBulletcount(int value) {
                copyOnWrite();
                instance.setBulletcount(value);
                return this;
            }
            /**
             * <pre>
             *公告发起次数
             * </pre>
             *
             * <code>fixed32 bulletcount = 13;</code>
             */
            public Builder clearBulletcount() {
                copyOnWrite();
                instance.clearBulletcount();
                return this;
            }

            /**
             * <pre>
             *创建时间 秒
             * </pre>
             *
             * <code>fixed64 addtime = 14;</code>
             */
            public long getAddtime() {
                return instance.getAddtime();
            }
            /**
             * <pre>
             *创建时间 秒
             * </pre>
             *
             * <code>fixed64 addtime = 14;</code>
             */
            public Builder setAddtime(long value) {
                copyOnWrite();
                instance.setAddtime(value);
                return this;
            }
            /**
             * <pre>
             *创建时间 秒
             * </pre>
             *
             * <code>fixed64 addtime = 14;</code>
             */
            public Builder clearAddtime() {
                copyOnWrite();
                instance.clearAddtime();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Type_MeetStatisticInfo)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStatisticInfo();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStatisticInfo other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStatisticInfo) arg1;
                    meetingid_ = visitor.visitInt(meetingid_ != 0, meetingid_,
                            other.meetingid_ != 0, other.meetingid_);
                    meetname_ = visitor.visitByteString(meetname_ != com.google.protobuf.ByteString.EMPTY, meetname_,
                            other.meetname_ != com.google.protobuf.ByteString.EMPTY, other.meetname_);
                    streamgetcount_ = visitor.visitInt(streamgetcount_ != 0, streamgetcount_,
                            other.streamgetcount_ != 0, other.streamgetcount_);
                    screengetcount_ = visitor.visitInt(screengetcount_ != 0, screengetcount_,
                            other.screengetcount_ != 0, other.screengetcount_);
                    filegetcount_ = visitor.visitInt(filegetcount_ != 0, filegetcount_,
                            other.filegetcount_ != 0, other.filegetcount_);
                    chatcount_ = visitor.visitInt(chatcount_ != 0, chatcount_,
                            other.chatcount_ != 0, other.chatcount_);
                    servicegetcount_ = visitor.visitInt(servicegetcount_ != 0, servicegetcount_,
                            other.servicegetcount_ != 0, other.servicegetcount_);
                    whiteboardopencount_ = visitor.visitInt(whiteboardopencount_ != 0, whiteboardopencount_,
                            other.whiteboardopencount_ != 0, other.whiteboardopencount_);
                    whiteboardusecount_ = visitor.visitInt(whiteboardusecount_ != 0, whiteboardusecount_,
                            other.whiteboardusecount_ != 0, other.whiteboardusecount_);
                    votecount_ = visitor.visitInt(votecount_ != 0, votecount_,
                            other.votecount_ != 0, other.votecount_);
                    electioncount_ = visitor.visitInt(electioncount_ != 0, electioncount_,
                            other.electioncount_ != 0, other.electioncount_);
                    questioncount_ = visitor.visitInt(questioncount_ != 0, questioncount_,
                            other.questioncount_ != 0, other.questioncount_);
                    bulletcount_ = visitor.visitInt(bulletcount_ != 0, bulletcount_,
                            other.bulletcount_ != 0, other.bulletcount_);
                    addtime_ = visitor.visitLong(addtime_ != 0L, addtime_,
                            other.addtime_ != 0L, other.addtime_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 13: {

                                    meetingid_ = input.readFixed32();
                                    break;
                                }
                                case 18: {

                                    meetname_ = input.readBytes();
                                    break;
                                }
                                case 29: {

                                    streamgetcount_ = input.readFixed32();
                                    break;
                                }
                                case 37: {

                                    screengetcount_ = input.readFixed32();
                                    break;
                                }
                                case 45: {

                                    filegetcount_ = input.readFixed32();
                                    break;
                                }
                                case 53: {

                                    chatcount_ = input.readFixed32();
                                    break;
                                }
                                case 61: {

                                    servicegetcount_ = input.readFixed32();
                                    break;
                                }
                                case 69: {

                                    whiteboardopencount_ = input.readFixed32();
                                    break;
                                }
                                case 77: {

                                    whiteboardusecount_ = input.readFixed32();
                                    break;
                                }
                                case 85: {

                                    votecount_ = input.readFixed32();
                                    break;
                                }
                                case 93: {

                                    electioncount_ = input.readFixed32();
                                    break;
                                }
                                case 101: {

                                    questioncount_ = input.readFixed32();
                                    break;
                                }
                                case 109: {

                                    bulletcount_ = input.readFixed32();
                                    break;
                                }
                                case 113: {

                                    addtime_ = input.readFixed64();
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStatisticInfo.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Type_MeetStatisticInfo)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStatisticInfo DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Type_MeetStatisticInfo();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetStatisticInfo getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Type_MeetStatisticInfo> PARSER;

        public static com.google.protobuf.Parser<pbui_Type_MeetStatisticInfo> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Type_QueryQuarterStatisticOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Type_QueryQuarterStatistic)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <pre>
         *参见 Pb_MeetStatisticFlag 定义
         * </pre>
         *
         * <code>fixed32 quartertype = 1;</code>
         */
        int getQuartertype();

        /**
         * <pre>
         *统计时间段
         * </pre>
         *
         * <code>fixed32 startyear = 2;</code>
         */
        int getStartyear();

        /**
         * <pre>
         *&#47;/按月查询才有效
         * </pre>
         *
         * <code>fixed32 startmonth = 3;</code>
         */
        int getStartmonth();

        /**
         * <pre>
         * </pre>
         *
         * <code>fixed32 endyear = 4;</code>
         */
        int getEndyear();

        /**
         * <pre>
         *&#47;/按月查询才有效
         * </pre>
         *
         * <code>fixed32 endmonth = 5;</code>
         */
        int getEndmonth();
    }
    /**
     * <pre>
     *按时间段查询会议统计
     *call
     *type:Pb_TYPE_MEET_INTERFACE_MEETSTATISTIC
     *method: ask
     * </pre>
     *
     * Protobuf type {@code pbui_Type_QueryQuarterStatistic}
     */
    public  static final class pbui_Type_QueryQuarterStatistic extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Type_QueryQuarterStatistic, pbui_Type_QueryQuarterStatistic.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Type_QueryQuarterStatistic)
            pbui_Type_QueryQuarterStatisticOrBuilder {
        private pbui_Type_QueryQuarterStatistic() {
        }
        public static final int QUARTERTYPE_FIELD_NUMBER = 1;
        private int quartertype_;
        /**
         * <pre>
         *参见 Pb_MeetStatisticFlag 定义
         * </pre>
         *
         * <code>fixed32 quartertype = 1;</code>
         */
        public int getQuartertype() {
            return quartertype_;
        }
        /**
         * <pre>
         *参见 Pb_MeetStatisticFlag 定义
         * </pre>
         *
         * <code>fixed32 quartertype = 1;</code>
         */
        private void setQuartertype(int value) {

            quartertype_ = value;
        }
        /**
         * <pre>
         *参见 Pb_MeetStatisticFlag 定义
         * </pre>
         *
         * <code>fixed32 quartertype = 1;</code>
         */
        private void clearQuartertype() {

            quartertype_ = 0;
        }

        public static final int STARTYEAR_FIELD_NUMBER = 2;
        private int startyear_;
        /**
         * <pre>
         *统计时间段
         * </pre>
         *
         * <code>fixed32 startyear = 2;</code>
         */
        public int getStartyear() {
            return startyear_;
        }
        /**
         * <pre>
         *统计时间段
         * </pre>
         *
         * <code>fixed32 startyear = 2;</code>
         */
        private void setStartyear(int value) {

            startyear_ = value;
        }
        /**
         * <pre>
         *统计时间段
         * </pre>
         *
         * <code>fixed32 startyear = 2;</code>
         */
        private void clearStartyear() {

            startyear_ = 0;
        }

        public static final int STARTMONTH_FIELD_NUMBER = 3;
        private int startmonth_;
        /**
         * <pre>
         *&#47;/按月查询才有效
         * </pre>
         *
         * <code>fixed32 startmonth = 3;</code>
         */
        public int getStartmonth() {
            return startmonth_;
        }
        /**
         * <pre>
         *&#47;/按月查询才有效
         * </pre>
         *
         * <code>fixed32 startmonth = 3;</code>
         */
        private void setStartmonth(int value) {

            startmonth_ = value;
        }
        /**
         * <pre>
         *&#47;/按月查询才有效
         * </pre>
         *
         * <code>fixed32 startmonth = 3;</code>
         */
        private void clearStartmonth() {

            startmonth_ = 0;
        }

        public static final int ENDYEAR_FIELD_NUMBER = 4;
        private int endyear_;
        /**
         * <pre>
         * </pre>
         *
         * <code>fixed32 endyear = 4;</code>
         */
        public int getEndyear() {
            return endyear_;
        }
        /**
         * <pre>
         * </pre>
         *
         * <code>fixed32 endyear = 4;</code>
         */
        private void setEndyear(int value) {

            endyear_ = value;
        }
        /**
         * <pre>
         * </pre>
         *
         * <code>fixed32 endyear = 4;</code>
         */
        private void clearEndyear() {

            endyear_ = 0;
        }

        public static final int ENDMONTH_FIELD_NUMBER = 5;
        private int endmonth_;
        /**
         * <pre>
         *&#47;/按月查询才有效
         * </pre>
         *
         * <code>fixed32 endmonth = 5;</code>
         */
        public int getEndmonth() {
            return endmonth_;
        }
        /**
         * <pre>
         *&#47;/按月查询才有效
         * </pre>
         *
         * <code>fixed32 endmonth = 5;</code>
         */
        private void setEndmonth(int value) {

            endmonth_ = value;
        }
        /**
         * <pre>
         *&#47;/按月查询才有效
         * </pre>
         *
         * <code>fixed32 endmonth = 5;</code>
         */
        private void clearEndmonth() {

            endmonth_ = 0;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (quartertype_ != 0) {
                output.writeFixed32(1, quartertype_);
            }
            if (startyear_ != 0) {
                output.writeFixed32(2, startyear_);
            }
            if (startmonth_ != 0) {
                output.writeFixed32(3, startmonth_);
            }
            if (endyear_ != 0) {
                output.writeFixed32(4, endyear_);
            }
            if (endmonth_ != 0) {
                output.writeFixed32(5, endmonth_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (quartertype_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(1, quartertype_);
            }
            if (startyear_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(2, startyear_);
            }
            if (startmonth_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(3, startmonth_);
            }
            if (endyear_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(4, endyear_);
            }
            if (endmonth_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(5, endmonth_);
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_QueryQuarterStatistic parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_QueryQuarterStatistic parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_QueryQuarterStatistic parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_QueryQuarterStatistic parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_QueryQuarterStatistic parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_QueryQuarterStatistic parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_QueryQuarterStatistic parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_QueryQuarterStatistic parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_QueryQuarterStatistic parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_QueryQuarterStatistic parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_QueryQuarterStatistic parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_QueryQuarterStatistic parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_QueryQuarterStatistic prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *按时间段查询会议统计
         *call
         *type:Pb_TYPE_MEET_INTERFACE_MEETSTATISTIC
         *method: ask
         * </pre>
         *
         * Protobuf type {@code pbui_Type_QueryQuarterStatistic}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_QueryQuarterStatistic, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Type_QueryQuarterStatistic)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_QueryQuarterStatisticOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_QueryQuarterStatistic.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <pre>
             *参见 Pb_MeetStatisticFlag 定义
             * </pre>
             *
             * <code>fixed32 quartertype = 1;</code>
             */
            public int getQuartertype() {
                return instance.getQuartertype();
            }
            /**
             * <pre>
             *参见 Pb_MeetStatisticFlag 定义
             * </pre>
             *
             * <code>fixed32 quartertype = 1;</code>
             */
            public Builder setQuartertype(int value) {
                copyOnWrite();
                instance.setQuartertype(value);
                return this;
            }
            /**
             * <pre>
             *参见 Pb_MeetStatisticFlag 定义
             * </pre>
             *
             * <code>fixed32 quartertype = 1;</code>
             */
            public Builder clearQuartertype() {
                copyOnWrite();
                instance.clearQuartertype();
                return this;
            }

            /**
             * <pre>
             *统计时间段
             * </pre>
             *
             * <code>fixed32 startyear = 2;</code>
             */
            public int getStartyear() {
                return instance.getStartyear();
            }
            /**
             * <pre>
             *统计时间段
             * </pre>
             *
             * <code>fixed32 startyear = 2;</code>
             */
            public Builder setStartyear(int value) {
                copyOnWrite();
                instance.setStartyear(value);
                return this;
            }
            /**
             * <pre>
             *统计时间段
             * </pre>
             *
             * <code>fixed32 startyear = 2;</code>
             */
            public Builder clearStartyear() {
                copyOnWrite();
                instance.clearStartyear();
                return this;
            }

            /**
             * <pre>
             *&#47;/按月查询才有效
             * </pre>
             *
             * <code>fixed32 startmonth = 3;</code>
             */
            public int getStartmonth() {
                return instance.getStartmonth();
            }
            /**
             * <pre>
             *&#47;/按月查询才有效
             * </pre>
             *
             * <code>fixed32 startmonth = 3;</code>
             */
            public Builder setStartmonth(int value) {
                copyOnWrite();
                instance.setStartmonth(value);
                return this;
            }
            /**
             * <pre>
             *&#47;/按月查询才有效
             * </pre>
             *
             * <code>fixed32 startmonth = 3;</code>
             */
            public Builder clearStartmonth() {
                copyOnWrite();
                instance.clearStartmonth();
                return this;
            }

            /**
             * <pre>
             * </pre>
             *
             * <code>fixed32 endyear = 4;</code>
             */
            public int getEndyear() {
                return instance.getEndyear();
            }
            /**
             * <pre>
             * </pre>
             *
             * <code>fixed32 endyear = 4;</code>
             */
            public Builder setEndyear(int value) {
                copyOnWrite();
                instance.setEndyear(value);
                return this;
            }
            /**
             * <pre>
             * </pre>
             *
             * <code>fixed32 endyear = 4;</code>
             */
            public Builder clearEndyear() {
                copyOnWrite();
                instance.clearEndyear();
                return this;
            }

            /**
             * <pre>
             *&#47;/按月查询才有效
             * </pre>
             *
             * <code>fixed32 endmonth = 5;</code>
             */
            public int getEndmonth() {
                return instance.getEndmonth();
            }
            /**
             * <pre>
             *&#47;/按月查询才有效
             * </pre>
             *
             * <code>fixed32 endmonth = 5;</code>
             */
            public Builder setEndmonth(int value) {
                copyOnWrite();
                instance.setEndmonth(value);
                return this;
            }
            /**
             * <pre>
             *&#47;/按月查询才有效
             * </pre>
             *
             * <code>fixed32 endmonth = 5;</code>
             */
            public Builder clearEndmonth() {
                copyOnWrite();
                instance.clearEndmonth();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Type_QueryQuarterStatistic)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_QueryQuarterStatistic();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_QueryQuarterStatistic other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_QueryQuarterStatistic) arg1;
                    quartertype_ = visitor.visitInt(quartertype_ != 0, quartertype_,
                            other.quartertype_ != 0, other.quartertype_);
                    startyear_ = visitor.visitInt(startyear_ != 0, startyear_,
                            other.startyear_ != 0, other.startyear_);
                    startmonth_ = visitor.visitInt(startmonth_ != 0, startmonth_,
                            other.startmonth_ != 0, other.startmonth_);
                    endyear_ = visitor.visitInt(endyear_ != 0, endyear_,
                            other.endyear_ != 0, other.endyear_);
                    endmonth_ = visitor.visitInt(endmonth_ != 0, endmonth_,
                            other.endmonth_ != 0, other.endmonth_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 13: {

                                    quartertype_ = input.readFixed32();
                                    break;
                                }
                                case 21: {

                                    startyear_ = input.readFixed32();
                                    break;
                                }
                                case 29: {

                                    startmonth_ = input.readFixed32();
                                    break;
                                }
                                case 37: {

                                    endyear_ = input.readFixed32();
                                    break;
                                }
                                case 45: {

                                    endmonth_ = input.readFixed32();
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_QueryQuarterStatistic.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Type_QueryQuarterStatistic)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_QueryQuarterStatistic DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Type_QueryQuarterStatistic();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_QueryQuarterStatistic getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Type_QueryQuarterStatistic> PARSER;

        public static com.google.protobuf.Parser<pbui_Type_QueryQuarterStatistic> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Item_MeetOneStatisticOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Item_MeetOneStatistic)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <pre>
         *统计时间段
         * </pre>
         *
         * <code>fixed32 startyear = 1;</code>
         */
        int getStartyear();

        /**
         * <pre>
         * </pre>
         *
         * <code>fixed32 startmonth = 2;</code>
         */
        int getStartmonth();

        /**
         * <pre>
         * </pre>
         *
         * <code>fixed32 endyear = 3;</code>
         */
        int getEndyear();

        /**
         * <pre>
         * </pre>
         *
         * <code>fixed32 endmonth = 4;</code>
         */
        int getEndmonth();

        /**
         * <pre>
         *总会议数
         * </pre>
         *
         * <code>fixed32 meetingcount = 5;</code>
         */
        int getMeetingcount();

        /**
         * <pre>
         *总计数
         * </pre>
         *
         * <code>fixed32 streamgetcount = 6;</code>
         */
        int getStreamgetcount();

        /**
         * <pre>
         *同屏请求数
         * </pre>
         *
         * <code>fixed32 screengetcount = 7;</code>
         */
        int getScreengetcount();

        /**
         * <pre>
         *文件请求数
         * </pre>
         *
         * <code>fixed32 filegetcount = 8;</code>
         */
        int getFilegetcount();

        /**
         * <pre>
         *交流次数
         * </pre>
         *
         * <code>fixed32 chatcount = 9;</code>
         */
        int getChatcount();

        /**
         * <pre>
         *服务请求数
         * </pre>
         *
         * <code>fixed32 servicegetcount = 10;</code>
         */
        int getServicegetcount();

        /**
         * <pre>
         *白板发起次数
         * </pre>
         *
         * <code>fixed32 whiteboardopencount = 11;</code>
         */
        int getWhiteboardopencount();

        /**
         * <pre>
         *白板交流次数
         * </pre>
         *
         * <code>fixed32 whiteboardusecount = 12;</code>
         */
        int getWhiteboardusecount();

        /**
         * <pre>
         *投票发起次数
         * </pre>
         *
         * <code>fixed32 votecount = 13;</code>
         */
        int getVotecount();

        /**
         * <pre>
         *选举发起次数
         * </pre>
         *
         * <code>fixed32 electioncount = 14;</code>
         */
        int getElectioncount();

        /**
         * <pre>
         *问卷调查发起次数
         * </pre>
         *
         * <code>fixed32 questioncount = 15;</code>
         */
        int getQuestioncount();

        /**
         * <pre>
         *公告发起次数
         * </pre>
         *
         * <code>fixed32 bulletcount = 16;</code>
         */
        int getBulletcount();
    }
    /**
     * Protobuf type {@code pbui_Item_MeetOneStatistic}
     */
    public  static final class pbui_Item_MeetOneStatistic extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Item_MeetOneStatistic, pbui_Item_MeetOneStatistic.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Item_MeetOneStatistic)
            pbui_Item_MeetOneStatisticOrBuilder {
        private pbui_Item_MeetOneStatistic() {
        }
        public static final int STARTYEAR_FIELD_NUMBER = 1;
        private int startyear_;
        /**
         * <pre>
         *统计时间段
         * </pre>
         *
         * <code>fixed32 startyear = 1;</code>
         */
        public int getStartyear() {
            return startyear_;
        }
        /**
         * <pre>
         *统计时间段
         * </pre>
         *
         * <code>fixed32 startyear = 1;</code>
         */
        private void setStartyear(int value) {

            startyear_ = value;
        }
        /**
         * <pre>
         *统计时间段
         * </pre>
         *
         * <code>fixed32 startyear = 1;</code>
         */
        private void clearStartyear() {

            startyear_ = 0;
        }

        public static final int STARTMONTH_FIELD_NUMBER = 2;
        private int startmonth_;
        /**
         * <pre>
         * </pre>
         *
         * <code>fixed32 startmonth = 2;</code>
         */
        public int getStartmonth() {
            return startmonth_;
        }
        /**
         * <pre>
         * </pre>
         *
         * <code>fixed32 startmonth = 2;</code>
         */
        private void setStartmonth(int value) {

            startmonth_ = value;
        }
        /**
         * <pre>
         * </pre>
         *
         * <code>fixed32 startmonth = 2;</code>
         */
        private void clearStartmonth() {

            startmonth_ = 0;
        }

        public static final int ENDYEAR_FIELD_NUMBER = 3;
        private int endyear_;
        /**
         * <pre>
         * </pre>
         *
         * <code>fixed32 endyear = 3;</code>
         */
        public int getEndyear() {
            return endyear_;
        }
        /**
         * <pre>
         * </pre>
         *
         * <code>fixed32 endyear = 3;</code>
         */
        private void setEndyear(int value) {

            endyear_ = value;
        }
        /**
         * <pre>
         * </pre>
         *
         * <code>fixed32 endyear = 3;</code>
         */
        private void clearEndyear() {

            endyear_ = 0;
        }

        public static final int ENDMONTH_FIELD_NUMBER = 4;
        private int endmonth_;
        /**
         * <pre>
         * </pre>
         *
         * <code>fixed32 endmonth = 4;</code>
         */
        public int getEndmonth() {
            return endmonth_;
        }
        /**
         * <pre>
         * </pre>
         *
         * <code>fixed32 endmonth = 4;</code>
         */
        private void setEndmonth(int value) {

            endmonth_ = value;
        }
        /**
         * <pre>
         * </pre>
         *
         * <code>fixed32 endmonth = 4;</code>
         */
        private void clearEndmonth() {

            endmonth_ = 0;
        }

        public static final int MEETINGCOUNT_FIELD_NUMBER = 5;
        private int meetingcount_;
        /**
         * <pre>
         *总会议数
         * </pre>
         *
         * <code>fixed32 meetingcount = 5;</code>
         */
        public int getMeetingcount() {
            return meetingcount_;
        }
        /**
         * <pre>
         *总会议数
         * </pre>
         *
         * <code>fixed32 meetingcount = 5;</code>
         */
        private void setMeetingcount(int value) {

            meetingcount_ = value;
        }
        /**
         * <pre>
         *总会议数
         * </pre>
         *
         * <code>fixed32 meetingcount = 5;</code>
         */
        private void clearMeetingcount() {

            meetingcount_ = 0;
        }

        public static final int STREAMGETCOUNT_FIELD_NUMBER = 6;
        private int streamgetcount_;
        /**
         * <pre>
         *总计数
         * </pre>
         *
         * <code>fixed32 streamgetcount = 6;</code>
         */
        public int getStreamgetcount() {
            return streamgetcount_;
        }
        /**
         * <pre>
         *总计数
         * </pre>
         *
         * <code>fixed32 streamgetcount = 6;</code>
         */
        private void setStreamgetcount(int value) {

            streamgetcount_ = value;
        }
        /**
         * <pre>
         *总计数
         * </pre>
         *
         * <code>fixed32 streamgetcount = 6;</code>
         */
        private void clearStreamgetcount() {

            streamgetcount_ = 0;
        }

        public static final int SCREENGETCOUNT_FIELD_NUMBER = 7;
        private int screengetcount_;
        /**
         * <pre>
         *同屏请求数
         * </pre>
         *
         * <code>fixed32 screengetcount = 7;</code>
         */
        public int getScreengetcount() {
            return screengetcount_;
        }
        /**
         * <pre>
         *同屏请求数
         * </pre>
         *
         * <code>fixed32 screengetcount = 7;</code>
         */
        private void setScreengetcount(int value) {

            screengetcount_ = value;
        }
        /**
         * <pre>
         *同屏请求数
         * </pre>
         *
         * <code>fixed32 screengetcount = 7;</code>
         */
        private void clearScreengetcount() {

            screengetcount_ = 0;
        }

        public static final int FILEGETCOUNT_FIELD_NUMBER = 8;
        private int filegetcount_;
        /**
         * <pre>
         *文件请求数
         * </pre>
         *
         * <code>fixed32 filegetcount = 8;</code>
         */
        public int getFilegetcount() {
            return filegetcount_;
        }
        /**
         * <pre>
         *文件请求数
         * </pre>
         *
         * <code>fixed32 filegetcount = 8;</code>
         */
        private void setFilegetcount(int value) {

            filegetcount_ = value;
        }
        /**
         * <pre>
         *文件请求数
         * </pre>
         *
         * <code>fixed32 filegetcount = 8;</code>
         */
        private void clearFilegetcount() {

            filegetcount_ = 0;
        }

        public static final int CHATCOUNT_FIELD_NUMBER = 9;
        private int chatcount_;
        /**
         * <pre>
         *交流次数
         * </pre>
         *
         * <code>fixed32 chatcount = 9;</code>
         */
        public int getChatcount() {
            return chatcount_;
        }
        /**
         * <pre>
         *交流次数
         * </pre>
         *
         * <code>fixed32 chatcount = 9;</code>
         */
        private void setChatcount(int value) {

            chatcount_ = value;
        }
        /**
         * <pre>
         *交流次数
         * </pre>
         *
         * <code>fixed32 chatcount = 9;</code>
         */
        private void clearChatcount() {

            chatcount_ = 0;
        }

        public static final int SERVICEGETCOUNT_FIELD_NUMBER = 10;
        private int servicegetcount_;
        /**
         * <pre>
         *服务请求数
         * </pre>
         *
         * <code>fixed32 servicegetcount = 10;</code>
         */
        public int getServicegetcount() {
            return servicegetcount_;
        }
        /**
         * <pre>
         *服务请求数
         * </pre>
         *
         * <code>fixed32 servicegetcount = 10;</code>
         */
        private void setServicegetcount(int value) {

            servicegetcount_ = value;
        }
        /**
         * <pre>
         *服务请求数
         * </pre>
         *
         * <code>fixed32 servicegetcount = 10;</code>
         */
        private void clearServicegetcount() {

            servicegetcount_ = 0;
        }

        public static final int WHITEBOARDOPENCOUNT_FIELD_NUMBER = 11;
        private int whiteboardopencount_;
        /**
         * <pre>
         *白板发起次数
         * </pre>
         *
         * <code>fixed32 whiteboardopencount = 11;</code>
         */
        public int getWhiteboardopencount() {
            return whiteboardopencount_;
        }
        /**
         * <pre>
         *白板发起次数
         * </pre>
         *
         * <code>fixed32 whiteboardopencount = 11;</code>
         */
        private void setWhiteboardopencount(int value) {

            whiteboardopencount_ = value;
        }
        /**
         * <pre>
         *白板发起次数
         * </pre>
         *
         * <code>fixed32 whiteboardopencount = 11;</code>
         */
        private void clearWhiteboardopencount() {

            whiteboardopencount_ = 0;
        }

        public static final int WHITEBOARDUSECOUNT_FIELD_NUMBER = 12;
        private int whiteboardusecount_;
        /**
         * <pre>
         *白板交流次数
         * </pre>
         *
         * <code>fixed32 whiteboardusecount = 12;</code>
         */
        public int getWhiteboardusecount() {
            return whiteboardusecount_;
        }
        /**
         * <pre>
         *白板交流次数
         * </pre>
         *
         * <code>fixed32 whiteboardusecount = 12;</code>
         */
        private void setWhiteboardusecount(int value) {

            whiteboardusecount_ = value;
        }
        /**
         * <pre>
         *白板交流次数
         * </pre>
         *
         * <code>fixed32 whiteboardusecount = 12;</code>
         */
        private void clearWhiteboardusecount() {

            whiteboardusecount_ = 0;
        }

        public static final int VOTECOUNT_FIELD_NUMBER = 13;
        private int votecount_;
        /**
         * <pre>
         *投票发起次数
         * </pre>
         *
         * <code>fixed32 votecount = 13;</code>
         */
        public int getVotecount() {
            return votecount_;
        }
        /**
         * <pre>
         *投票发起次数
         * </pre>
         *
         * <code>fixed32 votecount = 13;</code>
         */
        private void setVotecount(int value) {

            votecount_ = value;
        }
        /**
         * <pre>
         *投票发起次数
         * </pre>
         *
         * <code>fixed32 votecount = 13;</code>
         */
        private void clearVotecount() {

            votecount_ = 0;
        }

        public static final int ELECTIONCOUNT_FIELD_NUMBER = 14;
        private int electioncount_;
        /**
         * <pre>
         *选举发起次数
         * </pre>
         *
         * <code>fixed32 electioncount = 14;</code>
         */
        public int getElectioncount() {
            return electioncount_;
        }
        /**
         * <pre>
         *选举发起次数
         * </pre>
         *
         * <code>fixed32 electioncount = 14;</code>
         */
        private void setElectioncount(int value) {

            electioncount_ = value;
        }
        /**
         * <pre>
         *选举发起次数
         * </pre>
         *
         * <code>fixed32 electioncount = 14;</code>
         */
        private void clearElectioncount() {

            electioncount_ = 0;
        }

        public static final int QUESTIONCOUNT_FIELD_NUMBER = 15;
        private int questioncount_;
        /**
         * <pre>
         *问卷调查发起次数
         * </pre>
         *
         * <code>fixed32 questioncount = 15;</code>
         */
        public int getQuestioncount() {
            return questioncount_;
        }
        /**
         * <pre>
         *问卷调查发起次数
         * </pre>
         *
         * <code>fixed32 questioncount = 15;</code>
         */
        private void setQuestioncount(int value) {

            questioncount_ = value;
        }
        /**
         * <pre>
         *问卷调查发起次数
         * </pre>
         *
         * <code>fixed32 questioncount = 15;</code>
         */
        private void clearQuestioncount() {

            questioncount_ = 0;
        }

        public static final int BULLETCOUNT_FIELD_NUMBER = 16;
        private int bulletcount_;
        /**
         * <pre>
         *公告发起次数
         * </pre>
         *
         * <code>fixed32 bulletcount = 16;</code>
         */
        public int getBulletcount() {
            return bulletcount_;
        }
        /**
         * <pre>
         *公告发起次数
         * </pre>
         *
         * <code>fixed32 bulletcount = 16;</code>
         */
        private void setBulletcount(int value) {

            bulletcount_ = value;
        }
        /**
         * <pre>
         *公告发起次数
         * </pre>
         *
         * <code>fixed32 bulletcount = 16;</code>
         */
        private void clearBulletcount() {

            bulletcount_ = 0;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (startyear_ != 0) {
                output.writeFixed32(1, startyear_);
            }
            if (startmonth_ != 0) {
                output.writeFixed32(2, startmonth_);
            }
            if (endyear_ != 0) {
                output.writeFixed32(3, endyear_);
            }
            if (endmonth_ != 0) {
                output.writeFixed32(4, endmonth_);
            }
            if (meetingcount_ != 0) {
                output.writeFixed32(5, meetingcount_);
            }
            if (streamgetcount_ != 0) {
                output.writeFixed32(6, streamgetcount_);
            }
            if (screengetcount_ != 0) {
                output.writeFixed32(7, screengetcount_);
            }
            if (filegetcount_ != 0) {
                output.writeFixed32(8, filegetcount_);
            }
            if (chatcount_ != 0) {
                output.writeFixed32(9, chatcount_);
            }
            if (servicegetcount_ != 0) {
                output.writeFixed32(10, servicegetcount_);
            }
            if (whiteboardopencount_ != 0) {
                output.writeFixed32(11, whiteboardopencount_);
            }
            if (whiteboardusecount_ != 0) {
                output.writeFixed32(12, whiteboardusecount_);
            }
            if (votecount_ != 0) {
                output.writeFixed32(13, votecount_);
            }
            if (electioncount_ != 0) {
                output.writeFixed32(14, electioncount_);
            }
            if (questioncount_ != 0) {
                output.writeFixed32(15, questioncount_);
            }
            if (bulletcount_ != 0) {
                output.writeFixed32(16, bulletcount_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (startyear_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(1, startyear_);
            }
            if (startmonth_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(2, startmonth_);
            }
            if (endyear_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(3, endyear_);
            }
            if (endmonth_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(4, endmonth_);
            }
            if (meetingcount_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(5, meetingcount_);
            }
            if (streamgetcount_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(6, streamgetcount_);
            }
            if (screengetcount_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(7, screengetcount_);
            }
            if (filegetcount_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(8, filegetcount_);
            }
            if (chatcount_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(9, chatcount_);
            }
            if (servicegetcount_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(10, servicegetcount_);
            }
            if (whiteboardopencount_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(11, whiteboardopencount_);
            }
            if (whiteboardusecount_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(12, whiteboardusecount_);
            }
            if (votecount_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(13, votecount_);
            }
            if (electioncount_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(14, electioncount_);
            }
            if (questioncount_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(15, questioncount_);
            }
            if (bulletcount_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(16, bulletcount_);
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOneStatistic parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOneStatistic parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOneStatistic parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOneStatistic parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOneStatistic parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOneStatistic parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOneStatistic parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOneStatistic parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOneStatistic parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOneStatistic parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOneStatistic parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOneStatistic parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOneStatistic prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * Protobuf type {@code pbui_Item_MeetOneStatistic}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOneStatistic, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Item_MeetOneStatistic)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOneStatisticOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOneStatistic.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <pre>
             *统计时间段
             * </pre>
             *
             * <code>fixed32 startyear = 1;</code>
             */
            public int getStartyear() {
                return instance.getStartyear();
            }
            /**
             * <pre>
             *统计时间段
             * </pre>
             *
             * <code>fixed32 startyear = 1;</code>
             */
            public Builder setStartyear(int value) {
                copyOnWrite();
                instance.setStartyear(value);
                return this;
            }
            /**
             * <pre>
             *统计时间段
             * </pre>
             *
             * <code>fixed32 startyear = 1;</code>
             */
            public Builder clearStartyear() {
                copyOnWrite();
                instance.clearStartyear();
                return this;
            }

            /**
             * <pre>
             * </pre>
             *
             * <code>fixed32 startmonth = 2;</code>
             */
            public int getStartmonth() {
                return instance.getStartmonth();
            }
            /**
             * <pre>
             * </pre>
             *
             * <code>fixed32 startmonth = 2;</code>
             */
            public Builder setStartmonth(int value) {
                copyOnWrite();
                instance.setStartmonth(value);
                return this;
            }
            /**
             * <pre>
             * </pre>
             *
             * <code>fixed32 startmonth = 2;</code>
             */
            public Builder clearStartmonth() {
                copyOnWrite();
                instance.clearStartmonth();
                return this;
            }

            /**
             * <pre>
             * </pre>
             *
             * <code>fixed32 endyear = 3;</code>
             */
            public int getEndyear() {
                return instance.getEndyear();
            }
            /**
             * <pre>
             * </pre>
             *
             * <code>fixed32 endyear = 3;</code>
             */
            public Builder setEndyear(int value) {
                copyOnWrite();
                instance.setEndyear(value);
                return this;
            }
            /**
             * <pre>
             * </pre>
             *
             * <code>fixed32 endyear = 3;</code>
             */
            public Builder clearEndyear() {
                copyOnWrite();
                instance.clearEndyear();
                return this;
            }

            /**
             * <pre>
             * </pre>
             *
             * <code>fixed32 endmonth = 4;</code>
             */
            public int getEndmonth() {
                return instance.getEndmonth();
            }
            /**
             * <pre>
             * </pre>
             *
             * <code>fixed32 endmonth = 4;</code>
             */
            public Builder setEndmonth(int value) {
                copyOnWrite();
                instance.setEndmonth(value);
                return this;
            }
            /**
             * <pre>
             * </pre>
             *
             * <code>fixed32 endmonth = 4;</code>
             */
            public Builder clearEndmonth() {
                copyOnWrite();
                instance.clearEndmonth();
                return this;
            }

            /**
             * <pre>
             *总会议数
             * </pre>
             *
             * <code>fixed32 meetingcount = 5;</code>
             */
            public int getMeetingcount() {
                return instance.getMeetingcount();
            }
            /**
             * <pre>
             *总会议数
             * </pre>
             *
             * <code>fixed32 meetingcount = 5;</code>
             */
            public Builder setMeetingcount(int value) {
                copyOnWrite();
                instance.setMeetingcount(value);
                return this;
            }
            /**
             * <pre>
             *总会议数
             * </pre>
             *
             * <code>fixed32 meetingcount = 5;</code>
             */
            public Builder clearMeetingcount() {
                copyOnWrite();
                instance.clearMeetingcount();
                return this;
            }

            /**
             * <pre>
             *总计数
             * </pre>
             *
             * <code>fixed32 streamgetcount = 6;</code>
             */
            public int getStreamgetcount() {
                return instance.getStreamgetcount();
            }
            /**
             * <pre>
             *总计数
             * </pre>
             *
             * <code>fixed32 streamgetcount = 6;</code>
             */
            public Builder setStreamgetcount(int value) {
                copyOnWrite();
                instance.setStreamgetcount(value);
                return this;
            }
            /**
             * <pre>
             *总计数
             * </pre>
             *
             * <code>fixed32 streamgetcount = 6;</code>
             */
            public Builder clearStreamgetcount() {
                copyOnWrite();
                instance.clearStreamgetcount();
                return this;
            }

            /**
             * <pre>
             *同屏请求数
             * </pre>
             *
             * <code>fixed32 screengetcount = 7;</code>
             */
            public int getScreengetcount() {
                return instance.getScreengetcount();
            }
            /**
             * <pre>
             *同屏请求数
             * </pre>
             *
             * <code>fixed32 screengetcount = 7;</code>
             */
            public Builder setScreengetcount(int value) {
                copyOnWrite();
                instance.setScreengetcount(value);
                return this;
            }
            /**
             * <pre>
             *同屏请求数
             * </pre>
             *
             * <code>fixed32 screengetcount = 7;</code>
             */
            public Builder clearScreengetcount() {
                copyOnWrite();
                instance.clearScreengetcount();
                return this;
            }

            /**
             * <pre>
             *文件请求数
             * </pre>
             *
             * <code>fixed32 filegetcount = 8;</code>
             */
            public int getFilegetcount() {
                return instance.getFilegetcount();
            }
            /**
             * <pre>
             *文件请求数
             * </pre>
             *
             * <code>fixed32 filegetcount = 8;</code>
             */
            public Builder setFilegetcount(int value) {
                copyOnWrite();
                instance.setFilegetcount(value);
                return this;
            }
            /**
             * <pre>
             *文件请求数
             * </pre>
             *
             * <code>fixed32 filegetcount = 8;</code>
             */
            public Builder clearFilegetcount() {
                copyOnWrite();
                instance.clearFilegetcount();
                return this;
            }

            /**
             * <pre>
             *交流次数
             * </pre>
             *
             * <code>fixed32 chatcount = 9;</code>
             */
            public int getChatcount() {
                return instance.getChatcount();
            }
            /**
             * <pre>
             *交流次数
             * </pre>
             *
             * <code>fixed32 chatcount = 9;</code>
             */
            public Builder setChatcount(int value) {
                copyOnWrite();
                instance.setChatcount(value);
                return this;
            }
            /**
             * <pre>
             *交流次数
             * </pre>
             *
             * <code>fixed32 chatcount = 9;</code>
             */
            public Builder clearChatcount() {
                copyOnWrite();
                instance.clearChatcount();
                return this;
            }

            /**
             * <pre>
             *服务请求数
             * </pre>
             *
             * <code>fixed32 servicegetcount = 10;</code>
             */
            public int getServicegetcount() {
                return instance.getServicegetcount();
            }
            /**
             * <pre>
             *服务请求数
             * </pre>
             *
             * <code>fixed32 servicegetcount = 10;</code>
             */
            public Builder setServicegetcount(int value) {
                copyOnWrite();
                instance.setServicegetcount(value);
                return this;
            }
            /**
             * <pre>
             *服务请求数
             * </pre>
             *
             * <code>fixed32 servicegetcount = 10;</code>
             */
            public Builder clearServicegetcount() {
                copyOnWrite();
                instance.clearServicegetcount();
                return this;
            }

            /**
             * <pre>
             *白板发起次数
             * </pre>
             *
             * <code>fixed32 whiteboardopencount = 11;</code>
             */
            public int getWhiteboardopencount() {
                return instance.getWhiteboardopencount();
            }
            /**
             * <pre>
             *白板发起次数
             * </pre>
             *
             * <code>fixed32 whiteboardopencount = 11;</code>
             */
            public Builder setWhiteboardopencount(int value) {
                copyOnWrite();
                instance.setWhiteboardopencount(value);
                return this;
            }
            /**
             * <pre>
             *白板发起次数
             * </pre>
             *
             * <code>fixed32 whiteboardopencount = 11;</code>
             */
            public Builder clearWhiteboardopencount() {
                copyOnWrite();
                instance.clearWhiteboardopencount();
                return this;
            }

            /**
             * <pre>
             *白板交流次数
             * </pre>
             *
             * <code>fixed32 whiteboardusecount = 12;</code>
             */
            public int getWhiteboardusecount() {
                return instance.getWhiteboardusecount();
            }
            /**
             * <pre>
             *白板交流次数
             * </pre>
             *
             * <code>fixed32 whiteboardusecount = 12;</code>
             */
            public Builder setWhiteboardusecount(int value) {
                copyOnWrite();
                instance.setWhiteboardusecount(value);
                return this;
            }
            /**
             * <pre>
             *白板交流次数
             * </pre>
             *
             * <code>fixed32 whiteboardusecount = 12;</code>
             */
            public Builder clearWhiteboardusecount() {
                copyOnWrite();
                instance.clearWhiteboardusecount();
                return this;
            }

            /**
             * <pre>
             *投票发起次数
             * </pre>
             *
             * <code>fixed32 votecount = 13;</code>
             */
            public int getVotecount() {
                return instance.getVotecount();
            }
            /**
             * <pre>
             *投票发起次数
             * </pre>
             *
             * <code>fixed32 votecount = 13;</code>
             */
            public Builder setVotecount(int value) {
                copyOnWrite();
                instance.setVotecount(value);
                return this;
            }
            /**
             * <pre>
             *投票发起次数
             * </pre>
             *
             * <code>fixed32 votecount = 13;</code>
             */
            public Builder clearVotecount() {
                copyOnWrite();
                instance.clearVotecount();
                return this;
            }

            /**
             * <pre>
             *选举发起次数
             * </pre>
             *
             * <code>fixed32 electioncount = 14;</code>
             */
            public int getElectioncount() {
                return instance.getElectioncount();
            }
            /**
             * <pre>
             *选举发起次数
             * </pre>
             *
             * <code>fixed32 electioncount = 14;</code>
             */
            public Builder setElectioncount(int value) {
                copyOnWrite();
                instance.setElectioncount(value);
                return this;
            }
            /**
             * <pre>
             *选举发起次数
             * </pre>
             *
             * <code>fixed32 electioncount = 14;</code>
             */
            public Builder clearElectioncount() {
                copyOnWrite();
                instance.clearElectioncount();
                return this;
            }

            /**
             * <pre>
             *问卷调查发起次数
             * </pre>
             *
             * <code>fixed32 questioncount = 15;</code>
             */
            public int getQuestioncount() {
                return instance.getQuestioncount();
            }
            /**
             * <pre>
             *问卷调查发起次数
             * </pre>
             *
             * <code>fixed32 questioncount = 15;</code>
             */
            public Builder setQuestioncount(int value) {
                copyOnWrite();
                instance.setQuestioncount(value);
                return this;
            }
            /**
             * <pre>
             *问卷调查发起次数
             * </pre>
             *
             * <code>fixed32 questioncount = 15;</code>
             */
            public Builder clearQuestioncount() {
                copyOnWrite();
                instance.clearQuestioncount();
                return this;
            }

            /**
             * <pre>
             *公告发起次数
             * </pre>
             *
             * <code>fixed32 bulletcount = 16;</code>
             */
            public int getBulletcount() {
                return instance.getBulletcount();
            }
            /**
             * <pre>
             *公告发起次数
             * </pre>
             *
             * <code>fixed32 bulletcount = 16;</code>
             */
            public Builder setBulletcount(int value) {
                copyOnWrite();
                instance.setBulletcount(value);
                return this;
            }
            /**
             * <pre>
             *公告发起次数
             * </pre>
             *
             * <code>fixed32 bulletcount = 16;</code>
             */
            public Builder clearBulletcount() {
                copyOnWrite();
                instance.clearBulletcount();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Item_MeetOneStatistic)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOneStatistic();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOneStatistic other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOneStatistic) arg1;
                    startyear_ = visitor.visitInt(startyear_ != 0, startyear_,
                            other.startyear_ != 0, other.startyear_);
                    startmonth_ = visitor.visitInt(startmonth_ != 0, startmonth_,
                            other.startmonth_ != 0, other.startmonth_);
                    endyear_ = visitor.visitInt(endyear_ != 0, endyear_,
                            other.endyear_ != 0, other.endyear_);
                    endmonth_ = visitor.visitInt(endmonth_ != 0, endmonth_,
                            other.endmonth_ != 0, other.endmonth_);
                    meetingcount_ = visitor.visitInt(meetingcount_ != 0, meetingcount_,
                            other.meetingcount_ != 0, other.meetingcount_);
                    streamgetcount_ = visitor.visitInt(streamgetcount_ != 0, streamgetcount_,
                            other.streamgetcount_ != 0, other.streamgetcount_);
                    screengetcount_ = visitor.visitInt(screengetcount_ != 0, screengetcount_,
                            other.screengetcount_ != 0, other.screengetcount_);
                    filegetcount_ = visitor.visitInt(filegetcount_ != 0, filegetcount_,
                            other.filegetcount_ != 0, other.filegetcount_);
                    chatcount_ = visitor.visitInt(chatcount_ != 0, chatcount_,
                            other.chatcount_ != 0, other.chatcount_);
                    servicegetcount_ = visitor.visitInt(servicegetcount_ != 0, servicegetcount_,
                            other.servicegetcount_ != 0, other.servicegetcount_);
                    whiteboardopencount_ = visitor.visitInt(whiteboardopencount_ != 0, whiteboardopencount_,
                            other.whiteboardopencount_ != 0, other.whiteboardopencount_);
                    whiteboardusecount_ = visitor.visitInt(whiteboardusecount_ != 0, whiteboardusecount_,
                            other.whiteboardusecount_ != 0, other.whiteboardusecount_);
                    votecount_ = visitor.visitInt(votecount_ != 0, votecount_,
                            other.votecount_ != 0, other.votecount_);
                    electioncount_ = visitor.visitInt(electioncount_ != 0, electioncount_,
                            other.electioncount_ != 0, other.electioncount_);
                    questioncount_ = visitor.visitInt(questioncount_ != 0, questioncount_,
                            other.questioncount_ != 0, other.questioncount_);
                    bulletcount_ = visitor.visitInt(bulletcount_ != 0, bulletcount_,
                            other.bulletcount_ != 0, other.bulletcount_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 13: {

                                    startyear_ = input.readFixed32();
                                    break;
                                }
                                case 21: {

                                    startmonth_ = input.readFixed32();
                                    break;
                                }
                                case 29: {

                                    endyear_ = input.readFixed32();
                                    break;
                                }
                                case 37: {

                                    endmonth_ = input.readFixed32();
                                    break;
                                }
                                case 45: {

                                    meetingcount_ = input.readFixed32();
                                    break;
                                }
                                case 53: {

                                    streamgetcount_ = input.readFixed32();
                                    break;
                                }
                                case 61: {

                                    screengetcount_ = input.readFixed32();
                                    break;
                                }
                                case 69: {

                                    filegetcount_ = input.readFixed32();
                                    break;
                                }
                                case 77: {

                                    chatcount_ = input.readFixed32();
                                    break;
                                }
                                case 85: {

                                    servicegetcount_ = input.readFixed32();
                                    break;
                                }
                                case 93: {

                                    whiteboardopencount_ = input.readFixed32();
                                    break;
                                }
                                case 101: {

                                    whiteboardusecount_ = input.readFixed32();
                                    break;
                                }
                                case 109: {

                                    votecount_ = input.readFixed32();
                                    break;
                                }
                                case 117: {

                                    electioncount_ = input.readFixed32();
                                    break;
                                }
                                case 125: {

                                    questioncount_ = input.readFixed32();
                                    break;
                                }
                                case 133: {

                                    bulletcount_ = input.readFixed32();
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOneStatistic.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Item_MeetOneStatistic)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOneStatistic DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Item_MeetOneStatistic();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOneStatistic getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Item_MeetOneStatistic> PARSER;

        public static com.google.protobuf.Parser<pbui_Item_MeetOneStatistic> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Type_MeetQuarterStatisticInfoOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Type_MeetQuarterStatisticInfo)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <pre>
         *&#47;/参见 Pb_MeetStatisticFlag 定义
         * </pre>
         *
         * <code>fixed32 quartertype = 1;</code>
         */
        int getQuartertype();

        /**
         * <code>repeated .pbui_Item_MeetOneStatistic item = 2;</code>
         */
        java.util.List<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOneStatistic>
        getItemList();
        /**
         * <code>repeated .pbui_Item_MeetOneStatistic item = 2;</code>
         */
        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOneStatistic getItem(int index);
        /**
         * <code>repeated .pbui_Item_MeetOneStatistic item = 2;</code>
         */
        int getItemCount();
    }
    /**
     * <pre>
     *返回按时间段查询会议统计
     *callback
     *type:Pb_TYPE_MEET_INTERFACE_MEETSTATISTIC
     *method: ask
     * </pre>
     *
     * Protobuf type {@code pbui_Type_MeetQuarterStatisticInfo}
     */
    public  static final class pbui_Type_MeetQuarterStatisticInfo extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Type_MeetQuarterStatisticInfo, pbui_Type_MeetQuarterStatisticInfo.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Type_MeetQuarterStatisticInfo)
            pbui_Type_MeetQuarterStatisticInfoOrBuilder {
        private pbui_Type_MeetQuarterStatisticInfo() {
            item_ = emptyProtobufList();
        }
        private int bitField0_;
        public static final int QUARTERTYPE_FIELD_NUMBER = 1;
        private int quartertype_;
        /**
         * <pre>
         *&#47;/参见 Pb_MeetStatisticFlag 定义
         * </pre>
         *
         * <code>fixed32 quartertype = 1;</code>
         */
        public int getQuartertype() {
            return quartertype_;
        }
        /**
         * <pre>
         *&#47;/参见 Pb_MeetStatisticFlag 定义
         * </pre>
         *
         * <code>fixed32 quartertype = 1;</code>
         */
        private void setQuartertype(int value) {

            quartertype_ = value;
        }
        /**
         * <pre>
         *&#47;/参见 Pb_MeetStatisticFlag 定义
         * </pre>
         *
         * <code>fixed32 quartertype = 1;</code>
         */
        private void clearQuartertype() {

            quartertype_ = 0;
        }

        public static final int ITEM_FIELD_NUMBER = 2;
        private com.google.protobuf.Internal.ProtobufList<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOneStatistic> item_;
        /**
         * <code>repeated .pbui_Item_MeetOneStatistic item = 2;</code>
         */
        public java.util.List<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOneStatistic> getItemList() {
            return item_;
        }
        /**
         * <code>repeated .pbui_Item_MeetOneStatistic item = 2;</code>
         */
        public java.util.List<? extends com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOneStatisticOrBuilder>
        getItemOrBuilderList() {
            return item_;
        }
        /**
         * <code>repeated .pbui_Item_MeetOneStatistic item = 2;</code>
         */
        public int getItemCount() {
            return item_.size();
        }
        /**
         * <code>repeated .pbui_Item_MeetOneStatistic item = 2;</code>
         */
        public com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOneStatistic getItem(int index) {
            return item_.get(index);
        }
        /**
         * <code>repeated .pbui_Item_MeetOneStatistic item = 2;</code>
         */
        public com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOneStatisticOrBuilder getItemOrBuilder(
                int index) {
            return item_.get(index);
        }
        private void ensureItemIsMutable() {
            if (!item_.isModifiable()) {
                item_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(item_);
            }
        }

        /**
         * <code>repeated .pbui_Item_MeetOneStatistic item = 2;</code>
         */
        private void setItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOneStatistic value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensureItemIsMutable();
            item_.set(index, value);
        }
        /**
         * <code>repeated .pbui_Item_MeetOneStatistic item = 2;</code>
         */
        private void setItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOneStatistic.Builder builderForValue) {
            ensureItemIsMutable();
            item_.set(index, builderForValue.build());
        }
        /**
         * <code>repeated .pbui_Item_MeetOneStatistic item = 2;</code>
         */
        private void addItem(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOneStatistic value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensureItemIsMutable();
            item_.add(value);
        }
        /**
         * <code>repeated .pbui_Item_MeetOneStatistic item = 2;</code>
         */
        private void addItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOneStatistic value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensureItemIsMutable();
            item_.add(index, value);
        }
        /**
         * <code>repeated .pbui_Item_MeetOneStatistic item = 2;</code>
         */
        private void addItem(
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOneStatistic.Builder builderForValue) {
            ensureItemIsMutable();
            item_.add(builderForValue.build());
        }
        /**
         * <code>repeated .pbui_Item_MeetOneStatistic item = 2;</code>
         */
        private void addItem(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOneStatistic.Builder builderForValue) {
            ensureItemIsMutable();
            item_.add(index, builderForValue.build());
        }
        /**
         * <code>repeated .pbui_Item_MeetOneStatistic item = 2;</code>
         */
        private void addAllItem(
                java.lang.Iterable<? extends com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOneStatistic> values) {
            ensureItemIsMutable();
            com.google.protobuf.AbstractMessageLite.addAll(
                    values, item_);
        }
        /**
         * <code>repeated .pbui_Item_MeetOneStatistic item = 2;</code>
         */
        private void clearItem() {
            item_ = emptyProtobufList();
        }
        /**
         * <code>repeated .pbui_Item_MeetOneStatistic item = 2;</code>
         */
        private void removeItem(int index) {
            ensureItemIsMutable();
            item_.remove(index);
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (quartertype_ != 0) {
                output.writeFixed32(1, quartertype_);
            }
            for (int i = 0; i < item_.size(); i++) {
                output.writeMessage(2, item_.get(i));
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (quartertype_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(1, quartertype_);
            }
            for (int i = 0; i < item_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(2, item_.get(i));
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetQuarterStatisticInfo parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetQuarterStatisticInfo parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetQuarterStatisticInfo parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetQuarterStatisticInfo parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetQuarterStatisticInfo parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetQuarterStatisticInfo parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetQuarterStatisticInfo parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetQuarterStatisticInfo parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetQuarterStatisticInfo parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetQuarterStatisticInfo parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetQuarterStatisticInfo parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetQuarterStatisticInfo parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetQuarterStatisticInfo prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *返回按时间段查询会议统计
         *callback
         *type:Pb_TYPE_MEET_INTERFACE_MEETSTATISTIC
         *method: ask
         * </pre>
         *
         * Protobuf type {@code pbui_Type_MeetQuarterStatisticInfo}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetQuarterStatisticInfo, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Type_MeetQuarterStatisticInfo)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetQuarterStatisticInfoOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetQuarterStatisticInfo.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <pre>
             *&#47;/参见 Pb_MeetStatisticFlag 定义
             * </pre>
             *
             * <code>fixed32 quartertype = 1;</code>
             */
            public int getQuartertype() {
                return instance.getQuartertype();
            }
            /**
             * <pre>
             *&#47;/参见 Pb_MeetStatisticFlag 定义
             * </pre>
             *
             * <code>fixed32 quartertype = 1;</code>
             */
            public Builder setQuartertype(int value) {
                copyOnWrite();
                instance.setQuartertype(value);
                return this;
            }
            /**
             * <pre>
             *&#47;/参见 Pb_MeetStatisticFlag 定义
             * </pre>
             *
             * <code>fixed32 quartertype = 1;</code>
             */
            public Builder clearQuartertype() {
                copyOnWrite();
                instance.clearQuartertype();
                return this;
            }

            /**
             * <code>repeated .pbui_Item_MeetOneStatistic item = 2;</code>
             */
            public java.util.List<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOneStatistic> getItemList() {
                return java.util.Collections.unmodifiableList(
                        instance.getItemList());
            }
            /**
             * <code>repeated .pbui_Item_MeetOneStatistic item = 2;</code>
             */
            public int getItemCount() {
                return instance.getItemCount();
            }/**
             * <code>repeated .pbui_Item_MeetOneStatistic item = 2;</code>
             */
            public com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOneStatistic getItem(int index) {
                return instance.getItem(index);
            }
            /**
             * <code>repeated .pbui_Item_MeetOneStatistic item = 2;</code>
             */
            public Builder setItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOneStatistic value) {
                copyOnWrite();
                instance.setItem(index, value);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetOneStatistic item = 2;</code>
             */
            public Builder setItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOneStatistic.Builder builderForValue) {
                copyOnWrite();
                instance.setItem(index, builderForValue);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetOneStatistic item = 2;</code>
             */
            public Builder addItem(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOneStatistic value) {
                copyOnWrite();
                instance.addItem(value);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetOneStatistic item = 2;</code>
             */
            public Builder addItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOneStatistic value) {
                copyOnWrite();
                instance.addItem(index, value);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetOneStatistic item = 2;</code>
             */
            public Builder addItem(
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOneStatistic.Builder builderForValue) {
                copyOnWrite();
                instance.addItem(builderForValue);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetOneStatistic item = 2;</code>
             */
            public Builder addItem(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOneStatistic.Builder builderForValue) {
                copyOnWrite();
                instance.addItem(index, builderForValue);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetOneStatistic item = 2;</code>
             */
            public Builder addAllItem(
                    java.lang.Iterable<? extends com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOneStatistic> values) {
                copyOnWrite();
                instance.addAllItem(values);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetOneStatistic item = 2;</code>
             */
            public Builder clearItem() {
                copyOnWrite();
                instance.clearItem();
                return this;
            }
            /**
             * <code>repeated .pbui_Item_MeetOneStatistic item = 2;</code>
             */
            public Builder removeItem(int index) {
                copyOnWrite();
                instance.removeItem(index);
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Type_MeetQuarterStatisticInfo)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetQuarterStatisticInfo();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    item_.makeImmutable();
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetQuarterStatisticInfo other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetQuarterStatisticInfo) arg1;
                    quartertype_ = visitor.visitInt(quartertype_ != 0, quartertype_,
                            other.quartertype_ != 0, other.quartertype_);
                    item_= visitor.visitList(item_, other.item_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                        bitField0_ |= other.bitField0_;
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 13: {

                                    quartertype_ = input.readFixed32();
                                    break;
                                }
                                case 18: {
                                    if (!item_.isModifiable()) {
                                        item_ =
                                                com.google.protobuf.GeneratedMessageLite.mutableCopy(item_);
                                    }
                                    item_.add(
                                            input.readMessage(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_MeetOneStatistic.parser(), extensionRegistry));
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetQuarterStatisticInfo.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Type_MeetQuarterStatisticInfo)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetQuarterStatisticInfo DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Type_MeetQuarterStatisticInfo();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_MeetQuarterStatisticInfo getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Type_MeetQuarterStatisticInfo> PARSER;

        public static com.google.protobuf.Parser<pbui_Type_MeetQuarterStatisticInfo> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Item_FaceTextItemInfoOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Item_FaceTextItemInfo)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <pre>
         *界面项ID 参见Pb_MeetFaceID
         * </pre>
         *
         * <code>fixed32 faceid = 1;</code>
         */
        int getFaceid();

        /**
         * <pre>
         *属性值 参见Pb_MeetFaceFlag
         * </pre>
         *
         * <code>fixed32 flag = 2;</code>
         */
        int getFlag();

        /**
         * <pre>
         *字体大小
         * </pre>
         *
         * <code>fixed32 fontsize = 3;</code>
         */
        int getFontsize();

        /**
         * <pre>
         *字体rgba颜色
         * </pre>
         *
         * <code>fixed32 color = 4;</code>
         */
        int getColor();

        /**
         * <pre>
         *对齐 参见 Pb_FontAlignFlag
         * </pre>
         *
         * <code>fixed32 align = 5;</code>
         */
        int getAlign();

        /**
         * <pre>
         *字体属性 Pb_MeetFaceFontFlag
         * </pre>
         *
         * <code>fixed32 fontflag = 6;</code>
         */
        int getFontflag();

        /**
         * <pre>
         *字体名称
         * </pre>
         *
         * <code>bytes fontname = 7;</code>
         */
        com.google.protobuf.ByteString getFontname();

        /**
         * <pre>
         *坐标 左上角x  (x * 100 / width)
         * </pre>
         *
         * <code>float lx = 8;</code>
         */
        float getLx();

        /**
         * <pre>
         *坐标 左上角y  (y * 100 / height)
         * </pre>
         *
         * <code>float ly = 9;</code>
         */
        float getLy();

        /**
         * <pre>
         *坐标 右下角x
         * </pre>
         *
         * <code>float bx = 10;</code>
         */
        float getBx();

        /**
         * <pre>
         *坐标 右下角y
         * </pre>
         *
         * <code>float by = 11;</code>
         */
        float getBy();
    }
    /**
     * <pre>
     *文本项
     * </pre>
     *
     * Protobuf type {@code pbui_Item_FaceTextItemInfo}
     */
    public  static final class pbui_Item_FaceTextItemInfo extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Item_FaceTextItemInfo, pbui_Item_FaceTextItemInfo.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Item_FaceTextItemInfo)
            pbui_Item_FaceTextItemInfoOrBuilder {
        private pbui_Item_FaceTextItemInfo() {
            fontname_ = com.google.protobuf.ByteString.EMPTY;
        }
        public static final int FACEID_FIELD_NUMBER = 1;
        private int faceid_;
        /**
         * <pre>
         *界面项ID 参见Pb_MeetFaceID
         * </pre>
         *
         * <code>fixed32 faceid = 1;</code>
         */
        public int getFaceid() {
            return faceid_;
        }
        /**
         * <pre>
         *界面项ID 参见Pb_MeetFaceID
         * </pre>
         *
         * <code>fixed32 faceid = 1;</code>
         */
        private void setFaceid(int value) {

            faceid_ = value;
        }
        /**
         * <pre>
         *界面项ID 参见Pb_MeetFaceID
         * </pre>
         *
         * <code>fixed32 faceid = 1;</code>
         */
        private void clearFaceid() {

            faceid_ = 0;
        }

        public static final int FLAG_FIELD_NUMBER = 2;
        private int flag_;
        /**
         * <pre>
         *属性值 参见Pb_MeetFaceFlag
         * </pre>
         *
         * <code>fixed32 flag = 2;</code>
         */
        public int getFlag() {
            return flag_;
        }
        /**
         * <pre>
         *属性值 参见Pb_MeetFaceFlag
         * </pre>
         *
         * <code>fixed32 flag = 2;</code>
         */
        private void setFlag(int value) {

            flag_ = value;
        }
        /**
         * <pre>
         *属性值 参见Pb_MeetFaceFlag
         * </pre>
         *
         * <code>fixed32 flag = 2;</code>
         */
        private void clearFlag() {

            flag_ = 0;
        }

        public static final int FONTSIZE_FIELD_NUMBER = 3;
        private int fontsize_;
        /**
         * <pre>
         *字体大小
         * </pre>
         *
         * <code>fixed32 fontsize = 3;</code>
         */
        public int getFontsize() {
            return fontsize_;
        }
        /**
         * <pre>
         *字体大小
         * </pre>
         *
         * <code>fixed32 fontsize = 3;</code>
         */
        private void setFontsize(int value) {

            fontsize_ = value;
        }
        /**
         * <pre>
         *字体大小
         * </pre>
         *
         * <code>fixed32 fontsize = 3;</code>
         */
        private void clearFontsize() {

            fontsize_ = 0;
        }

        public static final int COLOR_FIELD_NUMBER = 4;
        private int color_;
        /**
         * <pre>
         *字体rgba颜色
         * </pre>
         *
         * <code>fixed32 color = 4;</code>
         */
        public int getColor() {
            return color_;
        }
        /**
         * <pre>
         *字体rgba颜色
         * </pre>
         *
         * <code>fixed32 color = 4;</code>
         */
        private void setColor(int value) {

            color_ = value;
        }
        /**
         * <pre>
         *字体rgba颜色
         * </pre>
         *
         * <code>fixed32 color = 4;</code>
         */
        private void clearColor() {

            color_ = 0;
        }

        public static final int ALIGN_FIELD_NUMBER = 5;
        private int align_;
        /**
         * <pre>
         *对齐 参见 Pb_FontAlignFlag
         * </pre>
         *
         * <code>fixed32 align = 5;</code>
         */
        public int getAlign() {
            return align_;
        }
        /**
         * <pre>
         *对齐 参见 Pb_FontAlignFlag
         * </pre>
         *
         * <code>fixed32 align = 5;</code>
         */
        private void setAlign(int value) {

            align_ = value;
        }
        /**
         * <pre>
         *对齐 参见 Pb_FontAlignFlag
         * </pre>
         *
         * <code>fixed32 align = 5;</code>
         */
        private void clearAlign() {

            align_ = 0;
        }

        public static final int FONTFLAG_FIELD_NUMBER = 6;
        private int fontflag_;
        /**
         * <pre>
         *字体属性 Pb_MeetFaceFontFlag
         * </pre>
         *
         * <code>fixed32 fontflag = 6;</code>
         */
        public int getFontflag() {
            return fontflag_;
        }
        /**
         * <pre>
         *字体属性 Pb_MeetFaceFontFlag
         * </pre>
         *
         * <code>fixed32 fontflag = 6;</code>
         */
        private void setFontflag(int value) {

            fontflag_ = value;
        }
        /**
         * <pre>
         *字体属性 Pb_MeetFaceFontFlag
         * </pre>
         *
         * <code>fixed32 fontflag = 6;</code>
         */
        private void clearFontflag() {

            fontflag_ = 0;
        }

        public static final int FONTNAME_FIELD_NUMBER = 7;
        private com.google.protobuf.ByteString fontname_;
        /**
         * <pre>
         *字体名称
         * </pre>
         *
         * <code>bytes fontname = 7;</code>
         */
        public com.google.protobuf.ByteString getFontname() {
            return fontname_;
        }
        /**
         * <pre>
         *字体名称
         * </pre>
         *
         * <code>bytes fontname = 7;</code>
         */
        private void setFontname(com.google.protobuf.ByteString value) {
            if (value == null) {
                throw new NullPointerException();
            }

            fontname_ = value;
        }
        /**
         * <pre>
         *字体名称
         * </pre>
         *
         * <code>bytes fontname = 7;</code>
         */
        private void clearFontname() {

            fontname_ = getDefaultInstance().getFontname();
        }

        public static final int LX_FIELD_NUMBER = 8;
        private float lx_;
        /**
         * <pre>
         *坐标 左上角x  (x * 100 / width)
         * </pre>
         *
         * <code>float lx = 8;</code>
         */
        public float getLx() {
            return lx_;
        }
        /**
         * <pre>
         *坐标 左上角x  (x * 100 / width)
         * </pre>
         *
         * <code>float lx = 8;</code>
         */
        private void setLx(float value) {

            lx_ = value;
        }
        /**
         * <pre>
         *坐标 左上角x  (x * 100 / width)
         * </pre>
         *
         * <code>float lx = 8;</code>
         */
        private void clearLx() {

            lx_ = 0F;
        }

        public static final int LY_FIELD_NUMBER = 9;
        private float ly_;
        /**
         * <pre>
         *坐标 左上角y  (y * 100 / height)
         * </pre>
         *
         * <code>float ly = 9;</code>
         */
        public float getLy() {
            return ly_;
        }
        /**
         * <pre>
         *坐标 左上角y  (y * 100 / height)
         * </pre>
         *
         * <code>float ly = 9;</code>
         */
        private void setLy(float value) {

            ly_ = value;
        }
        /**
         * <pre>
         *坐标 左上角y  (y * 100 / height)
         * </pre>
         *
         * <code>float ly = 9;</code>
         */
        private void clearLy() {

            ly_ = 0F;
        }

        public static final int BX_FIELD_NUMBER = 10;
        private float bx_;
        /**
         * <pre>
         *坐标 右下角x
         * </pre>
         *
         * <code>float bx = 10;</code>
         */
        public float getBx() {
            return bx_;
        }
        /**
         * <pre>
         *坐标 右下角x
         * </pre>
         *
         * <code>float bx = 10;</code>
         */
        private void setBx(float value) {

            bx_ = value;
        }
        /**
         * <pre>
         *坐标 右下角x
         * </pre>
         *
         * <code>float bx = 10;</code>
         */
        private void clearBx() {

            bx_ = 0F;
        }

        public static final int BY_FIELD_NUMBER = 11;
        private float by_;
        /**
         * <pre>
         *坐标 右下角y
         * </pre>
         *
         * <code>float by = 11;</code>
         */
        public float getBy() {
            return by_;
        }
        /**
         * <pre>
         *坐标 右下角y
         * </pre>
         *
         * <code>float by = 11;</code>
         */
        private void setBy(float value) {

            by_ = value;
        }
        /**
         * <pre>
         *坐标 右下角y
         * </pre>
         *
         * <code>float by = 11;</code>
         */
        private void clearBy() {

            by_ = 0F;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (faceid_ != 0) {
                output.writeFixed32(1, faceid_);
            }
            if (flag_ != 0) {
                output.writeFixed32(2, flag_);
            }
            if (fontsize_ != 0) {
                output.writeFixed32(3, fontsize_);
            }
            if (color_ != 0) {
                output.writeFixed32(4, color_);
            }
            if (align_ != 0) {
                output.writeFixed32(5, align_);
            }
            if (fontflag_ != 0) {
                output.writeFixed32(6, fontflag_);
            }
            if (!fontname_.isEmpty()) {
                output.writeBytes(7, fontname_);
            }
            if (lx_ != 0F) {
                output.writeFloat(8, lx_);
            }
            if (ly_ != 0F) {
                output.writeFloat(9, ly_);
            }
            if (bx_ != 0F) {
                output.writeFloat(10, bx_);
            }
            if (by_ != 0F) {
                output.writeFloat(11, by_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (faceid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(1, faceid_);
            }
            if (flag_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(2, flag_);
            }
            if (fontsize_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(3, fontsize_);
            }
            if (color_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(4, color_);
            }
            if (align_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(5, align_);
            }
            if (fontflag_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(6, fontflag_);
            }
            if (!fontname_.isEmpty()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(7, fontname_);
            }
            if (lx_ != 0F) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFloatSize(8, lx_);
            }
            if (ly_ != 0F) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFloatSize(9, ly_);
            }
            if (bx_ != 0F) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFloatSize(10, bx_);
            }
            if (by_ != 0F) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFloatSize(11, by_);
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceTextItemInfo parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceTextItemInfo parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceTextItemInfo parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceTextItemInfo parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceTextItemInfo parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceTextItemInfo parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceTextItemInfo parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceTextItemInfo parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceTextItemInfo parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceTextItemInfo parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceTextItemInfo parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceTextItemInfo parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceTextItemInfo prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *文本项
         * </pre>
         *
         * Protobuf type {@code pbui_Item_FaceTextItemInfo}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceTextItemInfo, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Item_FaceTextItemInfo)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceTextItemInfoOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceTextItemInfo.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <pre>
             *界面项ID 参见Pb_MeetFaceID
             * </pre>
             *
             * <code>fixed32 faceid = 1;</code>
             */
            public int getFaceid() {
                return instance.getFaceid();
            }
            /**
             * <pre>
             *界面项ID 参见Pb_MeetFaceID
             * </pre>
             *
             * <code>fixed32 faceid = 1;</code>
             */
            public Builder setFaceid(int value) {
                copyOnWrite();
                instance.setFaceid(value);
                return this;
            }
            /**
             * <pre>
             *界面项ID 参见Pb_MeetFaceID
             * </pre>
             *
             * <code>fixed32 faceid = 1;</code>
             */
            public Builder clearFaceid() {
                copyOnWrite();
                instance.clearFaceid();
                return this;
            }

            /**
             * <pre>
             *属性值 参见Pb_MeetFaceFlag
             * </pre>
             *
             * <code>fixed32 flag = 2;</code>
             */
            public int getFlag() {
                return instance.getFlag();
            }
            /**
             * <pre>
             *属性值 参见Pb_MeetFaceFlag
             * </pre>
             *
             * <code>fixed32 flag = 2;</code>
             */
            public Builder setFlag(int value) {
                copyOnWrite();
                instance.setFlag(value);
                return this;
            }
            /**
             * <pre>
             *属性值 参见Pb_MeetFaceFlag
             * </pre>
             *
             * <code>fixed32 flag = 2;</code>
             */
            public Builder clearFlag() {
                copyOnWrite();
                instance.clearFlag();
                return this;
            }

            /**
             * <pre>
             *字体大小
             * </pre>
             *
             * <code>fixed32 fontsize = 3;</code>
             */
            public int getFontsize() {
                return instance.getFontsize();
            }
            /**
             * <pre>
             *字体大小
             * </pre>
             *
             * <code>fixed32 fontsize = 3;</code>
             */
            public Builder setFontsize(int value) {
                copyOnWrite();
                instance.setFontsize(value);
                return this;
            }
            /**
             * <pre>
             *字体大小
             * </pre>
             *
             * <code>fixed32 fontsize = 3;</code>
             */
            public Builder clearFontsize() {
                copyOnWrite();
                instance.clearFontsize();
                return this;
            }

            /**
             * <pre>
             *字体rgba颜色
             * </pre>
             *
             * <code>fixed32 color = 4;</code>
             */
            public int getColor() {
                return instance.getColor();
            }
            /**
             * <pre>
             *字体rgba颜色
             * </pre>
             *
             * <code>fixed32 color = 4;</code>
             */
            public Builder setColor(int value) {
                copyOnWrite();
                instance.setColor(value);
                return this;
            }
            /**
             * <pre>
             *字体rgba颜色
             * </pre>
             *
             * <code>fixed32 color = 4;</code>
             */
            public Builder clearColor() {
                copyOnWrite();
                instance.clearColor();
                return this;
            }

            /**
             * <pre>
             *对齐 参见 Pb_FontAlignFlag
             * </pre>
             *
             * <code>fixed32 align = 5;</code>
             */
            public int getAlign() {
                return instance.getAlign();
            }
            /**
             * <pre>
             *对齐 参见 Pb_FontAlignFlag
             * </pre>
             *
             * <code>fixed32 align = 5;</code>
             */
            public Builder setAlign(int value) {
                copyOnWrite();
                instance.setAlign(value);
                return this;
            }
            /**
             * <pre>
             *对齐 参见 Pb_FontAlignFlag
             * </pre>
             *
             * <code>fixed32 align = 5;</code>
             */
            public Builder clearAlign() {
                copyOnWrite();
                instance.clearAlign();
                return this;
            }

            /**
             * <pre>
             *字体属性 Pb_MeetFaceFontFlag
             * </pre>
             *
             * <code>fixed32 fontflag = 6;</code>
             */
            public int getFontflag() {
                return instance.getFontflag();
            }
            /**
             * <pre>
             *字体属性 Pb_MeetFaceFontFlag
             * </pre>
             *
             * <code>fixed32 fontflag = 6;</code>
             */
            public Builder setFontflag(int value) {
                copyOnWrite();
                instance.setFontflag(value);
                return this;
            }
            /**
             * <pre>
             *字体属性 Pb_MeetFaceFontFlag
             * </pre>
             *
             * <code>fixed32 fontflag = 6;</code>
             */
            public Builder clearFontflag() {
                copyOnWrite();
                instance.clearFontflag();
                return this;
            }

            /**
             * <pre>
             *字体名称
             * </pre>
             *
             * <code>bytes fontname = 7;</code>
             */
            public com.google.protobuf.ByteString getFontname() {
                return instance.getFontname();
            }
            /**
             * <pre>
             *字体名称
             * </pre>
             *
             * <code>bytes fontname = 7;</code>
             */
            public Builder setFontname(com.google.protobuf.ByteString value) {
                copyOnWrite();
                instance.setFontname(value);
                return this;
            }
            /**
             * <pre>
             *字体名称
             * </pre>
             *
             * <code>bytes fontname = 7;</code>
             */
            public Builder clearFontname() {
                copyOnWrite();
                instance.clearFontname();
                return this;
            }

            /**
             * <pre>
             *坐标 左上角x  (x * 100 / width)
             * </pre>
             *
             * <code>float lx = 8;</code>
             */
            public float getLx() {
                return instance.getLx();
            }
            /**
             * <pre>
             *坐标 左上角x  (x * 100 / width)
             * </pre>
             *
             * <code>float lx = 8;</code>
             */
            public Builder setLx(float value) {
                copyOnWrite();
                instance.setLx(value);
                return this;
            }
            /**
             * <pre>
             *坐标 左上角x  (x * 100 / width)
             * </pre>
             *
             * <code>float lx = 8;</code>
             */
            public Builder clearLx() {
                copyOnWrite();
                instance.clearLx();
                return this;
            }

            /**
             * <pre>
             *坐标 左上角y  (y * 100 / height)
             * </pre>
             *
             * <code>float ly = 9;</code>
             */
            public float getLy() {
                return instance.getLy();
            }
            /**
             * <pre>
             *坐标 左上角y  (y * 100 / height)
             * </pre>
             *
             * <code>float ly = 9;</code>
             */
            public Builder setLy(float value) {
                copyOnWrite();
                instance.setLy(value);
                return this;
            }
            /**
             * <pre>
             *坐标 左上角y  (y * 100 / height)
             * </pre>
             *
             * <code>float ly = 9;</code>
             */
            public Builder clearLy() {
                copyOnWrite();
                instance.clearLy();
                return this;
            }

            /**
             * <pre>
             *坐标 右下角x
             * </pre>
             *
             * <code>float bx = 10;</code>
             */
            public float getBx() {
                return instance.getBx();
            }
            /**
             * <pre>
             *坐标 右下角x
             * </pre>
             *
             * <code>float bx = 10;</code>
             */
            public Builder setBx(float value) {
                copyOnWrite();
                instance.setBx(value);
                return this;
            }
            /**
             * <pre>
             *坐标 右下角x
             * </pre>
             *
             * <code>float bx = 10;</code>
             */
            public Builder clearBx() {
                copyOnWrite();
                instance.clearBx();
                return this;
            }

            /**
             * <pre>
             *坐标 右下角y
             * </pre>
             *
             * <code>float by = 11;</code>
             */
            public float getBy() {
                return instance.getBy();
            }
            /**
             * <pre>
             *坐标 右下角y
             * </pre>
             *
             * <code>float by = 11;</code>
             */
            public Builder setBy(float value) {
                copyOnWrite();
                instance.setBy(value);
                return this;
            }
            /**
             * <pre>
             *坐标 右下角y
             * </pre>
             *
             * <code>float by = 11;</code>
             */
            public Builder clearBy() {
                copyOnWrite();
                instance.clearBy();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Item_FaceTextItemInfo)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceTextItemInfo();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceTextItemInfo other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceTextItemInfo) arg1;
                    faceid_ = visitor.visitInt(faceid_ != 0, faceid_,
                            other.faceid_ != 0, other.faceid_);
                    flag_ = visitor.visitInt(flag_ != 0, flag_,
                            other.flag_ != 0, other.flag_);
                    fontsize_ = visitor.visitInt(fontsize_ != 0, fontsize_,
                            other.fontsize_ != 0, other.fontsize_);
                    color_ = visitor.visitInt(color_ != 0, color_,
                            other.color_ != 0, other.color_);
                    align_ = visitor.visitInt(align_ != 0, align_,
                            other.align_ != 0, other.align_);
                    fontflag_ = visitor.visitInt(fontflag_ != 0, fontflag_,
                            other.fontflag_ != 0, other.fontflag_);
                    fontname_ = visitor.visitByteString(fontname_ != com.google.protobuf.ByteString.EMPTY, fontname_,
                            other.fontname_ != com.google.protobuf.ByteString.EMPTY, other.fontname_);
                    lx_ = visitor.visitFloat(lx_ != 0F, lx_,
                            other.lx_ != 0F, other.lx_);
                    ly_ = visitor.visitFloat(ly_ != 0F, ly_,
                            other.ly_ != 0F, other.ly_);
                    bx_ = visitor.visitFloat(bx_ != 0F, bx_,
                            other.bx_ != 0F, other.bx_);
                    by_ = visitor.visitFloat(by_ != 0F, by_,
                            other.by_ != 0F, other.by_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 13: {

                                    faceid_ = input.readFixed32();
                                    break;
                                }
                                case 21: {

                                    flag_ = input.readFixed32();
                                    break;
                                }
                                case 29: {

                                    fontsize_ = input.readFixed32();
                                    break;
                                }
                                case 37: {

                                    color_ = input.readFixed32();
                                    break;
                                }
                                case 45: {

                                    align_ = input.readFixed32();
                                    break;
                                }
                                case 53: {

                                    fontflag_ = input.readFixed32();
                                    break;
                                }
                                case 58: {

                                    fontname_ = input.readBytes();
                                    break;
                                }
                                case 69: {

                                    lx_ = input.readFloat();
                                    break;
                                }
                                case 77: {

                                    ly_ = input.readFloat();
                                    break;
                                }
                                case 85: {

                                    bx_ = input.readFloat();
                                    break;
                                }
                                case 93: {

                                    by_ = input.readFloat();
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceTextItemInfo.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Item_FaceTextItemInfo)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceTextItemInfo DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Item_FaceTextItemInfo();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceTextItemInfo getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Item_FaceTextItemInfo> PARSER;

        public static com.google.protobuf.Parser<pbui_Item_FaceTextItemInfo> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Item_FacePictureItemInfoOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Item_FacePictureItemInfo)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <pre>
         *界面项ID 参见Pb_MeetFaceID
         * </pre>
         *
         * <code>fixed32 faceid = 1;</code>
         */
        int getFaceid();

        /**
         * <pre>
         *属性值 参见Pb_MeetFaceFlag
         * </pre>
         *
         * <code>fixed32 flag = 2;</code>
         */
        int getFlag();

        /**
         * <pre>
         *项值
         * </pre>
         *
         * <code>fixed32 mediaid = 3;</code>
         */
        int getMediaid();
    }
    /**
     * <pre>
     *图片项
     * </pre>
     *
     * Protobuf type {@code pbui_Item_FacePictureItemInfo}
     */
    public  static final class pbui_Item_FacePictureItemInfo extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Item_FacePictureItemInfo, pbui_Item_FacePictureItemInfo.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Item_FacePictureItemInfo)
            pbui_Item_FacePictureItemInfoOrBuilder {
        private pbui_Item_FacePictureItemInfo() {
        }
        public static final int FACEID_FIELD_NUMBER = 1;
        private int faceid_;
        /**
         * <pre>
         *界面项ID 参见Pb_MeetFaceID
         * </pre>
         *
         * <code>fixed32 faceid = 1;</code>
         */
        public int getFaceid() {
            return faceid_;
        }
        /**
         * <pre>
         *界面项ID 参见Pb_MeetFaceID
         * </pre>
         *
         * <code>fixed32 faceid = 1;</code>
         */
        private void setFaceid(int value) {

            faceid_ = value;
        }
        /**
         * <pre>
         *界面项ID 参见Pb_MeetFaceID
         * </pre>
         *
         * <code>fixed32 faceid = 1;</code>
         */
        private void clearFaceid() {

            faceid_ = 0;
        }

        public static final int FLAG_FIELD_NUMBER = 2;
        private int flag_;
        /**
         * <pre>
         *属性值 参见Pb_MeetFaceFlag
         * </pre>
         *
         * <code>fixed32 flag = 2;</code>
         */
        public int getFlag() {
            return flag_;
        }
        /**
         * <pre>
         *属性值 参见Pb_MeetFaceFlag
         * </pre>
         *
         * <code>fixed32 flag = 2;</code>
         */
        private void setFlag(int value) {

            flag_ = value;
        }
        /**
         * <pre>
         *属性值 参见Pb_MeetFaceFlag
         * </pre>
         *
         * <code>fixed32 flag = 2;</code>
         */
        private void clearFlag() {

            flag_ = 0;
        }

        public static final int MEDIAID_FIELD_NUMBER = 3;
        private int mediaid_;
        /**
         * <pre>
         *项值
         * </pre>
         *
         * <code>fixed32 mediaid = 3;</code>
         */
        public int getMediaid() {
            return mediaid_;
        }
        /**
         * <pre>
         *项值
         * </pre>
         *
         * <code>fixed32 mediaid = 3;</code>
         */
        private void setMediaid(int value) {

            mediaid_ = value;
        }
        /**
         * <pre>
         *项值
         * </pre>
         *
         * <code>fixed32 mediaid = 3;</code>
         */
        private void clearMediaid() {

            mediaid_ = 0;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (faceid_ != 0) {
                output.writeFixed32(1, faceid_);
            }
            if (flag_ != 0) {
                output.writeFixed32(2, flag_);
            }
            if (mediaid_ != 0) {
                output.writeFixed32(3, mediaid_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (faceid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(1, faceid_);
            }
            if (flag_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(2, flag_);
            }
            if (mediaid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(3, mediaid_);
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FacePictureItemInfo parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FacePictureItemInfo parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FacePictureItemInfo parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FacePictureItemInfo parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FacePictureItemInfo parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FacePictureItemInfo parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FacePictureItemInfo parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FacePictureItemInfo parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FacePictureItemInfo parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FacePictureItemInfo parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FacePictureItemInfo parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FacePictureItemInfo parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FacePictureItemInfo prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *图片项
         * </pre>
         *
         * Protobuf type {@code pbui_Item_FacePictureItemInfo}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FacePictureItemInfo, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Item_FacePictureItemInfo)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FacePictureItemInfoOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FacePictureItemInfo.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <pre>
             *界面项ID 参见Pb_MeetFaceID
             * </pre>
             *
             * <code>fixed32 faceid = 1;</code>
             */
            public int getFaceid() {
                return instance.getFaceid();
            }
            /**
             * <pre>
             *界面项ID 参见Pb_MeetFaceID
             * </pre>
             *
             * <code>fixed32 faceid = 1;</code>
             */
            public Builder setFaceid(int value) {
                copyOnWrite();
                instance.setFaceid(value);
                return this;
            }
            /**
             * <pre>
             *界面项ID 参见Pb_MeetFaceID
             * </pre>
             *
             * <code>fixed32 faceid = 1;</code>
             */
            public Builder clearFaceid() {
                copyOnWrite();
                instance.clearFaceid();
                return this;
            }

            /**
             * <pre>
             *属性值 参见Pb_MeetFaceFlag
             * </pre>
             *
             * <code>fixed32 flag = 2;</code>
             */
            public int getFlag() {
                return instance.getFlag();
            }
            /**
             * <pre>
             *属性值 参见Pb_MeetFaceFlag
             * </pre>
             *
             * <code>fixed32 flag = 2;</code>
             */
            public Builder setFlag(int value) {
                copyOnWrite();
                instance.setFlag(value);
                return this;
            }
            /**
             * <pre>
             *属性值 参见Pb_MeetFaceFlag
             * </pre>
             *
             * <code>fixed32 flag = 2;</code>
             */
            public Builder clearFlag() {
                copyOnWrite();
                instance.clearFlag();
                return this;
            }

            /**
             * <pre>
             *项值
             * </pre>
             *
             * <code>fixed32 mediaid = 3;</code>
             */
            public int getMediaid() {
                return instance.getMediaid();
            }
            /**
             * <pre>
             *项值
             * </pre>
             *
             * <code>fixed32 mediaid = 3;</code>
             */
            public Builder setMediaid(int value) {
                copyOnWrite();
                instance.setMediaid(value);
                return this;
            }
            /**
             * <pre>
             *项值
             * </pre>
             *
             * <code>fixed32 mediaid = 3;</code>
             */
            public Builder clearMediaid() {
                copyOnWrite();
                instance.clearMediaid();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Item_FacePictureItemInfo)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FacePictureItemInfo();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FacePictureItemInfo other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FacePictureItemInfo) arg1;
                    faceid_ = visitor.visitInt(faceid_ != 0, faceid_,
                            other.faceid_ != 0, other.faceid_);
                    flag_ = visitor.visitInt(flag_ != 0, flag_,
                            other.flag_ != 0, other.flag_);
                    mediaid_ = visitor.visitInt(mediaid_ != 0, mediaid_,
                            other.mediaid_ != 0, other.mediaid_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 13: {

                                    faceid_ = input.readFixed32();
                                    break;
                                }
                                case 21: {

                                    flag_ = input.readFixed32();
                                    break;
                                }
                                case 29: {

                                    mediaid_ = input.readFixed32();
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FacePictureItemInfo.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Item_FacePictureItemInfo)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FacePictureItemInfo DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Item_FacePictureItemInfo();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FacePictureItemInfo getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Item_FacePictureItemInfo> PARSER;

        public static com.google.protobuf.Parser<pbui_Item_FacePictureItemInfo> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Item_FaceOnlyTextItemInfoOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Item_FaceOnlyTextItemInfo)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <pre>
         *界面项ID 参见Pb_MeetFaceID
         * </pre>
         *
         * <code>fixed32 faceid = 1;</code>
         */
        int getFaceid();

        /**
         * <pre>
         *属性值 参见Pb_MeetFaceFlag
         * </pre>
         *
         * <code>fixed32 flag = 2;</code>
         */
        int getFlag();

        /**
         * <pre>
         *文本
         * </pre>
         *
         * <code>bytes text = 3;</code>
         */
        com.google.protobuf.ByteString getText();
    }
    /**
     * <pre>
     *纯文本项
     * </pre>
     *
     * Protobuf type {@code pbui_Item_FaceOnlyTextItemInfo}
     */
    public  static final class pbui_Item_FaceOnlyTextItemInfo extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Item_FaceOnlyTextItemInfo, pbui_Item_FaceOnlyTextItemInfo.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Item_FaceOnlyTextItemInfo)
            pbui_Item_FaceOnlyTextItemInfoOrBuilder {
        private pbui_Item_FaceOnlyTextItemInfo() {
            text_ = com.google.protobuf.ByteString.EMPTY;
        }
        public static final int FACEID_FIELD_NUMBER = 1;
        private int faceid_;
        /**
         * <pre>
         *界面项ID 参见Pb_MeetFaceID
         * </pre>
         *
         * <code>fixed32 faceid = 1;</code>
         */
        public int getFaceid() {
            return faceid_;
        }
        /**
         * <pre>
         *界面项ID 参见Pb_MeetFaceID
         * </pre>
         *
         * <code>fixed32 faceid = 1;</code>
         */
        private void setFaceid(int value) {

            faceid_ = value;
        }
        /**
         * <pre>
         *界面项ID 参见Pb_MeetFaceID
         * </pre>
         *
         * <code>fixed32 faceid = 1;</code>
         */
        private void clearFaceid() {

            faceid_ = 0;
        }

        public static final int FLAG_FIELD_NUMBER = 2;
        private int flag_;
        /**
         * <pre>
         *属性值 参见Pb_MeetFaceFlag
         * </pre>
         *
         * <code>fixed32 flag = 2;</code>
         */
        public int getFlag() {
            return flag_;
        }
        /**
         * <pre>
         *属性值 参见Pb_MeetFaceFlag
         * </pre>
         *
         * <code>fixed32 flag = 2;</code>
         */
        private void setFlag(int value) {

            flag_ = value;
        }
        /**
         * <pre>
         *属性值 参见Pb_MeetFaceFlag
         * </pre>
         *
         * <code>fixed32 flag = 2;</code>
         */
        private void clearFlag() {

            flag_ = 0;
        }

        public static final int TEXT_FIELD_NUMBER = 3;
        private com.google.protobuf.ByteString text_;
        /**
         * <pre>
         *文本
         * </pre>
         *
         * <code>bytes text = 3;</code>
         */
        public com.google.protobuf.ByteString getText() {
            return text_;
        }
        /**
         * <pre>
         *文本
         * </pre>
         *
         * <code>bytes text = 3;</code>
         */
        private void setText(com.google.protobuf.ByteString value) {
            if (value == null) {
                throw new NullPointerException();
            }

            text_ = value;
        }
        /**
         * <pre>
         *文本
         * </pre>
         *
         * <code>bytes text = 3;</code>
         */
        private void clearText() {

            text_ = getDefaultInstance().getText();
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (faceid_ != 0) {
                output.writeFixed32(1, faceid_);
            }
            if (flag_ != 0) {
                output.writeFixed32(2, flag_);
            }
            if (!text_.isEmpty()) {
                output.writeBytes(3, text_);
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (faceid_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(1, faceid_);
            }
            if (flag_ != 0) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(2, flag_);
            }
            if (!text_.isEmpty()) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(3, text_);
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceOnlyTextItemInfo parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceOnlyTextItemInfo parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceOnlyTextItemInfo parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceOnlyTextItemInfo parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceOnlyTextItemInfo parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceOnlyTextItemInfo parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceOnlyTextItemInfo parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceOnlyTextItemInfo parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceOnlyTextItemInfo parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceOnlyTextItemInfo parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceOnlyTextItemInfo parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceOnlyTextItemInfo parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceOnlyTextItemInfo prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *纯文本项
         * </pre>
         *
         * Protobuf type {@code pbui_Item_FaceOnlyTextItemInfo}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceOnlyTextItemInfo, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Item_FaceOnlyTextItemInfo)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceOnlyTextItemInfoOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceOnlyTextItemInfo.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <pre>
             *界面项ID 参见Pb_MeetFaceID
             * </pre>
             *
             * <code>fixed32 faceid = 1;</code>
             */
            public int getFaceid() {
                return instance.getFaceid();
            }
            /**
             * <pre>
             *界面项ID 参见Pb_MeetFaceID
             * </pre>
             *
             * <code>fixed32 faceid = 1;</code>
             */
            public Builder setFaceid(int value) {
                copyOnWrite();
                instance.setFaceid(value);
                return this;
            }
            /**
             * <pre>
             *界面项ID 参见Pb_MeetFaceID
             * </pre>
             *
             * <code>fixed32 faceid = 1;</code>
             */
            public Builder clearFaceid() {
                copyOnWrite();
                instance.clearFaceid();
                return this;
            }

            /**
             * <pre>
             *属性值 参见Pb_MeetFaceFlag
             * </pre>
             *
             * <code>fixed32 flag = 2;</code>
             */
            public int getFlag() {
                return instance.getFlag();
            }
            /**
             * <pre>
             *属性值 参见Pb_MeetFaceFlag
             * </pre>
             *
             * <code>fixed32 flag = 2;</code>
             */
            public Builder setFlag(int value) {
                copyOnWrite();
                instance.setFlag(value);
                return this;
            }
            /**
             * <pre>
             *属性值 参见Pb_MeetFaceFlag
             * </pre>
             *
             * <code>fixed32 flag = 2;</code>
             */
            public Builder clearFlag() {
                copyOnWrite();
                instance.clearFlag();
                return this;
            }

            /**
             * <pre>
             *文本
             * </pre>
             *
             * <code>bytes text = 3;</code>
             */
            public com.google.protobuf.ByteString getText() {
                return instance.getText();
            }
            /**
             * <pre>
             *文本
             * </pre>
             *
             * <code>bytes text = 3;</code>
             */
            public Builder setText(com.google.protobuf.ByteString value) {
                copyOnWrite();
                instance.setText(value);
                return this;
            }
            /**
             * <pre>
             *文本
             * </pre>
             *
             * <code>bytes text = 3;</code>
             */
            public Builder clearText() {
                copyOnWrite();
                instance.clearText();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Item_FaceOnlyTextItemInfo)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceOnlyTextItemInfo();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceOnlyTextItemInfo other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceOnlyTextItemInfo) arg1;
                    faceid_ = visitor.visitInt(faceid_ != 0, faceid_,
                            other.faceid_ != 0, other.faceid_);
                    flag_ = visitor.visitInt(flag_ != 0, flag_,
                            other.flag_ != 0, other.flag_);
                    text_ = visitor.visitByteString(text_ != com.google.protobuf.ByteString.EMPTY, text_,
                            other.text_ != com.google.protobuf.ByteString.EMPTY, other.text_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 13: {

                                    faceid_ = input.readFixed32();
                                    break;
                                }
                                case 21: {

                                    flag_ = input.readFixed32();
                                    break;
                                }
                                case 26: {

                                    text_ = input.readBytes();
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceOnlyTextItemInfo.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Item_FaceOnlyTextItemInfo)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceOnlyTextItemInfo DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Item_FaceOnlyTextItemInfo();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceOnlyTextItemInfo getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Item_FaceOnlyTextItemInfo> PARSER;

        public static com.google.protobuf.Parser<pbui_Item_FaceOnlyTextItemInfo> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }

    public interface pbui_Type_FaceConfigInfoOrBuilder extends
            // @@protoc_insertion_point(interface_extends:pbui_Type_FaceConfigInfo)
            com.google.protobuf.MessageLiteOrBuilder {

        /**
         * <code>repeated .pbui_Item_FaceTextItemInfo text = 1;</code>
         */
        java.util.List<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceTextItemInfo>
        getTextList();
        /**
         * <code>repeated .pbui_Item_FaceTextItemInfo text = 1;</code>
         */
        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceTextItemInfo getText(int index);
        /**
         * <code>repeated .pbui_Item_FaceTextItemInfo text = 1;</code>
         */
        int getTextCount();

        /**
         * <code>repeated .pbui_Item_FacePictureItemInfo picture = 2;</code>
         */
        java.util.List<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FacePictureItemInfo>
        getPictureList();
        /**
         * <code>repeated .pbui_Item_FacePictureItemInfo picture = 2;</code>
         */
        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FacePictureItemInfo getPicture(int index);
        /**
         * <code>repeated .pbui_Item_FacePictureItemInfo picture = 2;</code>
         */
        int getPictureCount();

        /**
         * <code>repeated .pbui_Item_FaceOnlyTextItemInfo onlytext = 3;</code>
         */
        java.util.List<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceOnlyTextItemInfo>
        getOnlytextList();
        /**
         * <code>repeated .pbui_Item_FaceOnlyTextItemInfo onlytext = 3;</code>
         */
        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceOnlyTextItemInfo getOnlytext(int index);
        /**
         * <code>repeated .pbui_Item_FaceOnlyTextItemInfo onlytext = 3;</code>
         */
        int getOnlytextCount();
    }
    /**
     * <pre>
     *callreturn
     *type:Pb_TYPE_MEET_INTERFACE_MEETFACECONFIG
     *method: query modify
     * </pre>
     *
     * Protobuf type {@code pbui_Type_FaceConfigInfo}
     */
    public  static final class pbui_Type_FaceConfigInfo extends
            com.google.protobuf.GeneratedMessageLite<
                    pbui_Type_FaceConfigInfo, pbui_Type_FaceConfigInfo.Builder> implements
            // @@protoc_insertion_point(message_implements:pbui_Type_FaceConfigInfo)
            pbui_Type_FaceConfigInfoOrBuilder {
        private pbui_Type_FaceConfigInfo() {
            text_ = emptyProtobufList();
            picture_ = emptyProtobufList();
            onlytext_ = emptyProtobufList();
        }
        public static final int TEXT_FIELD_NUMBER = 1;
        private com.google.protobuf.Internal.ProtobufList<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceTextItemInfo> text_;
        /**
         * <code>repeated .pbui_Item_FaceTextItemInfo text = 1;</code>
         */
        public java.util.List<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceTextItemInfo> getTextList() {
            return text_;
        }
        /**
         * <code>repeated .pbui_Item_FaceTextItemInfo text = 1;</code>
         */
        public java.util.List<? extends com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceTextItemInfoOrBuilder>
        getTextOrBuilderList() {
            return text_;
        }
        /**
         * <code>repeated .pbui_Item_FaceTextItemInfo text = 1;</code>
         */
        public int getTextCount() {
            return text_.size();
        }
        /**
         * <code>repeated .pbui_Item_FaceTextItemInfo text = 1;</code>
         */
        public com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceTextItemInfo getText(int index) {
            return text_.get(index);
        }
        /**
         * <code>repeated .pbui_Item_FaceTextItemInfo text = 1;</code>
         */
        public com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceTextItemInfoOrBuilder getTextOrBuilder(
                int index) {
            return text_.get(index);
        }
        private void ensureTextIsMutable() {
            if (!text_.isModifiable()) {
                text_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(text_);
            }
        }

        /**
         * <code>repeated .pbui_Item_FaceTextItemInfo text = 1;</code>
         */
        private void setText(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceTextItemInfo value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensureTextIsMutable();
            text_.set(index, value);
        }
        /**
         * <code>repeated .pbui_Item_FaceTextItemInfo text = 1;</code>
         */
        private void setText(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceTextItemInfo.Builder builderForValue) {
            ensureTextIsMutable();
            text_.set(index, builderForValue.build());
        }
        /**
         * <code>repeated .pbui_Item_FaceTextItemInfo text = 1;</code>
         */
        private void addText(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceTextItemInfo value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensureTextIsMutable();
            text_.add(value);
        }
        /**
         * <code>repeated .pbui_Item_FaceTextItemInfo text = 1;</code>
         */
        private void addText(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceTextItemInfo value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensureTextIsMutable();
            text_.add(index, value);
        }
        /**
         * <code>repeated .pbui_Item_FaceTextItemInfo text = 1;</code>
         */
        private void addText(
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceTextItemInfo.Builder builderForValue) {
            ensureTextIsMutable();
            text_.add(builderForValue.build());
        }
        /**
         * <code>repeated .pbui_Item_FaceTextItemInfo text = 1;</code>
         */
        private void addText(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceTextItemInfo.Builder builderForValue) {
            ensureTextIsMutable();
            text_.add(index, builderForValue.build());
        }
        /**
         * <code>repeated .pbui_Item_FaceTextItemInfo text = 1;</code>
         */
        private void addAllText(
                java.lang.Iterable<? extends com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceTextItemInfo> values) {
            ensureTextIsMutable();
            com.google.protobuf.AbstractMessageLite.addAll(
                    values, text_);
        }
        /**
         * <code>repeated .pbui_Item_FaceTextItemInfo text = 1;</code>
         */
        private void clearText() {
            text_ = emptyProtobufList();
        }
        /**
         * <code>repeated .pbui_Item_FaceTextItemInfo text = 1;</code>
         */
        private void removeText(int index) {
            ensureTextIsMutable();
            text_.remove(index);
        }

        public static final int PICTURE_FIELD_NUMBER = 2;
        private com.google.protobuf.Internal.ProtobufList<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FacePictureItemInfo> picture_;
        /**
         * <code>repeated .pbui_Item_FacePictureItemInfo picture = 2;</code>
         */
        public java.util.List<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FacePictureItemInfo> getPictureList() {
            return picture_;
        }
        /**
         * <code>repeated .pbui_Item_FacePictureItemInfo picture = 2;</code>
         */
        public java.util.List<? extends com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FacePictureItemInfoOrBuilder>
        getPictureOrBuilderList() {
            return picture_;
        }
        /**
         * <code>repeated .pbui_Item_FacePictureItemInfo picture = 2;</code>
         */
        public int getPictureCount() {
            return picture_.size();
        }
        /**
         * <code>repeated .pbui_Item_FacePictureItemInfo picture = 2;</code>
         */
        public com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FacePictureItemInfo getPicture(int index) {
            return picture_.get(index);
        }
        /**
         * <code>repeated .pbui_Item_FacePictureItemInfo picture = 2;</code>
         */
        public com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FacePictureItemInfoOrBuilder getPictureOrBuilder(
                int index) {
            return picture_.get(index);
        }
        private void ensurePictureIsMutable() {
            if (!picture_.isModifiable()) {
                picture_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(picture_);
            }
        }

        /**
         * <code>repeated .pbui_Item_FacePictureItemInfo picture = 2;</code>
         */
        private void setPicture(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FacePictureItemInfo value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensurePictureIsMutable();
            picture_.set(index, value);
        }
        /**
         * <code>repeated .pbui_Item_FacePictureItemInfo picture = 2;</code>
         */
        private void setPicture(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FacePictureItemInfo.Builder builderForValue) {
            ensurePictureIsMutable();
            picture_.set(index, builderForValue.build());
        }
        /**
         * <code>repeated .pbui_Item_FacePictureItemInfo picture = 2;</code>
         */
        private void addPicture(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FacePictureItemInfo value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensurePictureIsMutable();
            picture_.add(value);
        }
        /**
         * <code>repeated .pbui_Item_FacePictureItemInfo picture = 2;</code>
         */
        private void addPicture(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FacePictureItemInfo value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensurePictureIsMutable();
            picture_.add(index, value);
        }
        /**
         * <code>repeated .pbui_Item_FacePictureItemInfo picture = 2;</code>
         */
        private void addPicture(
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FacePictureItemInfo.Builder builderForValue) {
            ensurePictureIsMutable();
            picture_.add(builderForValue.build());
        }
        /**
         * <code>repeated .pbui_Item_FacePictureItemInfo picture = 2;</code>
         */
        private void addPicture(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FacePictureItemInfo.Builder builderForValue) {
            ensurePictureIsMutable();
            picture_.add(index, builderForValue.build());
        }
        /**
         * <code>repeated .pbui_Item_FacePictureItemInfo picture = 2;</code>
         */
        private void addAllPicture(
                java.lang.Iterable<? extends com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FacePictureItemInfo> values) {
            ensurePictureIsMutable();
            com.google.protobuf.AbstractMessageLite.addAll(
                    values, picture_);
        }
        /**
         * <code>repeated .pbui_Item_FacePictureItemInfo picture = 2;</code>
         */
        private void clearPicture() {
            picture_ = emptyProtobufList();
        }
        /**
         * <code>repeated .pbui_Item_FacePictureItemInfo picture = 2;</code>
         */
        private void removePicture(int index) {
            ensurePictureIsMutable();
            picture_.remove(index);
        }

        public static final int ONLYTEXT_FIELD_NUMBER = 3;
        private com.google.protobuf.Internal.ProtobufList<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceOnlyTextItemInfo> onlytext_;
        /**
         * <code>repeated .pbui_Item_FaceOnlyTextItemInfo onlytext = 3;</code>
         */
        public java.util.List<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceOnlyTextItemInfo> getOnlytextList() {
            return onlytext_;
        }
        /**
         * <code>repeated .pbui_Item_FaceOnlyTextItemInfo onlytext = 3;</code>
         */
        public java.util.List<? extends com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceOnlyTextItemInfoOrBuilder>
        getOnlytextOrBuilderList() {
            return onlytext_;
        }
        /**
         * <code>repeated .pbui_Item_FaceOnlyTextItemInfo onlytext = 3;</code>
         */
        public int getOnlytextCount() {
            return onlytext_.size();
        }
        /**
         * <code>repeated .pbui_Item_FaceOnlyTextItemInfo onlytext = 3;</code>
         */
        public com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceOnlyTextItemInfo getOnlytext(int index) {
            return onlytext_.get(index);
        }
        /**
         * <code>repeated .pbui_Item_FaceOnlyTextItemInfo onlytext = 3;</code>
         */
        public com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceOnlyTextItemInfoOrBuilder getOnlytextOrBuilder(
                int index) {
            return onlytext_.get(index);
        }
        private void ensureOnlytextIsMutable() {
            if (!onlytext_.isModifiable()) {
                onlytext_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(onlytext_);
            }
        }

        /**
         * <code>repeated .pbui_Item_FaceOnlyTextItemInfo onlytext = 3;</code>
         */
        private void setOnlytext(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceOnlyTextItemInfo value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensureOnlytextIsMutable();
            onlytext_.set(index, value);
        }
        /**
         * <code>repeated .pbui_Item_FaceOnlyTextItemInfo onlytext = 3;</code>
         */
        private void setOnlytext(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceOnlyTextItemInfo.Builder builderForValue) {
            ensureOnlytextIsMutable();
            onlytext_.set(index, builderForValue.build());
        }
        /**
         * <code>repeated .pbui_Item_FaceOnlyTextItemInfo onlytext = 3;</code>
         */
        private void addOnlytext(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceOnlyTextItemInfo value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensureOnlytextIsMutable();
            onlytext_.add(value);
        }
        /**
         * <code>repeated .pbui_Item_FaceOnlyTextItemInfo onlytext = 3;</code>
         */
        private void addOnlytext(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceOnlyTextItemInfo value) {
            if (value == null) {
                throw new NullPointerException();
            }
            ensureOnlytextIsMutable();
            onlytext_.add(index, value);
        }
        /**
         * <code>repeated .pbui_Item_FaceOnlyTextItemInfo onlytext = 3;</code>
         */
        private void addOnlytext(
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceOnlyTextItemInfo.Builder builderForValue) {
            ensureOnlytextIsMutable();
            onlytext_.add(builderForValue.build());
        }
        /**
         * <code>repeated .pbui_Item_FaceOnlyTextItemInfo onlytext = 3;</code>
         */
        private void addOnlytext(
                int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceOnlyTextItemInfo.Builder builderForValue) {
            ensureOnlytextIsMutable();
            onlytext_.add(index, builderForValue.build());
        }
        /**
         * <code>repeated .pbui_Item_FaceOnlyTextItemInfo onlytext = 3;</code>
         */
        private void addAllOnlytext(
                java.lang.Iterable<? extends com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceOnlyTextItemInfo> values) {
            ensureOnlytextIsMutable();
            com.google.protobuf.AbstractMessageLite.addAll(
                    values, onlytext_);
        }
        /**
         * <code>repeated .pbui_Item_FaceOnlyTextItemInfo onlytext = 3;</code>
         */
        private void clearOnlytext() {
            onlytext_ = emptyProtobufList();
        }
        /**
         * <code>repeated .pbui_Item_FaceOnlyTextItemInfo onlytext = 3;</code>
         */
        private void removeOnlytext(int index) {
            ensureOnlytextIsMutable();
            onlytext_.remove(index);
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            for (int i = 0; i < text_.size(); i++) {
                output.writeMessage(1, text_.get(i));
            }
            for (int i = 0; i < picture_.size(); i++) {
                output.writeMessage(2, picture_.get(i));
            }
            for (int i = 0; i < onlytext_.size(); i++) {
                output.writeMessage(3, onlytext_.get(i));
            }
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            for (int i = 0; i < text_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(1, text_.get(i));
            }
            for (int i = 0; i < picture_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(2, picture_.get(i));
            }
            for (int i = 0; i < onlytext_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(3, onlytext_.get(i));
            }
            memoizedSerializedSize = size;
            return size;
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_FaceConfigInfo parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_FaceConfigInfo parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_FaceConfigInfo parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_FaceConfigInfo parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_FaceConfigInfo parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_FaceConfigInfo parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, data, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_FaceConfigInfo parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_FaceConfigInfo parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_FaceConfigInfo parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_FaceConfigInfo parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_FaceConfigInfo parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input);
        }
        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_FaceConfigInfo parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageLite.parseFrom(
                    DEFAULT_INSTANCE, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_FaceConfigInfo prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        /**
         * <pre>
         *callreturn
         *type:Pb_TYPE_MEET_INTERFACE_MEETFACECONFIG
         *method: query modify
         * </pre>
         *
         * Protobuf type {@code pbui_Type_FaceConfigInfo}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageLite.Builder<
                        com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_FaceConfigInfo, Builder> implements
                // @@protoc_insertion_point(builder_implements:pbui_Type_FaceConfigInfo)
                com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_FaceConfigInfoOrBuilder {
            // Construct using com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_FaceConfigInfo.newBuilder()
            private Builder() {
                super(DEFAULT_INSTANCE);
            }


            /**
             * <code>repeated .pbui_Item_FaceTextItemInfo text = 1;</code>
             */
            public java.util.List<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceTextItemInfo> getTextList() {
                return java.util.Collections.unmodifiableList(
                        instance.getTextList());
            }
            /**
             * <code>repeated .pbui_Item_FaceTextItemInfo text = 1;</code>
             */
            public int getTextCount() {
                return instance.getTextCount();
            }/**
             * <code>repeated .pbui_Item_FaceTextItemInfo text = 1;</code>
             */
            public com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceTextItemInfo getText(int index) {
                return instance.getText(index);
            }
            /**
             * <code>repeated .pbui_Item_FaceTextItemInfo text = 1;</code>
             */
            public Builder setText(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceTextItemInfo value) {
                copyOnWrite();
                instance.setText(index, value);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_FaceTextItemInfo text = 1;</code>
             */
            public Builder setText(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceTextItemInfo.Builder builderForValue) {
                copyOnWrite();
                instance.setText(index, builderForValue);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_FaceTextItemInfo text = 1;</code>
             */
            public Builder addText(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceTextItemInfo value) {
                copyOnWrite();
                instance.addText(value);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_FaceTextItemInfo text = 1;</code>
             */
            public Builder addText(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceTextItemInfo value) {
                copyOnWrite();
                instance.addText(index, value);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_FaceTextItemInfo text = 1;</code>
             */
            public Builder addText(
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceTextItemInfo.Builder builderForValue) {
                copyOnWrite();
                instance.addText(builderForValue);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_FaceTextItemInfo text = 1;</code>
             */
            public Builder addText(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceTextItemInfo.Builder builderForValue) {
                copyOnWrite();
                instance.addText(index, builderForValue);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_FaceTextItemInfo text = 1;</code>
             */
            public Builder addAllText(
                    java.lang.Iterable<? extends com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceTextItemInfo> values) {
                copyOnWrite();
                instance.addAllText(values);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_FaceTextItemInfo text = 1;</code>
             */
            public Builder clearText() {
                copyOnWrite();
                instance.clearText();
                return this;
            }
            /**
             * <code>repeated .pbui_Item_FaceTextItemInfo text = 1;</code>
             */
            public Builder removeText(int index) {
                copyOnWrite();
                instance.removeText(index);
                return this;
            }

            /**
             * <code>repeated .pbui_Item_FacePictureItemInfo picture = 2;</code>
             */
            public java.util.List<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FacePictureItemInfo> getPictureList() {
                return java.util.Collections.unmodifiableList(
                        instance.getPictureList());
            }
            /**
             * <code>repeated .pbui_Item_FacePictureItemInfo picture = 2;</code>
             */
            public int getPictureCount() {
                return instance.getPictureCount();
            }/**
             * <code>repeated .pbui_Item_FacePictureItemInfo picture = 2;</code>
             */
            public com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FacePictureItemInfo getPicture(int index) {
                return instance.getPicture(index);
            }
            /**
             * <code>repeated .pbui_Item_FacePictureItemInfo picture = 2;</code>
             */
            public Builder setPicture(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FacePictureItemInfo value) {
                copyOnWrite();
                instance.setPicture(index, value);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_FacePictureItemInfo picture = 2;</code>
             */
            public Builder setPicture(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FacePictureItemInfo.Builder builderForValue) {
                copyOnWrite();
                instance.setPicture(index, builderForValue);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_FacePictureItemInfo picture = 2;</code>
             */
            public Builder addPicture(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FacePictureItemInfo value) {
                copyOnWrite();
                instance.addPicture(value);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_FacePictureItemInfo picture = 2;</code>
             */
            public Builder addPicture(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FacePictureItemInfo value) {
                copyOnWrite();
                instance.addPicture(index, value);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_FacePictureItemInfo picture = 2;</code>
             */
            public Builder addPicture(
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FacePictureItemInfo.Builder builderForValue) {
                copyOnWrite();
                instance.addPicture(builderForValue);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_FacePictureItemInfo picture = 2;</code>
             */
            public Builder addPicture(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FacePictureItemInfo.Builder builderForValue) {
                copyOnWrite();
                instance.addPicture(index, builderForValue);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_FacePictureItemInfo picture = 2;</code>
             */
            public Builder addAllPicture(
                    java.lang.Iterable<? extends com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FacePictureItemInfo> values) {
                copyOnWrite();
                instance.addAllPicture(values);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_FacePictureItemInfo picture = 2;</code>
             */
            public Builder clearPicture() {
                copyOnWrite();
                instance.clearPicture();
                return this;
            }
            /**
             * <code>repeated .pbui_Item_FacePictureItemInfo picture = 2;</code>
             */
            public Builder removePicture(int index) {
                copyOnWrite();
                instance.removePicture(index);
                return this;
            }

            /**
             * <code>repeated .pbui_Item_FaceOnlyTextItemInfo onlytext = 3;</code>
             */
            public java.util.List<com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceOnlyTextItemInfo> getOnlytextList() {
                return java.util.Collections.unmodifiableList(
                        instance.getOnlytextList());
            }
            /**
             * <code>repeated .pbui_Item_FaceOnlyTextItemInfo onlytext = 3;</code>
             */
            public int getOnlytextCount() {
                return instance.getOnlytextCount();
            }/**
             * <code>repeated .pbui_Item_FaceOnlyTextItemInfo onlytext = 3;</code>
             */
            public com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceOnlyTextItemInfo getOnlytext(int index) {
                return instance.getOnlytext(index);
            }
            /**
             * <code>repeated .pbui_Item_FaceOnlyTextItemInfo onlytext = 3;</code>
             */
            public Builder setOnlytext(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceOnlyTextItemInfo value) {
                copyOnWrite();
                instance.setOnlytext(index, value);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_FaceOnlyTextItemInfo onlytext = 3;</code>
             */
            public Builder setOnlytext(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceOnlyTextItemInfo.Builder builderForValue) {
                copyOnWrite();
                instance.setOnlytext(index, builderForValue);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_FaceOnlyTextItemInfo onlytext = 3;</code>
             */
            public Builder addOnlytext(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceOnlyTextItemInfo value) {
                copyOnWrite();
                instance.addOnlytext(value);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_FaceOnlyTextItemInfo onlytext = 3;</code>
             */
            public Builder addOnlytext(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceOnlyTextItemInfo value) {
                copyOnWrite();
                instance.addOnlytext(index, value);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_FaceOnlyTextItemInfo onlytext = 3;</code>
             */
            public Builder addOnlytext(
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceOnlyTextItemInfo.Builder builderForValue) {
                copyOnWrite();
                instance.addOnlytext(builderForValue);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_FaceOnlyTextItemInfo onlytext = 3;</code>
             */
            public Builder addOnlytext(
                    int index, com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceOnlyTextItemInfo.Builder builderForValue) {
                copyOnWrite();
                instance.addOnlytext(index, builderForValue);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_FaceOnlyTextItemInfo onlytext = 3;</code>
             */
            public Builder addAllOnlytext(
                    java.lang.Iterable<? extends com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceOnlyTextItemInfo> values) {
                copyOnWrite();
                instance.addAllOnlytext(values);
                return this;
            }
            /**
             * <code>repeated .pbui_Item_FaceOnlyTextItemInfo onlytext = 3;</code>
             */
            public Builder clearOnlytext() {
                copyOnWrite();
                instance.clearOnlytext();
                return this;
            }
            /**
             * <code>repeated .pbui_Item_FaceOnlyTextItemInfo onlytext = 3;</code>
             */
            public Builder removeOnlytext(int index) {
                copyOnWrite();
                instance.removeOnlytext(index);
                return this;
            }

            // @@protoc_insertion_point(builder_scope:pbui_Type_FaceConfigInfo)
        }
        @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
        protected final Object dynamicMethod(
                com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
                Object arg0, Object arg1) {
            switch (method) {
                case NEW_MUTABLE_INSTANCE: {
                    return new com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_FaceConfigInfo();
                }
                case IS_INITIALIZED: {
                    return DEFAULT_INSTANCE;
                }
                case MAKE_IMMUTABLE: {
                    text_.makeImmutable();
                    picture_.makeImmutable();
                    onlytext_.makeImmutable();
                    return null;
                }
                case NEW_BUILDER: {
                    return new Builder();
                }
                case VISIT: {
                    Visitor visitor = (Visitor) arg0;
                    com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_FaceConfigInfo other = (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_FaceConfigInfo) arg1;
                    text_= visitor.visitList(text_, other.text_);
                    picture_= visitor.visitList(picture_, other.picture_);
                    onlytext_= visitor.visitList(onlytext_, other.onlytext_);
                    if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                            .INSTANCE) {
                    }
                    return this;
                }
                case MERGE_FROM_STREAM: {
                    com.google.protobuf.CodedInputStream input =
                            (com.google.protobuf.CodedInputStream) arg0;
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                            (com.google.protobuf.ExtensionRegistryLite) arg1;
                    try {
                        boolean done = false;
                        while (!done) {
                            int tag = input.readTag();
                            switch (tag) {
                                case 0:
                                    done = true;
                                    break;
                                default: {
                                    if (!input.skipField(tag)) {
                                        done = true;
                                    }
                                    break;
                                }
                                case 10: {
                                    if (!text_.isModifiable()) {
                                        text_ =
                                                com.google.protobuf.GeneratedMessageLite.mutableCopy(text_);
                                    }
                                    text_.add(
                                            input.readMessage(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceTextItemInfo.parser(), extensionRegistry));
                                    break;
                                }
                                case 18: {
                                    if (!picture_.isModifiable()) {
                                        picture_ =
                                                com.google.protobuf.GeneratedMessageLite.mutableCopy(picture_);
                                    }
                                    picture_.add(
                                            input.readMessage(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FacePictureItemInfo.parser(), extensionRegistry));
                                    break;
                                }
                                case 26: {
                                    if (!onlytext_.isModifiable()) {
                                        onlytext_ =
                                                com.google.protobuf.GeneratedMessageLite.mutableCopy(onlytext_);
                                    }
                                    onlytext_.add(
                                            input.readMessage(com.mogujie.tt.protobuf.InterfaceMain2.pbui_Item_FaceOnlyTextItemInfo.parser(), extensionRegistry));
                                    break;
                                }
                            }
                        }
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        throw new RuntimeException(e.setUnfinishedMessage(this));
                    } catch (java.io.IOException e) {
                        throw new RuntimeException(
                                new com.google.protobuf.InvalidProtocolBufferException(
                                        e.getMessage()).setUnfinishedMessage(this));
                    } finally {
                    }
                }
                // fall through
                case GET_DEFAULT_INSTANCE: {
                    return DEFAULT_INSTANCE;
                }
                case GET_PARSER: {
                    if (PARSER == null) {    synchronized (com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_FaceConfigInfo.class) {
                        if (PARSER == null) {
                            PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                        }
                    }
                    }
                    return PARSER;
                }
            }
            throw new UnsupportedOperationException();
        }


        // @@protoc_insertion_point(class_scope:pbui_Type_FaceConfigInfo)
        private static final com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_FaceConfigInfo DEFAULT_INSTANCE;
        static {
            DEFAULT_INSTANCE = new pbui_Type_FaceConfigInfo();
            DEFAULT_INSTANCE.makeImmutable();
        }

        public static com.mogujie.tt.protobuf.InterfaceMain2.pbui_Type_FaceConfigInfo getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        private static volatile com.google.protobuf.Parser<pbui_Type_FaceConfigInfo> PARSER;

        public static com.google.protobuf.Parser<pbui_Type_FaceConfigInfo> parser() {
            return DEFAULT_INSTANCE.getParserForType();
        }
    }


    static {
    }

    // @@protoc_insertion_point(outer_class_scope)
}
